{"version":3,"sources":["webpack:///webpack/bootstrap 666be653ce65cca28120","webpack:///./src/game.js","webpack:///./src/utility/imports.js","webpack:///./src/utility/animation/animation-factor.js","webpack:///./src/utility/animation/frame-animation.js","webpack:///./src/utility/animation/animation-interface.js","webpack:///./src/utility/animation/spine-animation.js","webpack:///./~/pixi-spine/src/index.js","webpack:///./~/pixi-spine/src/Spine/index.js","webpack:///./~/pixi-spine/src/SpineRuntime/index.js","webpack:///./~/pixi-spine/src/SpineUtil/index.js","webpack:///./~/pixi-spine/src/SpineRuntime/Animation.js","webpack:///./~/pixi-spine/src/SpineRuntime/AnimationStateData.js","webpack:///./~/pixi-spine/src/SpineRuntime/AnimationState.js","webpack:///./~/pixi-spine/src/SpineRuntime/TrackEntry.js","webpack:///./~/pixi-spine/src/SpineRuntime/AtlasAttachmentParser.js","webpack:///./~/pixi-spine/src/SpineRuntime/RegionAttachment.js","webpack:///./~/pixi-spine/src/SpineRuntime/AttachmentType.js","webpack:///./~/pixi-spine/src/SpineRuntime/MeshAttachment.js","webpack:///./~/pixi-spine/src/SpineRuntime/SkinnedMeshAttachment.js","webpack:///./~/pixi-spine/src/SpineRuntime/BoundingBoxAttachment.js","webpack:///./~/pixi-spine/src/SpineRuntime/Atlas.js","webpack:///./~/pixi-spine/src/SpineRuntime/AtlasReader.js","webpack:///./~/pixi-spine/src/SpineRuntime/AtlasPage.js","webpack:///./~/pixi-spine/src/SpineRuntime/AtlasRegion.js","webpack:///./~/pixi-spine/src/loaders/syncImageLoaderAdapter.js","webpack:///./~/pixi-spine/src/SpineRuntime/AttachmentTimeline.js","webpack:///./~/pixi-spine/src/SpineRuntime/Curves.js","webpack:///./~/pixi-spine/src/SpineRuntime/BoneData.js","webpack:///./~/pixi-spine/src/SpineRuntime/Bone.js","webpack:///./~/pixi-spine/src/SpineRuntime/ColorTimeline.js","webpack:///./~/pixi-spine/src/SpineRuntime/DrawOrderTimeline.js","webpack:///./~/pixi-spine/src/SpineRuntime/EventData.js","webpack:///./~/pixi-spine/src/SpineRuntime/Event.js","webpack:///./~/pixi-spine/src/SpineRuntime/EventTimeline.js","webpack:///./~/pixi-spine/src/SpineRuntime/FfdTimeline.js","webpack:///./~/pixi-spine/src/SpineRuntime/FlipXTimeline.js","webpack:///./~/pixi-spine/src/SpineRuntime/FlipYTimeline.js","webpack:///./~/pixi-spine/src/SpineRuntime/IkConstraintData.js","webpack:///./~/pixi-spine/src/SpineRuntime/IkConstraint.js","webpack:///./~/pixi-spine/src/SpineRuntime/IkConstraintTimeline.js","webpack:///./~/pixi-spine/src/SpineRuntime/RotateTimeline.js","webpack:///./~/pixi-spine/src/SpineRuntime/ScaleTimeline.js","webpack:///./~/pixi-spine/src/SpineRuntime/SkeletonBounds.js","webpack:///./~/pixi-spine/src/SpineRuntime/SkeletonData.js","webpack:///./~/pixi-spine/src/SpineRuntime/Skeleton.js","webpack:///./~/pixi-spine/src/SpineRuntime/Slot.js","webpack:///./~/pixi-spine/src/SpineRuntime/SkeletonJsonParser.js","webpack:///./~/pixi-spine/src/SpineRuntime/SlotData.js","webpack:///./~/pixi-spine/src/SpineRuntime/Skin.js","webpack:///./~/pixi-spine/src/SpineRuntime/TranslateTimeline.js","webpack:///./~/pixi-spine/src/loaders/atlasParser.js","webpack:///./~/pixi-spine/src/loaders/imageLoaderAdapter.js","webpack:///./~/pixi-spine/src/loaders/index.js","webpack:///./~/pixi-spine/src/loaders/Loader.js","webpack:///./src/utility/helper.js","webpack:///./src/utility/resource-manager.js","webpack:///./src/utility/render/director.js","webpack:///./src/utility/simple-request.js","webpack:///./src/utility/render/base-world.js","webpack:///./src/utility/render/base-layer.js","webpack:///./src/utility/render/model-layer.js","webpack:///./src/utility/inherited.js","webpack:///./src/utility/eventuality.js","webpack:///./src/game/test-world.js","webpack:///./src/actor/pet-actor.js","webpack:///./src/game-defines.js","webpack:///./src/game/menu-layer.js","webpack:///./src/ui/main-ui.js","webpack:///./src/game-global.js","webpack:///./src/game/info-layer.js","webpack:///./src/ui/info-dialog-ui.js","webpack:///./src/game/test2-world.js","webpack:///./src/resources.js","webpack:///./src/game/skill-list-layer.js","webpack:///./src/ui/skill-list-ui.js","webpack:///./src/game/skill-upgrade-layer.js","webpack:///./src/ui/skill-upgrade-ui.js","webpack:///./src/game/crusade-world.js","webpack:///./src/game/defenseLog-layer.js","webpack:///./src/ui/defenseLog-ui.js","webpack:///./src/game/pet-home/pet-home-world.js","webpack:///./src/ui/pet-home-ui.js"],"names":[],"mappings":"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CA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;;AAEA,oDAAmD,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0CAAyC,OAAO;AAChD;AACA;AACA;;AAEA,kCAAiC,OAAO;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,WAAW;AAC3B,uBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,WAAW;AAC3B,uBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;;;;;AC7VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,OAAO;AACpD;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,WAAW;AAC3D;AACA;AACA;AACA;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,wBAAwB;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA,wBAAuB,wBAAwB;AAC/C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sDAAqD,SAAS;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,gDAA+C,OAAO;AACtD;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA,UAAS;AACT,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA,UAAS;AACT,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA,uBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,mBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA,uBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAmD;AACnD;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;AACb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAmD;AACnD;;AAEA,wDAAuD;AACvD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,OAAO;AAClD;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,0CAAyC,OAAO;AAChD;AACA,MAAK;AACL;AACA;AACA;AACA,4CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxCA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gDAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,OAAO;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD;AACrD;AACA;AACA;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnGA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,sCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrEA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,sCAAqC;;AAErC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8DAA6D,OAAO;AACpE;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA,sCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAc,uDAAuD;AACrE;AACA;AACA;AACA;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,sCAAqC;;AAErC;AACA;;AAEA;AACA;AACA;AACA,4BAA2B,iBAAiB;AAC5C;AACA;AACA;;AAEA;AACA,UAAS;AACT;AACA;AACA;AACA,gCAA+B,iBAAiB;AAChD;AACA,cAAa;AACb,gCAA+B,iBAAiB;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA,UAAS;AACT,4BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,sCAAqC;;AAErC;;AAEA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,sCAAqC;;AAErC;;AAEA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,sCAAqC;;AAErC;;AAEA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA4C,OAAO;AACnD;AACA;;AAEA,wBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,6CAA4C,OAAO;AACnD;AACA;AACA,mDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,+CAA8C,uCAAuC;AACrF;AACA;AACA;AACA,6CAA4C,OAAO;AACnD;AACA;AACA,MAAK;AACL;AACA,oDAAmD,yDAAyD;AAC5G;AACA;AACA;AACA,6CAA4C,OAAO;AACnD;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,2CAA0C,OAAO;AACjD;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,+CAA8C,OAAO;AACrD;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,kDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2DAA0D,OAAO;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA6C,OAAO;AACpD;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA,iCAAgC,yBAAyB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,SAAS;AAC7D;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,0CAAyC,OAAO;AAChD;;AAEA;AACA,kDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,0EAAyE,iDAAiD;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,kDAAiD,OAAO;AACxD;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA,mDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2CAA0C,OAAO;AACjD;AACA;AACA;;AAEA;AACA,oDAAmD,SAAS;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iDAAgD,OAAO;AACvD;AACA;AACA;AACA,iDAAgD,QAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,iDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA,uDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,iBAAiB,uBAAuB;AACvF;AACA,0BAAyB;AACzB;AACA;AACA,4CAA2C,iBAAiB,uBAAuB;AACnF;AACA;AACA;AACA;AACA,iDAAgD,SAAS;AACzD;AACA,8BAA6B;AAC7B,iDAAgD,SAAS;AACzD;AACA;AACA;AACA;AACA;AACA,uEAAsE,SAAS;AAC/E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,OAAO;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,SAAS;AACzD;AACA;AACA;AACA;AACA;AACA,0DAAyD,SAAS;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,SAAS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,OAAO;AACzB;AACA,UAAS;AACT,mBAAkB,OAAO;AACzB;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,yCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;;;;;;;;AC7lBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;;AAGA;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;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","file":"pet_web.all.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 666be653ce65cca28120\n **/","/**\n * Created by wizard on 16/3/7.\n */\n\n//var PIXI = require(\"pixi.js\");\n\nimport {ResourceManager, Helper, Director, SRequest} from \"./utility/imports.js\"\nimport TestWorld from \"./game/test-world.js\"\nimport Test2World from \"./game/test2-world.js\"\nimport CrusadeWorld from \"./game/crusade-world.js\"\nimport gameGlobal from \"./game-global.js\"\nimport defines from \"./game-defines.js\"\nimport resources from \"./resources.js\"\nimport petHome from './game/pet-home/pet-home-world'\n\nwindow.onload = function () {\n  // create an new instance of a pixi stage\n\n  let director = Director.create(defines.Canvas.width, defines.Canvas.height);\n  EZGUI.setRenderer(director.renderer);\n\n  ResourceManager.setResPath(defines.resPath);\n  ResourceManager.loadUI(resources.json_kenney_theme, function () {\n\n\n\n    const  testWorld = TestWorld();\n    testWorld.init();\n    director.startWorld(testWorld);\n    Helper.scaleToWindow(director.renderer, director.runningWorld.node);\n    SRequest.get(defines.gameURL, \"s/Info/GetBag\", {test: 1, name:\"haha\"}, function (data) {\n      console.log('resp 1' + JSON.stringify(data) );\n    });\n\n    SRequest.post(defines.gameURL, \"s/Info/RenamePet\", {\"pet_id\": 1000}, function (data) {\n      console.log('resp 2' + JSON.stringify(data) );\n    })\n    window.addEventListener(\"resize\", function(event){\n      Helper.scaleToWindow(director.renderer, director.runningWorld.node);\n    });\n\n    PIXI.CanvasGraphics\n  });\n\n\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/game.js\n **/","/**\n * Created by wizard on 16/3/30.\n */\n\nimport AnimationFactor from \"./animation/animation-factor.js\"\nimport Helper from \"./helper.js\"\nimport ResourceManager from \"./resource-manager.js\"\nimport Director from \"./render/director.js\"\nimport SRequest from \"./simple-request.js\"\n\nimport BaseWorld from \"./render/base-world.js\"\nimport BaseLayer from \"./render/base-layer.js\"\nimport ModelLayer from \"./render/model-layer.js\"\nimport Eventuality from \"./eventuality.js\"\nimport Inherited from \"./inherited.js\"\n\nexport {\n  AnimationFactor,\n  BaseWorld,\n  BaseLayer,\n  ModelLayer,\n  Eventuality,\n  Inherited,\n  Helper,\n  ResourceManager,\n  Director,\n  SRequest\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utility/imports.js\n **/","/**\n * Created by wizard on 16/3/29.\n */\n\nimport FrameAnimation from './frame-animation.js'\nimport SpineAnimation from'./spine-animation.js'\n\nconst animationFactor = (()=> {\n    var that = {};\n\n    that.createAnimation = function (options) {\n        if (options.type == \"spine\") {\n            return SpineAnimation(options);\n        }\n        else {\n            return FrameAnimation(options);\n        }\n    };\n\n    return that;\n})();\n\nexport default  animationFactor;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utility/animation/animation-factor.js\n **/","/**\n * Created by wizard on 16/3/29.\n */\nimport AnimationInterface from \"./animation-interface.js\"\nvar FrameAnimation = function (spec) {\n  var that = AnimationInterface();\n\n  that.animates = {};\n\n  that.node = new PIXI.Container();\n\n  var _movieClip = null;\n\n  for(var index in spec.animates) {\n    var oneAnimate = spec.animates[index];\n    var frames = [];\n    for(var i=oneAnimate.start; i<= oneAnimate.end; ++i) {\n      frames.push(oneAnimate.pre + \"_\" + i + \".png\");\n    }\n\n    that.animates[index] = {};\n    that.animates[index].frames = frames;\n    if(spec.animates[index].speed != undefined) {\n      that.animates[index].animationSpeed = spec.animates[index].speed;\n    }\n    else {\n      that.animates[index].animationSpeed = 1;\n    }\n    //console.log(\"frame animation:\" + JSON.stringify(that.animates) );\n  }\n\n  (()=>{\n    if(spec.default) {\n      _movieClip= new PIXI.Sprite.fromFrame(spec.default);\n      that.node.addChild(_movieClip);\n      _movieClip.x = -_movieClip.width / 2;\n      _movieClip.y = -_movieClip.height / 2;\n    }\n  })();\n\n  var setupMovieClip = function (frames, speed, isLoop, cb) {\n\n    if(_movieClip) {\n      that.node.removeChild(_movieClip);\n    }\n\n    _movieClip = new PIXI.extras.MovieClip.fromFrames(frames);\n    _movieClip.animationSpeed = speed;\n    _movieClip.loop = isLoop;\n    _movieClip.gotoAndPlay(0);\n\n    if(!isLoop) {\n      _movieClip.onComplete = function () {\n        if(cb) {\n          cb.call(this);\n        }\n      }\n    }\n\n    that.node.addChild(_movieClip);\n    _movieClip.x = -_movieClip.width / 2;\n    _movieClip.y = -_movieClip.height / 2;\n  }\n\n  that.getAnimationNode = function () {\n    console.log('error: virtual getAnimationNode function');\n  };\n\n  that.stop = function (applyCb) {\n    if(applyCb) {\n\n    }\n  }\n\n  that.playOnce = function (actionName, cb) {\n    that.playTimes(actionName, 1, cb);\n  };\n\n  that.playTimes = function (actionName, times, cb) {\n\n    if(!that.animates[actionName] ) {\n      console.log('error: wrong action name' + actionName);\n      return;\n    }\n\n    var frames = [];\n    for(var i=0; i<times; ++i) {\n      frames = frames.concat(that.animates[actionName].frames )\n    }\n\n    setupMovieClip(frames, that.animates[actionName].animationSpeed, false, cb);\n  };\n\n  that.playList = function (actionList, cb) {\n    console.log('error: virtual function');\n  };\n\n  that.playLoop = function (actionName) {\n    if(!that.animates[actionName] ) {\n      console.log('error: wrong action name' + actionName);\n      return;\n    }\n\n    setupMovieClip(that.animates[actionName].frames, that.animates[actionName].animationSpeed, true);\n  };\n\n  that.reset = function () {\n    console.log('error: virtual reset function');\n  };\n\n  that.setVisible = function (isVisible) {\n    that.node.visible = isVisible;\n  };\n\n  that.turnAround = function (faceTo) {\n    console.log('error: virtual  turnAround function');\n  };\n\n  that.setSlotVisible = function (slotName, isVisible) {\n    console.log('error: virtual setSlotVisible function');\n  };\n\n  that.setTimeScale = function (timeScale) {\n    that.node.animationSpeed = timeScale;\n  };\n\n  that.setSkin = function (name) {\n    console.log('error: virtual setSkin function');\n  };\n\n  return that;\n}\n\nexport default FrameAnimation;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utility/animation/frame-animation.js\n **/","/**\n * Created by hewenlong on 16-3-15.\n */\n\nvar AnimationInterface = function (spec) {\n  var that = {};\n\n  that.getAnimationNode = function () {\n    console.log('error: virtual getAnimationNode function');\n  };\n\n  that.stop = function (applyCb) {\n    console.log('error: virtual stop function');\n  }\n\n  that.playOnce = function (actionName, cb) {\n    that.playTimes(actionName, 1, cb);\n  };\n\n  that.playTimes = function (actionName, times, cb) {\n    console.log('error: virtual playTimes function');\n  };\n\n  that.playList = function (actionList, cb) {\n    console.log('error: virtual function');\n  };\n\n  that.playLoop = function (actionName) {\n    console.log('error: virtual playLoop function');\n  };\n\n  that.reset = function () {\n    console.log('error: virtual reset function');\n  };\n\n  that.aimTo = function (direction) {\n    console.log('error: virtual function');\n  };\n\n  that.setVisible = function (isVisible) {\n    console.log('error: virtual setVisible function');\n  };\n\n  that.destroy = function () {\n    console.log('error: virtual destroy function');\n  };\n\n  that.turnAround = function (faceTo) {\n    console.log('error: virtual  turnAround function');\n  };\n\n  that.setSlotVisible = function (slotName, isVisible) {\n    console.log('error: virtual setSlotVisible function');\n  };\n\n  that.setTimeScale = function (timeScale) {\n    console.log('error: virtual setTimeScale function');\n  };\n  that.setSkin = function (name) {\n    console.log('error: virtual setSkin function');\n  };\n  that.setLocalZOrder = function (zOrder) {\n    console.log(\"error: virtual set local zOrder func\");\n  } ;\n\n  return that;\n};\n\nexport default AnimationInterface;\n\n\n/** WEBPACK FOOTER **\n ** ./src/utility/animation/animation-interface.js\n **/","/**\n * Created by hewenlong on 16-3-15.\n */\nimport AnimationInterface from \"./animation-interface.js\";\nconst Spine = require('pixi-spine').Spine;\nvar SpineAnimation = function (spec) {\n    var that = AnimationInterface(spec);\n\n    var _spine = null;\n    var _actionList = [];\n    var _faceTo = 1;\n    that.zOrder = 0;\n    var spineData = spec.spineData;\n\n    that.setSkin = function (skin) {\n        _spine.skeleton.setSkinByName(skin);\n    };\n\n    that.turnAround = function (dir) {\n        var scaleX = _spine.scale.x;\n        _faceTo *= dir;\n        _spine.scale.x = scaleX * _faceTo;\n    };\n\n    that.playLoop = function (action, isSoft) {\n        if (!isSoft) {\n            applyAllCallBack();\n            _spine.skeleton.setToSetupPose();\n            _spine.state.setAnimationByName(0, action, true);\n        } else {\n            _spine.state.addAnimationByName(0, action, true, 0);\n        }\n\n    };\n\n    var applyAllCallBack = function () {\n        while (_actionList.length > 0) {\n            var action = _actionList.shift();\n            if (action.cb) {\n                action.cb();\n            }\n        }\n    };\n\n    that.getAnimationNode = function () {\n        return _spine;\n    };\n\n    that.playTimes = function (action, times, callBack, isSoft) {\n        var list = [];\n        for (var i = 0; i < times; i++) {\n            list.push(action);\n        }\n        that.playList(list, callBack, isSoft);\n    };\n\n    that.playList = function (list, callBack, isSoft) {\n        if (list.length === 0) {\n            if (callBack) {\n                callBack();\n            }\n        }\n        _spine.skeleton.setToSetupPose();\n        var track;\n\n        if (!isSoft) {\n            applyAllCallBack();\n            track = _spine.state.setAnimationByName(0, list[0], false);\n        } else {\n            track = _spine.state.addAnimationByName(0, list[0], false, 0);\n        }\n        if (!track) {\n            if (callBack) {\n                callBack();\n            }\n            return;\n        }\n        for (var i = 1; i < list.length; i++) {\n            _spine.state.addAnimationByName(0, list[i], false, 0);\n        }\n\n        if (callBack) {\n            var data = {\n                waitingCount: list.length,\n                cb: callBack\n            };\n            _actionList.push(data);\n        }\n\n    };\n\n    that.reset = function () {\n        _spine.skeleton.setBonesToSetupPose();\n        _spine.skeleton.setSlotsToSetupPose();\n        _spine.skeleton.clearTracks();\n        _actionList = [];\n    };\n\n    var _onComplete = function () {\n        if (_actionList <= 0) {\n            return;\n        }\n\n        var data = _actionList[0];\n        data.waitingCount--;\n        if (data.waitingCount === 0) {\n            _actionList.shift();\n            data.cb();\n        }\n    };\n\n    var createSpine = function () {\n        _spine = new Spine(spineData);\n\n        if (spec.dir) {\n            that.turnAround(spec.dir);\n        }\n        if (spec.skin) {\n            that.setSkin(spec.skin);\n        }\n\n        _spine.state.onComplete = _onComplete;\n\n        that.node = _spine;\n    };\n    createSpine();\n\n    return that;\n};\n\nexport default SpineAnimation;\n\n\n/** WEBPACK FOOTER **\n ** ./src/utility/animation/spine-animation.js\n **/","/**\r\n * @namespace PIXI.spine\r\n */\r\nmodule.exports = PIXI.spine = {\r\n    Spine:          require('./Spine'),\r\n    SpineRuntime:   require('./SpineRuntime'),\r\n    loaders:        require('./loaders')\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/index.js\n ** module id = 6\n ** module chunks = 0\n **/","var spine = require('../SpineRuntime');\r\nvar atlasParser = require('../loaders/atlasParser');\r\n\r\n/* Esoteric Software SPINE wrapper for pixi.js */\r\nspine.Bone.yDown = true;\r\n\r\n/**\r\n * A class that enables the you to import and run your spine animations in pixi.\r\n * The Spine animation data needs to be loaded using either the Loader or a SpineLoader before it can be used by this class\r\n * See example 12 (http://www.goodboydigital.com/pixijs/examples/12/) to see a working example and check out the source\r\n *\r\n * ```js\r\n * var spineAnimation = new PIXI.Spine(spineData);\r\n * ```\r\n *\r\n * @class\r\n * @extends Container\r\n * @memberof PIXI.spine\r\n * @param spineData {object} The spine data loaded from a spine atlas.\r\n */\r\nfunction Spine(spineData)\r\n{\r\n    PIXI.Container.call(this);\r\n\r\n    if (!spineData)\r\n    {\r\n        throw new Error('The spineData param is required.');\r\n    }\r\n\r\n    if ((typeof spineData) === \"string\")\r\n    {\r\n        throw new Error('spineData param cant be string. Please use PIXI.spine.Spine.fromAtlas(\"YOUR_RESOURCE_NAME\") from now on.');\r\n    }\r\n\r\n    /**\r\n     * The spineData object\r\n     *\r\n     * @member {object}\r\n     */\r\n    this.spineData = spineData;\r\n\r\n    /**\r\n     * A spine Skeleton object\r\n     *\r\n     * @member {object}\r\n     */\r\n    this.skeleton = new spine.Skeleton(spineData);\r\n    this.skeleton.updateWorldTransform();\r\n\r\n    /**\r\n     * A spine AnimationStateData object created from the spine data passed in the constructor\r\n     *\r\n     * @member {object}\r\n     */\r\n    this.stateData = new spine.AnimationStateData(spineData);\r\n\r\n    /**\r\n     * A spine AnimationState object created from the spine AnimationStateData object\r\n     *\r\n     * @member {object}\r\n     */\r\n    this.state = new spine.AnimationState(this.stateData);\r\n\r\n    /**\r\n     * An array of containers\r\n     *\r\n     * @member {Container[]}\r\n     */\r\n    this.slotContainers = [];\r\n\r\n    for (var i = 0, n = this.skeleton.slots.length; i < n; i++)\r\n    {\r\n        var slot = this.skeleton.slots[i];\r\n        var attachment = slot.attachment;\r\n        var slotContainer = new PIXI.Container();\r\n        this.slotContainers.push(slotContainer);\r\n        this.addChild(slotContainer);\r\n\r\n        if (attachment instanceof spine.RegionAttachment)\r\n        {\r\n            var spriteName = attachment.rendererObject.name;\r\n            var sprite = this.createSprite(slot, attachment);\r\n            slot.currentSprite = sprite;\r\n            slot.currentSpriteName = spriteName;\r\n            slotContainer.addChild(sprite);\r\n        }\r\n        else if (attachment instanceof spine.MeshAttachment)\r\n        {\r\n            var mesh = this.createMesh(slot, attachment);\r\n            slot.currentMesh = mesh;\r\n            slot.currentMeshName = attachment.name;\r\n            slotContainer.addChild(mesh);\r\n        }\r\n        else\r\n        {\r\n            continue;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Should the Spine object update its transforms\r\n     *\r\n     * @member {boolean}\r\n     */\r\n    this.autoUpdate = true;\r\n}\r\n\r\nSpine.fromAtlas = function(resourceName) {\r\n    var skeletonData = atlasParser.AnimCache[resourceName];\r\n\r\n    if (!skeletonData)\r\n    {\r\n        throw new Error('Spine data \"' + resourceName + '\" does not exist in the animation cache');\r\n    }\r\n\r\n    return new Spine(skeletonData);\r\n}\r\n\r\nSpine.prototype = Object.create(PIXI.Container.prototype);\r\nSpine.prototype.constructor = Spine;\r\nmodule.exports = Spine;\r\n\r\nSpine.globalAutoUpdate = true;\r\n\r\nObject.defineProperties(Spine.prototype, {\r\n    /**\r\n     * If this flag is set to true, the spine animation will be autoupdated every time\r\n     * the object id drawn. The down side of this approach is that the delta time is\r\n     * automatically calculated and you could miss out on cool effects like slow motion,\r\n     * pause, skip ahead and the sorts. Most of these effects can be achieved even with\r\n     * autoupdate enabled but are harder to achieve.\r\n     *\r\n     * @member {boolean}\r\n     * @memberof Spine#\r\n     * @default true\r\n     */\r\n    autoUpdate: {\r\n        get: function ()\r\n        {\r\n            return (this.updateTransform === Spine.prototype.autoUpdateTransform);\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.updateTransform = value ? Spine.prototype.autoUpdateTransform : PIXI.Container.prototype.updateTransform;\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Update the spine skeleton and its animations by delta time (dt)\r\n *\r\n * @param dt {number} Delta time. Time by which the animation should be updated\r\n */\r\nSpine.prototype.update = function (dt)\r\n{\r\n    this.state.update(dt);\r\n    this.state.apply(this.skeleton);\r\n    this.skeleton.updateWorldTransform();\r\n\r\n    var drawOrder = this.skeleton.drawOrder;\r\n    var slots = this.skeleton.slots;\r\n\r\n    for (var i = 0, n = drawOrder.length; i < n; i++)\r\n    {\r\n        this.children[i] = this.slotContainers[drawOrder[i]];\r\n    }\r\n\r\n    for (i = 0, n = slots.length; i < n; i++)\r\n    {\r\n        var slot = slots[i];\r\n        var attachment = slot.attachment;\r\n        var slotContainer = this.slotContainers[i];\r\n\r\n        if (!attachment)\r\n        {\r\n            slotContainer.visible = false;\r\n            continue;\r\n        }\r\n\r\n        var type = attachment.type;\r\n        if (type === spine.AttachmentType.region)\r\n        {\r\n            if (attachment.rendererObject)\r\n            {\r\n                if (!slot.currentSpriteName || slot.currentSpriteName !== attachment.rendererObject.name)\r\n                {\r\n                    var spriteName = attachment.rendererObject.name;\r\n                    if (slot.currentSprite !== undefined)\r\n                    {\r\n                        slot.currentSprite.visible = false;\r\n                    }\r\n                    slot.sprites = slot.sprites || {};\r\n                    if (slot.sprites[spriteName] !== undefined)\r\n                    {\r\n                        slot.sprites[spriteName].visible = true;\r\n                    }\r\n                    else\r\n                    {\r\n                        var sprite = this.createSprite(slot, attachment);\r\n                        slotContainer.addChild(sprite);\r\n                    }\r\n                    slot.currentSprite = slot.sprites[spriteName];\r\n                    slot.currentSpriteName = spriteName;\r\n                }\r\n            }\r\n\r\n            var bone = slot.bone;\r\n\r\n            slotContainer.position.x = bone.worldX + attachment.x * bone.m00 + attachment.y * bone.m01;\r\n            slotContainer.position.y = bone.worldY + attachment.x * bone.m10 + attachment.y * bone.m11;\r\n            slotContainer.scale.x = bone.worldScaleX;\r\n            slotContainer.scale.y = bone.worldScaleY;\r\n            slotContainer.rotation = -(slot.bone.worldRotation * spine.degRad);\r\n            if (bone.worldFlipX) {\r\n                slotContainer.scale.x = -slotContainer.scale.x;\r\n                slotContainer.rotation = -slotContainer.rotation;\r\n            }\r\n            if (bone.worldFlipY == spine.Bone.yDown) {\r\n                slotContainer.scale.y = -slotContainer.scale.y;\r\n                slotContainer.rotation = -slotContainer.rotation;\r\n            }\r\n            slot.currentSprite.blendMode = slot.blendMode;\r\n            slot.currentSprite.tint = PIXI.utils.rgb2hex([slot.r,slot.g,slot.b]);\r\n        }\r\n        else if (type === spine.AttachmentType.skinnedmesh || type === spine.AttachmentType.mesh)\r\n        {\r\n            if (!slot.currentMeshName || slot.currentMeshName !== attachment.name)\r\n            {\r\n                var meshName = attachment.name;\r\n                if (slot.currentMesh !== undefined)\r\n                {\r\n                    slot.currentMesh.visible = false;\r\n                }\r\n\r\n                slot.meshes = slot.meshes || {};\r\n\r\n                if (slot.meshes[meshName] !== undefined)\r\n                {\r\n                    slot.meshes[meshName].visible = true;\r\n                }\r\n                else\r\n                {\r\n                    var mesh = this.createMesh(slot, attachment);\r\n                    slotContainer.addChild(mesh);\r\n                }\r\n\r\n                slot.currentMesh = slot.meshes[meshName];\r\n                slot.currentMeshName = meshName;\r\n            }\r\n\r\n            attachment.computeWorldVertices(slot.bone.skeleton.x, slot.bone.skeleton.y, slot, slot.currentMesh.vertices);\r\n\r\n        }\r\n        else\r\n        {\r\n            slotContainer.visible = false;\r\n            continue;\r\n        }\r\n        slotContainer.visible = true;\r\n\r\n        slotContainer.alpha = slot.a;\r\n    }\r\n};\r\n\r\n/**\r\n * When autoupdate is set to yes this function is used as pixi's updateTransform function\r\n *\r\n * @private\r\n */\r\nSpine.prototype.autoUpdateTransform = function ()\r\n{\r\n    if (Spine.globalAutoUpdate) {\r\n        this.lastTime = this.lastTime || Date.now();\r\n        var timeDelta = (Date.now() - this.lastTime) * 0.001;\r\n        this.lastTime = Date.now();\r\n        this.update(timeDelta);\r\n    } else {\r\n        this.lastTime = 0;\r\n    }\r\n\r\n    PIXI.Container.prototype.updateTransform.call(this);\r\n};\r\n\r\n/**\r\n * Create a new sprite to be used with spine.RegionAttachment\r\n *\r\n * @param slot {spine.Slot} The slot to which the attachment is parented\r\n * @param attachment {spine.RegionAttachment} The attachment that the sprite will represent\r\n * @private\r\n */\r\nSpine.prototype.createSprite = function (slot, attachment)\r\n{\r\n    var descriptor = attachment.rendererObject;\r\n    var baseTexture = descriptor.page.rendererObject;\r\n    var spriteRect = new PIXI.Rectangle(descriptor.x,\r\n                                        descriptor.y,\r\n                                        descriptor.rotate ? descriptor.height : descriptor.width,\r\n                                        descriptor.rotate ? descriptor.width : descriptor.height);\r\n    var spriteTexture = new PIXI.Texture(baseTexture, spriteRect);\r\n    var sprite = new PIXI.Sprite(spriteTexture);\r\n\r\n    var baseRotation = descriptor.rotate ? Math.PI * 0.5 : 0.0;\r\n    sprite.scale.x = attachment.width / descriptor.originalWidth * attachment.scaleX;\r\n    sprite.scale.y = attachment.height / descriptor.originalHeight * attachment.scaleY;\r\n    sprite.rotation = baseRotation - (attachment.rotation * spine.degRad);\r\n    sprite.anchor.x = (0.5 * descriptor.originalWidth - descriptor.offsetX) / descriptor.width;\r\n    sprite.anchor.y = 1.0 - ((0.5 * descriptor.originalHeight - descriptor.offsetY) / descriptor.height);\r\n    sprite.alpha = attachment.a;\r\n\r\n    if (descriptor.rotate) {\r\n        var x1 = sprite.scale.x;\r\n        sprite.scale.x = sprite.scale.y;\r\n        sprite.scale.y = x1;\r\n    }\r\n\r\n    slot.sprites = slot.sprites || {};\r\n    slot.sprites[descriptor.name] = sprite;\r\n    return sprite;\r\n};\r\n\r\n/**\r\n * Creates a Strip from the spine data\r\n * @param slot {spine.Slot} The slot to which the attachment is parented\r\n * @param attachment {spine.RegionAttachment} The attachment that the sprite will represent\r\n * @private\r\n */\r\nSpine.prototype.createMesh = function (slot, attachment)\r\n{\r\n    var descriptor = attachment.rendererObject;\r\n    var baseTexture = descriptor.page.rendererObject;\r\n    var texture = new PIXI.Texture(baseTexture);\r\n\r\n    var strip = new PIXI.mesh.Mesh(\r\n        texture,\r\n        new Float32Array(attachment.uvs.length),\r\n        new Float32Array(attachment.uvs),\r\n        new Uint16Array(attachment.triangles),\r\n        PIXI.mesh.Mesh.DRAW_MODES.TRIANGLES);\r\n\r\n    strip.canvasPadding = 1.5;\r\n\r\n    strip.alpha = attachment.a;\r\n\r\n    slot.meshes = slot.meshes || {};\r\n    slot.meshes[attachment.name] = strip;\r\n\r\n    return strip;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/Spine/index.js\n ** module id = 7\n ** module chunks = 0\n **/","/******************************************************************************\n * Spine Runtimes Software License\n * Version 2.1\n *\n * Copyright (c) 2013, Esoteric Software\n * All rights reserved.\n *\n * You are granted a perpetual, non-exclusive, non-sublicensable and\n * non-transferable license to install, execute and perform the Spine Runtimes\n * Software (the \"Software\") solely for internal use. Without the written\n * permission of Esoteric Software (typically granted by licensing Spine), you\n * may not (a) modify, translate, adapt or otherwise create derivative works,\n * improvements of the Software or develop new applications using the Software\n * or (b) remove, delete, alter or obscure any trademarks or any copyright,\n * trademark, patent or other intellectual property or proprietary rights\n * notices on or in the Software, including any copy thereof. Redistributions\n * in binary or source form must include this license and terms.\n *\n * THIS SOFTWARE IS PROVIDED BY ESOTERIC SOFTWARE \"AS IS\" AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n * EVENT SHALL ESOTERIC SOFTARE BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nvar spine = require('../SpineUtil');\nspine.Animation = require('./Animation');\nspine.AnimationStateData = require('./AnimationStateData');\nspine.AnimationState = require('./AnimationState');\nspine.AtlasAttachmentParser = require('./AtlasAttachmentParser');\nspine.Atlas = require('./Atlas');\nspine.AtlasPage = require('./AtlasPage');\nspine.AtlasReader = require('./AtlasReader');\nspine.AtlasRegion = require('./AtlasRegion');\nspine.AttachmentTimeline = require('./AttachmentTimeline');\nspine.AttachmentType = require('./AttachmentType');\nspine.BoneData = require('./BoneData');\nspine.Bone = require('./Bone');\nspine.BoundingBoxAttachment = require('./BoundingBoxAttachment');\nspine.ColorTimeline = require('./ColorTimeline');\nspine.Curves = require('./Curves');\nspine.DrawOrderTimeline = require('./DrawOrderTimeline');\nspine.EventData = require('./EventData');\nspine.Event = require('./Event');\nspine.EventTimeline = require('./EventTimeline');\nspine.FfdTimeline = require('./FfdTimeline');\nspine.FlipXTimeline = require('./FlipXTimeline');\nspine.FlipYTimeline = require('./FlipYTimeline');\nspine.IkConstraintData = require('./IkConstraintData');\nspine.IkConstraint = require('./IkConstraint');\nspine.IkConstraintTimeline = require('./IkConstraintTimeline');\nspine.MeshAttachment = require('./MeshAttachment');\nspine.RegionAttachment = require('./RegionAttachment');\nspine.RotateTimeline = require('./RotateTimeline');\nspine.ScaleTimeline = require('./ScaleTimeline');\nspine.SkeletonBounds = require('./SkeletonBounds');\nspine.SkeletonData = require('./SkeletonData');\nspine.Skeleton = require('./Skeleton');\nspine.SkeletonJsonParser = require('./SkeletonJsonParser');\nspine.Skin = require('./Skin.js');\nspine.SkinnedMeshAttachment = require('./SkinnedMeshAttachment');\nspine.SlotData = require('./SlotData');\nspine.Slot = require('./Slot');\nspine.TrackEntry = require('./TrackEntry');\nspine.TranslateTimeline = require('./TranslateTimeline');\nmodule.exports = spine;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/index.js\n ** module id = 8\n ** module chunks = 0\n **/","module.exports = {\r\n    radDeg: 180 / Math.PI,\r\n    degRad: Math.PI / 180,\r\n    temp: [],\r\n    Float32Array: (typeof(Float32Array) === 'undefined') ? Array : Float32Array,\r\n    Uint16Array: (typeof(Uint16Array) === 'undefined') ? Array : Uint16Array\r\n};\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineUtil/index.js\n ** module id = 9\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.Animation = function (name, timelines, duration)\r\n{\r\n    this.name = name;\r\n    this.timelines = timelines;\r\n    this.duration = duration;\r\n};\r\nspine.Animation.prototype = {\r\n    apply: function (skeleton, lastTime, time, loop, events)\r\n    {\r\n        if (loop && this.duration != 0)\r\n        {\r\n            time %= this.duration;\r\n            lastTime %= this.duration;\r\n        }\r\n        var timelines = this.timelines;\r\n        for (var i = 0, n = timelines.length; i < n; i++)\r\n            timelines[i].apply(skeleton, lastTime, time, events, 1);\r\n    },\r\n    mix: function (skeleton, lastTime, time, loop, events, alpha)\r\n    {\r\n        if (loop && this.duration != 0)\r\n        {\r\n            time %= this.duration;\r\n            lastTime %= this.duration;\r\n        }\r\n        var timelines = this.timelines;\r\n        for (var i = 0, n = timelines.length; i < n; i++)\r\n            timelines[i].apply(skeleton, lastTime, time, events, alpha);\r\n    }\r\n};\r\nspine.Animation.binarySearch = function (values, target, step)\r\n{\r\n    var low = 0;\r\n    var high = Math.floor(values.length / step) - 2;\r\n    if (!high) return step;\r\n    var current = high >>> 1;\r\n    while (true)\r\n    {\r\n        if (values[(current + 1) * step] <= target)\r\n            low = current + 1;\r\n        else\r\n            high = current;\r\n        if (low == high) return (low + 1) * step;\r\n        current = (low + high) >>> 1;\r\n    }\r\n};\r\nspine.Animation.binarySearch1 = function (values, target)\r\n{\r\n    var low = 0;\r\n    var high = values.length - 2;\r\n    if (!high) return 1;\r\n    var current = high >>> 1;\r\n    while (true)\r\n    {\r\n        if (values[current + 1] <= target)\r\n            low = current + 1;\r\n        else\r\n            high = current;\r\n        if (low == high) return low + 1;\r\n        current = (low + high) >>> 1;\r\n    }\r\n};\r\nspine.Animation.linearSearch = function (values, target, step)\r\n{\r\n    for (var i = 0, last = values.length - step; i <= last; i += step)\r\n        if (values[i] > target) return i;\r\n    return -1;\r\n};\r\nmodule.exports = spine.Animation;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/Animation.js\n ** module id = 10\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.AnimationStateData = function (skeletonData)\r\n{\r\n    this.skeletonData = skeletonData;\r\n    this.animationToMixTime = {};\r\n};\r\nspine.AnimationStateData.prototype = {\r\n    defaultMix: 0,\r\n    setMixByName: function (fromName, toName, duration)\r\n    {\r\n        var from = this.skeletonData.findAnimation(fromName);\r\n        if (!from) throw \"Animation not found: \" + fromName;\r\n        var to = this.skeletonData.findAnimation(toName);\r\n        if (!to) throw \"Animation not found: \" + toName;\r\n        this.setMix(from, to, duration);\r\n    },\r\n    setMix: function (from, to, duration)\r\n    {\r\n        this.animationToMixTime[from.name + \":\" + to.name] = duration;\r\n    },\r\n    getMix: function (from, to)\r\n    {\r\n        var key = from.name + \":\" + to.name;\r\n        return this.animationToMixTime.hasOwnProperty(key) ? this.animationToMixTime[key] : this.defaultMix;\r\n    }\r\n};\r\nmodule.exports = spine.AnimationStateData;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/AnimationStateData.js\n ** module id = 11\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.TrackEntry = require('./TrackEntry');\r\nspine.AnimationState = function (stateData)\r\n{\r\n    this.data = stateData;\r\n    this.tracks = [];\r\n    this.events = [];\r\n};\r\nspine.AnimationState.prototype = {\r\n    onStart: null,\r\n    onEnd: null,\r\n    onComplete: null,\r\n    onEvent: null,\r\n    timeScale: 1,\r\n    update: function (delta)\r\n    {\r\n        delta *= this.timeScale;\r\n        for (var i = 0; i < this.tracks.length; i++)\r\n        {\r\n            var current = this.tracks[i];\r\n            if (!current) continue;\r\n\r\n            current.time += delta * current.timeScale;\r\n            if (current.previous)\r\n            {\r\n                var previousDelta = delta * current.previous.timeScale;\r\n                current.previous.time += previousDelta;\r\n                current.mixTime += previousDelta;\r\n            }\r\n\r\n            var next = current.next;\r\n            if (next)\r\n            {\r\n                next.time = current.lastTime - next.delay;\r\n                if (next.time >= 0) this.setCurrent(i, next);\r\n            } else {\r\n                // End non-looping animation when it reaches its end time and there is no next entry.\r\n                if (!current.loop && current.lastTime >= current.endTime) this.clearTrack(i);\r\n            }\r\n        }\r\n    },\r\n    apply: function (skeleton)\r\n    {\r\n        skeleton.resetDrawOrder();\r\n\r\n        for (var i = 0; i < this.tracks.length; i++)\r\n        {\r\n            var current = this.tracks[i];\r\n            if (!current) continue;\r\n\r\n            this.events.length = 0;\r\n\r\n            var time = current.time;\r\n            var lastTime = current.lastTime;\r\n            var endTime = current.endTime;\r\n            var loop = current.loop;\r\n            if (!loop && time > endTime) time = endTime;\r\n\r\n            var previous = current.previous;\r\n            if (!previous)\r\n            {\r\n                if (current.mix == 1)\r\n                    current.animation.apply(skeleton, current.lastTime, time, loop, this.events);\r\n                else\r\n                    current.animation.mix(skeleton, current.lastTime, time, loop, this.events, current.mix);\r\n            } else {\r\n                var previousTime = previous.time;\r\n                if (!previous.loop && previousTime > previous.endTime) previousTime = previous.endTime;\r\n                previous.animation.apply(skeleton, previousTime, previousTime, previous.loop, null);\r\n\r\n                var alpha = current.mixTime / current.mixDuration * current.mix;\r\n                if (alpha >= 1)\r\n                {\r\n                    alpha = 1;\r\n                    current.previous = null;\r\n                }\r\n                current.animation.mix(skeleton, current.lastTime, time, loop, this.events, alpha);\r\n            }\r\n\r\n            for (var ii = 0, nn = this.events.length; ii < nn; ii++)\r\n            {\r\n                var event = this.events[ii];\r\n                if (current.onEvent) current.onEvent(i, event);\r\n                if (this.onEvent) this.onEvent(i, event);\r\n            }\r\n\r\n            // Check if completed the animation or a loop iteration.\r\n            if (loop ? (lastTime % endTime > time % endTime) : (lastTime < endTime && time >= endTime))\r\n            {\r\n                var count = Math.floor(time / endTime);\r\n                if (current.onComplete) current.onComplete(i, count);\r\n                if (this.onComplete) this.onComplete(i, count);\r\n            }\r\n\r\n            current.lastTime = current.time;\r\n        }\r\n    },\r\n    clearTracks: function ()\r\n    {\r\n        for (var i = 0, n = this.tracks.length; i < n; i++)\r\n            this.clearTrack(i);\r\n        this.tracks.length = 0;\r\n    },\r\n    clearTrack: function (trackIndex)\r\n    {\r\n        if (trackIndex >= this.tracks.length) return;\r\n        var current = this.tracks[trackIndex];\r\n        if (!current) return;\r\n\r\n        if (current.onEnd) current.onEnd(trackIndex);\r\n        if (this.onEnd) this.onEnd(trackIndex);\r\n\r\n        this.tracks[trackIndex] = null;\r\n    },\r\n    _expandToIndex: function (index)\r\n    {\r\n        if (index < this.tracks.length) return this.tracks[index];\r\n        while (index >= this.tracks.length)\r\n            this.tracks.push(null);\r\n        return null;\r\n    },\r\n    setCurrent: function (index, entry)\r\n    {\r\n        var current = this._expandToIndex(index);\r\n        if (current)\r\n        {\r\n            var previous = current.previous;\r\n            current.previous = null;\r\n\r\n            if (current.onEnd) current.onEnd(index);\r\n            if (this.onEnd) this.onEnd(index);\r\n\r\n            entry.mixDuration = this.data.getMix(current.animation, entry.animation);\r\n            if (entry.mixDuration > 0)\r\n            {\r\n                entry.mixTime = 0;\r\n                // If a mix is in progress, mix from the closest animation.\r\n                if (previous && current.mixTime / current.mixDuration < 0.5)\r\n                    entry.previous = previous;\r\n                else\r\n                    entry.previous = current;\r\n            }\r\n        }\r\n\r\n        this.tracks[index] = entry;\r\n\r\n        if (entry.onStart) entry.onStart(index);\r\n        if (this.onStart) this.onStart(index);\r\n    },\r\n    setAnimationByName: function (trackIndex, animationName, loop)\r\n    {\r\n        var animation = this.data.skeletonData.findAnimation(animationName);\r\n        if (!animation) throw \"Animation not found: \" + animationName;\r\n        return this.setAnimation(trackIndex, animation, loop);\r\n    },\r\n    /** Set the current animation. Any queued animations are cleared. */\r\n    setAnimation: function (trackIndex, animation, loop)\r\n    {\r\n        var entry = new spine.TrackEntry();\r\n        entry.animation = animation;\r\n        entry.loop = loop;\r\n        entry.endTime = animation.duration;\r\n        this.setCurrent(trackIndex, entry);\r\n        return entry;\r\n    },\r\n    addAnimationByName: function (trackIndex, animationName, loop, delay)\r\n    {\r\n        var animation = this.data.skeletonData.findAnimation(animationName);\r\n        if (!animation) throw \"Animation not found: \" + animationName;\r\n        return this.addAnimation(trackIndex, animation, loop, delay);\r\n    },\r\n    /** Adds an animation to be played delay seconds after the current or last queued animation.\r\n     * @param delay May be <= 0 to use duration of previous animation minus any mix duration plus the negative delay. */\r\n    addAnimation: function (trackIndex, animation, loop, delay)\r\n    {\r\n        var entry = new spine.TrackEntry();\r\n        entry.animation = animation;\r\n        entry.loop = loop;\r\n        entry.endTime = animation.duration;\r\n\r\n        var last = this._expandToIndex(trackIndex);\r\n        if (last)\r\n        {\r\n            while (last.next)\r\n                last = last.next;\r\n            last.next = entry;\r\n        } else\r\n            this.tracks[trackIndex] = entry;\r\n\r\n        if (delay <= 0)\r\n        {\r\n            if (last)\r\n                delay += last.endTime - this.data.getMix(last.animation, animation);\r\n            else\r\n                delay = 0;\r\n        }\r\n        entry.delay = delay;\r\n\r\n        return entry;\r\n    },\r\n    /** May be null. */\r\n    getCurrent: function (trackIndex)\r\n    {\r\n        if (trackIndex >= this.tracks.length) return null;\r\n        return this.tracks[trackIndex];\r\n    }\r\n};\r\nmodule.exports = spine.AnimationState;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/AnimationState.js\n ** module id = 12\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.TrackEntry = function ()\r\n{};\r\nspine.TrackEntry.prototype = {\r\n    next: null, previous: null,\r\n    animation: null,\r\n    loop: false,\r\n    delay: 0, time: 0, lastTime: -1, endTime: 0,\r\n    timeScale: 1,\r\n    mixTime: 0, mixDuration: 0, mix: 1,\r\n    onStart: null, onEnd: null, onComplete: null, onEvent: null\r\n};\r\nmodule.exports = spine.TrackEntry;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/TrackEntry.js\n ** module id = 13\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.RegionAttachment = require('./RegionAttachment');\r\nspine.MeshAttachment = require('./MeshAttachment');\r\nspine.SkinnedMeshAttachment = require('./SkinnedMeshAttachment');\r\nspine.BoundingBoxAttachment = require('./BoundingBoxAttachment');\r\nspine.AtlasAttachmentParser = function (atlas)\r\n{\r\n    this.atlas = atlas;\r\n};\r\nspine.AtlasAttachmentParser.prototype = {\r\n    newRegionAttachment: function (skin, name, path)\r\n    {\r\n        var region = this.atlas.findRegion(path);\r\n        if (!region) throw \"Region not found in atlas: \" + path + \" (region attachment: \" + name + \")\";\r\n        var attachment = new spine.RegionAttachment(name);\r\n        attachment.rendererObject = region;\r\n        attachment.setUVs(region.u, region.v, region.u2, region.v2, region.rotate);\r\n        attachment.regionOffsetX = region.offsetX;\r\n        attachment.regionOffsetY = region.offsetY;\r\n        attachment.regionWidth = region.width;\r\n        attachment.regionHeight = region.height;\r\n        attachment.regionOriginalWidth = region.originalWidth;\r\n        attachment.regionOriginalHeight = region.originalHeight;\r\n        return attachment;\r\n    },\r\n    newMeshAttachment: function (skin, name, path)\r\n    {\r\n        var region = this.atlas.findRegion(path);\r\n        if (!region) throw \"Region not found in atlas: \" + path + \" (mesh attachment: \" + name + \")\";\r\n        var attachment = new spine.MeshAttachment(name);\r\n        attachment.rendererObject = region;\r\n        attachment.regionU = region.u;\r\n        attachment.regionV = region.v;\r\n        attachment.regionU2 = region.u2;\r\n        attachment.regionV2 = region.v2;\r\n        attachment.regionRotate = region.rotate;\r\n        attachment.regionOffsetX = region.offsetX;\r\n        attachment.regionOffsetY = region.offsetY;\r\n        attachment.regionWidth = region.width;\r\n        attachment.regionHeight = region.height;\r\n        attachment.regionOriginalWidth = region.originalWidth;\r\n        attachment.regionOriginalHeight = region.originalHeight;\r\n        return attachment;\r\n    },\r\n    newSkinnedMeshAttachment: function (skin, name, path)\r\n    {\r\n        var region = this.atlas.findRegion(path);\r\n        if (!region) throw \"Region not found in atlas: \" + path + \" (skinned mesh attachment: \" + name + \")\";\r\n        var attachment = new spine.SkinnedMeshAttachment(name);\r\n        attachment.rendererObject = region;\r\n        attachment.regionU = region.u;\r\n        attachment.regionV = region.v;\r\n        attachment.regionU2 = region.u2;\r\n        attachment.regionV2 = region.v2;\r\n        attachment.regionRotate = region.rotate;\r\n        attachment.regionOffsetX = region.offsetX;\r\n        attachment.regionOffsetY = region.offsetY;\r\n        attachment.regionWidth = region.width;\r\n        attachment.regionHeight = region.height;\r\n        attachment.regionOriginalWidth = region.originalWidth;\r\n        attachment.regionOriginalHeight = region.originalHeight;\r\n        return attachment;\r\n    },\r\n    newBoundingBoxAttachment: function (skin, name)\r\n    {\r\n        return new spine.BoundingBoxAttachment(name);\r\n    }\r\n};\r\nmodule.exports = spine.AtlasAttachmentParser;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/AtlasAttachmentParser.js\n ** module id = 14\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.AttachmentType = require('./AttachmentType');\r\nspine.RegionAttachment = function (name)\r\n{\r\n    this.name = name;\r\n    this.offset = [];\r\n    this.offset.length = 8;\r\n    this.uvs = [];\r\n    this.uvs.length = 8;\r\n};\r\nspine.RegionAttachment.prototype = {\r\n    type: spine.AttachmentType.region,\r\n    x: 0, y: 0,\r\n    rotation: 0,\r\n    scaleX: 1, scaleY: 1,\r\n    width: 0, height: 0,\r\n    r: 1, g: 1, b: 1, a: 1,\r\n    path: null,\r\n    rendererObject: null,\r\n    regionOffsetX: 0, regionOffsetY: 0,\r\n    regionWidth: 0, regionHeight: 0,\r\n    regionOriginalWidth: 0, regionOriginalHeight: 0,\r\n    setUVs: function (u, v, u2, v2, rotate)\r\n    {\r\n        var uvs = this.uvs;\r\n        if (rotate)\r\n        {\r\n            uvs[2/*X2*/] = u;\r\n            uvs[3/*Y2*/] = v2;\r\n            uvs[4/*X3*/] = u;\r\n            uvs[5/*Y3*/] = v;\r\n            uvs[6/*X4*/] = u2;\r\n            uvs[7/*Y4*/] = v;\r\n            uvs[0/*X1*/] = u2;\r\n            uvs[1/*Y1*/] = v2;\r\n        } else {\r\n            uvs[0/*X1*/] = u;\r\n            uvs[1/*Y1*/] = v2;\r\n            uvs[2/*X2*/] = u;\r\n            uvs[3/*Y2*/] = v;\r\n            uvs[4/*X3*/] = u2;\r\n            uvs[5/*Y3*/] = v;\r\n            uvs[6/*X4*/] = u2;\r\n            uvs[7/*Y4*/] = v2;\r\n        }\r\n    },\r\n    updateOffset: function ()\r\n    {\r\n        var regionScaleX = this.width / this.regionOriginalWidth * this.scaleX;\r\n        var regionScaleY = this.height / this.regionOriginalHeight * this.scaleY;\r\n        var localX = -this.width / 2 * this.scaleX + this.regionOffsetX * regionScaleX;\r\n        var localY = -this.height / 2 * this.scaleY + this.regionOffsetY * regionScaleY;\r\n        var localX2 = localX + this.regionWidth * regionScaleX;\r\n        var localY2 = localY + this.regionHeight * regionScaleY;\r\n        var radians = this.rotation * spine.degRad;\r\n        var cos = Math.cos(radians);\r\n        var sin = Math.sin(radians);\r\n        var localXCos = localX * cos + this.x;\r\n        var localXSin = localX * sin;\r\n        var localYCos = localY * cos + this.y;\r\n        var localYSin = localY * sin;\r\n        var localX2Cos = localX2 * cos + this.x;\r\n        var localX2Sin = localX2 * sin;\r\n        var localY2Cos = localY2 * cos + this.y;\r\n        var localY2Sin = localY2 * sin;\r\n        var offset = this.offset;\r\n        offset[0/*X1*/] = localXCos - localYSin;\r\n        offset[1/*Y1*/] = localYCos + localXSin;\r\n        offset[2/*X2*/] = localXCos - localY2Sin;\r\n        offset[3/*Y2*/] = localY2Cos + localXSin;\r\n        offset[4/*X3*/] = localX2Cos - localY2Sin;\r\n        offset[5/*Y3*/] = localY2Cos + localX2Sin;\r\n        offset[6/*X4*/] = localX2Cos - localYSin;\r\n        offset[7/*Y4*/] = localYCos + localX2Sin;\r\n    },\r\n    computeVertices: function (x, y, bone, vertices)\r\n    {\r\n        x += bone.worldX;\r\n        y += bone.worldY;\r\n        var m00 = bone.m00, m01 = bone.m01, m10 = bone.m10, m11 = bone.m11;\r\n        var offset = this.offset;\r\n        vertices[0/*X1*/] = offset[0/*X1*/] * m00 + offset[1/*Y1*/] * m01 + x;\r\n        vertices[1/*Y1*/] = offset[0/*X1*/] * m10 + offset[1/*Y1*/] * m11 + y;\r\n        vertices[2/*X2*/] = offset[2/*X2*/] * m00 + offset[3/*Y2*/] * m01 + x;\r\n        vertices[3/*Y2*/] = offset[2/*X2*/] * m10 + offset[3/*Y2*/] * m11 + y;\r\n        vertices[4/*X3*/] = offset[4/*X3*/] * m00 + offset[5/*X3*/] * m01 + x;\r\n        vertices[5/*X3*/] = offset[4/*X3*/] * m10 + offset[5/*X3*/] * m11 + y;\r\n        vertices[6/*X4*/] = offset[6/*X4*/] * m00 + offset[7/*Y4*/] * m01 + x;\r\n        vertices[7/*Y4*/] = offset[6/*X4*/] * m10 + offset[7/*Y4*/] * m11 + y;\r\n    }\r\n};\r\nmodule.exports = spine.RegionAttachment;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/RegionAttachment.js\n ** module id = 15\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.AttachmentType = {\r\n    region: 0,\r\n    boundingbox: 1,\r\n    mesh: 2,\r\n    skinnedmesh: 3,\r\n    weightedmesh : 4\r\n};\r\nmodule.exports = spine.AttachmentType;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/AttachmentType.js\n ** module id = 16\n ** module chunks = 0\n **/","var spine = require('../SpineUtil') || {};\r\nspine.AttachmentType = require('./AttachmentType');\r\nspine.MeshAttachment = function (name)\r\n{\r\n    this.name = name;\r\n};\r\nspine.MeshAttachment.prototype = {\r\n    type: spine.AttachmentType.mesh,\r\n    vertices: null,\r\n    uvs: null,\r\n    regionUVs: null,\r\n    triangles: null,\r\n    hullLength: 0,\r\n    r: 1, g: 1, b: 1, a: 1,\r\n    path: null,\r\n    rendererObject: null,\r\n    regionU: 0, regionV: 0, regionU2: 0, regionV2: 0, regionRotate: false,\r\n    regionOffsetX: 0, regionOffsetY: 0,\r\n    regionWidth: 0, regionHeight: 0,\r\n    regionOriginalWidth: 0, regionOriginalHeight: 0,\r\n    edges: null,\r\n    width: 0, height: 0,\r\n    updateUVs: function ()\r\n    {\r\n        var width = this.regionU2 - this.regionU, height = this.regionV2 - this.regionV;\r\n        var n = this.regionUVs.length;\r\n        if (!this.uvs || this.uvs.length != n)\r\n        {\r\n            this.uvs = new spine.Float32Array(n);\r\n        }\r\n        if (this.regionRotate)\r\n        {\r\n            for (var i = 0; i < n; i += 2)\r\n            {\r\n                this.uvs[i] = this.regionU + this.regionUVs[i + 1] * width;\r\n                this.uvs[i + 1] = this.regionV + height - this.regionUVs[i] * height;\r\n            }\r\n        } else {\r\n            for (var i = 0; i < n; i += 2)\r\n            {\r\n                this.uvs[i] = this.regionU + this.regionUVs[i] * width;\r\n                this.uvs[i + 1] = this.regionV + this.regionUVs[i + 1] * height;\r\n            }\r\n        }\r\n    },\r\n    computeWorldVertices: function (x, y, slot, worldVertices)\r\n    {\r\n        var bone = slot.bone;\r\n        x += bone.worldX;\r\n        y += bone.worldY;\r\n        var m00 = bone.m00, m01 = bone.m01, m10 = bone.m10, m11 = bone.m11;\r\n        var vertices = this.vertices;\r\n        var verticesCount = vertices.length;\r\n        if (slot.attachmentVertices.length == verticesCount) vertices = slot.attachmentVertices;\r\n        for (var i = 0; i < verticesCount; i += 2)\r\n        {\r\n            var vx = vertices[i];\r\n            var vy = vertices[i + 1];\r\n            worldVertices[i] = vx * m00 + vy * m01 + x;\r\n            worldVertices[i + 1] = vx * m10 + vy * m11 + y;\r\n        }\r\n    }\r\n};\r\nmodule.exports = spine.MeshAttachment;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/MeshAttachment.js\n ** module id = 17\n ** module chunks = 0\n **/","var spine = require('../SpineUtil') || {};\r\nspine.AttachmentType = require('./AttachmentType');\r\nspine.SkinnedMeshAttachment = function (name)\r\n{\r\n    this.name = name;\r\n};\r\nspine.SkinnedMeshAttachment.prototype = {\r\n    type: spine.AttachmentType.skinnedmesh,\r\n    bones: null,\r\n    weights: null,\r\n    uvs: null,\r\n    regionUVs: null,\r\n    triangles: null,\r\n    hullLength: 0,\r\n    r: 1, g: 1, b: 1, a: 1,\r\n    path: null,\r\n    rendererObject: null,\r\n    regionU: 0, regionV: 0, regionU2: 0, regionV2: 0, regionRotate: false,\r\n    regionOffsetX: 0, regionOffsetY: 0,\r\n    regionWidth: 0, regionHeight: 0,\r\n    regionOriginalWidth: 0, regionOriginalHeight: 0,\r\n    edges: null,\r\n    width: 0, height: 0,\r\n    updateUVs: function (u, v, u2, v2, rotate)\r\n    {\r\n        var width = this.regionU2 - this.regionU, height = this.regionV2 - this.regionV;\r\n        var n = this.regionUVs.length;\r\n        if (!this.uvs || this.uvs.length != n)\r\n        {\r\n            this.uvs = new spine.Float32Array(n);\r\n        }\r\n        if (this.regionRotate)\r\n        {\r\n            for (var i = 0; i < n; i += 2)\r\n            {\r\n                this.uvs[i] = this.regionU + this.regionUVs[i + 1] * width;\r\n                this.uvs[i + 1] = this.regionV + height - this.regionUVs[i] * height;\r\n            }\r\n        } else {\r\n            for (var i = 0; i < n; i += 2)\r\n            {\r\n                this.uvs[i] = this.regionU + this.regionUVs[i] * width;\r\n                this.uvs[i + 1] = this.regionV + this.regionUVs[i + 1] * height;\r\n            }\r\n        }\r\n    },\r\n    computeWorldVertices: function (x, y, slot, worldVertices)\r\n    {\r\n        var skeletonBones = slot.bone.skeleton.bones;\r\n        var weights = this.weights;\r\n        var bones = this.bones;\r\n\r\n        var w = 0, v = 0, b = 0, f = 0, n = bones.length, nn;\r\n        var wx, wy, bone, vx, vy, weight;\r\n        if (!slot.attachmentVertices.length)\r\n        {\r\n            for (; v < n; w += 2)\r\n            {\r\n                wx = 0;\r\n                wy = 0;\r\n                nn = bones[v++] + v;\r\n                for (; v < nn; v++, b += 3)\r\n                {\r\n                    bone = skeletonBones[bones[v]];\r\n                    vx = weights[b];\r\n                    vy = weights[b + 1];\r\n                    weight = weights[b + 2];\r\n                    wx += (vx * bone.m00 + vy * bone.m01 + bone.worldX) * weight;\r\n                    wy += (vx * bone.m10 + vy * bone.m11 + bone.worldY) * weight;\r\n                }\r\n                worldVertices[w] = wx + x;\r\n                worldVertices[w + 1] = wy + y;\r\n            }\r\n        } else {\r\n            var ffd = slot.attachmentVertices;\r\n            for (; v < n; w += 2)\r\n            {\r\n                wx = 0;\r\n                wy = 0;\r\n                nn = bones[v++] + v;\r\n                for (; v < nn; v++, b += 3, f += 2)\r\n                {\r\n                    bone = skeletonBones[bones[v]];\r\n                    vx = weights[b] + ffd[f];\r\n                    vy = weights[b + 1] + ffd[f + 1];\r\n                    weight = weights[b + 2];\r\n                    wx += (vx * bone.m00 + vy * bone.m01 + bone.worldX) * weight;\r\n                    wy += (vx * bone.m10 + vy * bone.m11 + bone.worldY) * weight;\r\n                }\r\n                worldVertices[w] = wx + x;\r\n                worldVertices[w + 1] = wy + y;\r\n            }\r\n        }\r\n    }\r\n};\r\nmodule.exports = spine.SkinnedMeshAttachment;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/SkinnedMeshAttachment.js\n ** module id = 18\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.AttachmentType = require('./AttachmentType');\r\nspine.BoundingBoxAttachment = function (name)\r\n{\r\n    this.name = name;\r\n    this.vertices = [];\r\n};\r\nspine.BoundingBoxAttachment.prototype = {\r\n    type: spine.AttachmentType.boundingbox,\r\n    computeWorldVertices: function (x, y, bone, worldVertices)\r\n    {\r\n        x += bone.worldX;\r\n        y += bone.worldY;\r\n        var m00 = bone.m00, m01 = bone.m01, m10 = bone.m10, m11 = bone.m11;\r\n        var vertices = this.vertices;\r\n        for (var i = 0, n = vertices.length; i < n; i += 2)\r\n        {\r\n            var px = vertices[i];\r\n            var py = vertices[i + 1];\r\n            worldVertices[i] = px * m00 + py * m01 + x;\r\n            worldVertices[i + 1] = px * m10 + py * m11 + y;\r\n        }\r\n    }\r\n};\r\nmodule.exports = spine.BoundingBoxAttachment;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/BoundingBoxAttachment.js\n ** module id = 19\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.AtlasReader = require('./AtlasReader');\r\nspine.AtlasPage = require('./AtlasPage');\r\nspine.AtlasRegion = require('./AtlasRegion');\r\nvar syncImageLoaderAdapter = require('../loaders/syncImageLoaderAdapter.js')\r\n\r\nspine.Atlas = function (atlasText, loaderFunction, callback)\r\n{\r\n    //TODO: remove this legacy later\r\n    if (typeof loaderFunction !== \"function\") {\r\n        //old syntax\r\n        var baseUrl = loaderFunction;\r\n        var crossOrigin = callback;\r\n        loaderFunction = syncImageLoaderAdapter(baseUrl, crossOrigin);\r\n        callback = null;\r\n    }\r\n\r\n    this.pages = [];\r\n    this.regions = [];\r\n\r\n    this.texturesLoading = 0;\r\n\r\n    var self = this;\r\n\r\n    var reader = new spine.AtlasReader(atlasText);\r\n    var tuple = [];\r\n    tuple.length = 4;\r\n    var page = null;\r\n\r\n    iterateParser();\r\n\r\n    function iterateParser() {\r\n        while (true) {\r\n            var line = reader.readLine();\r\n            if (line === null) {\r\n                return callback && callback(self);\r\n            }\r\n            line = reader.trim(line);\r\n            if (!line.length)\r\n                page = null;\r\n            else if (!page) {\r\n                page = new spine.AtlasPage();\r\n                page.name = line;\r\n\r\n                if (reader.readTuple(tuple) == 2) { // size is only optional for an atlas packed with an old TexturePacker.\r\n                    page.width = parseInt(tuple[0]);\r\n                    page.height = parseInt(tuple[1]);\r\n                    reader.readTuple(tuple);\r\n                } else {\r\n                    //old format, detect width and height by texture\r\n                }\r\n                page.format = spine.Atlas.Format[tuple[0]];\r\n\r\n                reader.readTuple(tuple);\r\n                page.minFilter = spine.Atlas.TextureFilter[tuple[0]];\r\n                page.magFilter = spine.Atlas.TextureFilter[tuple[1]];\r\n\r\n                var direction = reader.readValue();\r\n                page.uWrap = spine.Atlas.TextureWrap.clampToEdge;\r\n                page.vWrap = spine.Atlas.TextureWrap.clampToEdge;\r\n                if (direction == \"x\")\r\n                    page.uWrap = spine.Atlas.TextureWrap.repeat;\r\n                else if (direction == \"y\")\r\n                    page.vWrap = spine.Atlas.TextureWrap.repeat;\r\n                else if (direction == \"xy\")\r\n                    page.uWrap = page.vWrap = spine.Atlas.TextureWrap.repeat;\r\n\r\n                // @ivanpopelyshev: I so want to use generators and \"yield()\" here, or at least promises\r\n                loaderFunction(line, function (texture) {\r\n                    page.rendererObject = texture;\r\n                    self.pages.push(page);\r\n                    if (!page.width || !page.height) {\r\n                        page.width = texture.width;\r\n                        page.height = texture.height;\r\n                        if (!page.width || !page.height) {\r\n                            console.log(\"ERROR spine atlas page \" + page.name + \": meshes wont work if you dont specify size in atlas (http://www.html5gamedevs.com/topic/18888-pixi-spines-and-meshes/?p=107121)\");\r\n                        }\r\n                    }\r\n                    iterateParser();\r\n                });\r\n                break;\r\n            } else {\r\n                var region = new spine.AtlasRegion();\r\n                region.name = line;\r\n                region.page = page;\r\n\r\n                region.rotate = reader.readValue() == \"true\";\r\n\r\n                reader.readTuple(tuple);\r\n                var x = parseInt(tuple[0]);\r\n                var y = parseInt(tuple[1]);\r\n\r\n                reader.readTuple(tuple);\r\n                var width = parseInt(tuple[0]);\r\n                var height = parseInt(tuple[1]);\r\n\r\n                region.u = x / page.width;\r\n                region.v = y / page.height;\r\n                if (region.rotate) {\r\n                    region.u2 = (x + height) / page.width;\r\n                    region.v2 = (y + width) / page.height;\r\n                } else {\r\n                    region.u2 = (x + width) / page.width;\r\n                    region.v2 = (y + height) / page.height;\r\n                }\r\n                //detected resolution\r\n                var resolution = page.rendererObject.resolution;\r\n                region.x = x / resolution;\r\n                region.y = y / resolution;\r\n                region.width = Math.abs(width) / resolution;\r\n                region.height = Math.abs(height) / resolution;\r\n\r\n                if (reader.readTuple(tuple) == 4) { // split is optional\r\n                    region.splits = [parseInt(tuple[0]), parseInt(tuple[1]), parseInt(tuple[2]), parseInt(tuple[3])];\r\n\r\n                    if (reader.readTuple(tuple) == 4) { // pad is optional, but only present with splits\r\n                        region.pads = [parseInt(tuple[0]), parseInt(tuple[1]), parseInt(tuple[2]), parseInt(tuple[3])];\r\n\r\n                        reader.readTuple(tuple);\r\n                    }\r\n                }\r\n\r\n                region.originalWidth = parseInt(tuple[0]) / resolution;\r\n                region.originalHeight = parseInt(tuple[1]) / resolution;\r\n\r\n                reader.readTuple(tuple);\r\n                region.offsetX = parseInt(tuple[0]) / resolution;\r\n                region.offsetY = parseInt(tuple[1]) / resolution;\r\n\r\n                region.index = parseInt(reader.readValue());\r\n\r\n                self.regions.push(region);\r\n            }\r\n        }\r\n    }\r\n};\r\nspine.Atlas.prototype = {\r\n    findRegion: function (name)\r\n    {\r\n        var regions = this.regions;\r\n        for (var i = 0, n = regions.length; i < n; i++)\r\n            if (regions[i].name == name) return regions[i];\r\n        return null;\r\n    },\r\n    dispose: function ()\r\n    {\r\n        var pages = this.pages;\r\n        for (var i = 0, n = pages.length; i < n; i++)\r\n            pages[i].rendererObject.destroy(true);\r\n    },\r\n    updateUVs: function (page)\r\n    {\r\n        var regions = this.regions;\r\n        for (var i = 0, n = regions.length; i < n; i++)\r\n        {\r\n            var region = regions[i];\r\n            if (region.page != page) continue;\r\n            region.u = region.x / page.width;\r\n            region.v = region.y / page.height;\r\n            if (region.rotate)\r\n            {\r\n                region.u2 = (region.x + region.height) / page.width;\r\n                region.v2 = (region.y + region.width) / page.height;\r\n            } else {\r\n                region.u2 = (region.x + region.width) / page.width;\r\n                region.v2 = (region.y + region.height) / page.height;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nspine.Atlas.Format = {\r\n    alpha: 0,\r\n    intensity: 1,\r\n    luminanceAlpha: 2,\r\n    rgb565: 3,\r\n    rgba4444: 4,\r\n    rgb888: 5,\r\n    rgba8888: 6\r\n};\r\n\r\nspine.Atlas.TextureFilter = {\r\n    nearest: 0,\r\n    linear: 1,\r\n    mipMap: 2,\r\n    mipMapNearestNearest: 3,\r\n    mipMapLinearNearest: 4,\r\n    mipMapNearestLinear: 5,\r\n    mipMapLinearLinear: 6\r\n};\r\n\r\nspine.Atlas.TextureWrap = {\r\n    mirroredRepeat: 0,\r\n    clampToEdge: 1,\r\n    repeat: 2\r\n};\r\nmodule.exports = spine.Atlas;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/Atlas.js\n ** module id = 20\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.AtlasReader = function (text)\r\n{\r\n    this.lines = text.split(/\\r\\n|\\r|\\n/);\r\n};\r\nspine.AtlasReader.prototype = {\r\n    index: 0,\r\n    trim: function (value)\r\n    {\r\n        return value.replace(/^\\s+|\\s+$/g, \"\");\r\n    },\r\n    readLine: function ()\r\n    {\r\n        if (this.index >= this.lines.length) return null;\r\n        return this.lines[this.index++];\r\n    },\r\n    readValue: function ()\r\n    {\r\n        var line = this.readLine();\r\n        var colon = line.indexOf(\":\");\r\n        if (colon == -1) throw \"Invalid line: \" + line;\r\n        return this.trim(line.substring(colon + 1));\r\n    },\r\n    /** Returns the number of tuple values read (1, 2 or 4). */\r\n    readTuple: function (tuple)\r\n    {\r\n        var line = this.readLine();\r\n        var colon = line.indexOf(\":\");\r\n        if (colon == -1) throw \"Invalid line: \" + line;\r\n        var i = 0, lastMatch = colon + 1;\r\n        for (; i < 3; i++)\r\n        {\r\n            var comma = line.indexOf(\",\", lastMatch);\r\n            if (comma == -1) break;\r\n            tuple[i] = this.trim(line.substr(lastMatch, comma - lastMatch));\r\n            lastMatch = comma + 1;\r\n        }\r\n        tuple[i] = this.trim(line.substring(lastMatch));\r\n        return i + 1;\r\n    }\r\n};\r\nmodule.exports = spine.AtlasReader;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/AtlasReader.js\n ** module id = 21\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.AtlasPage = function ()\r\n{};\r\nspine.AtlasPage.prototype = {\r\n    name: null,\r\n    format: null,\r\n    minFilter: null,\r\n    magFilter: null,\r\n    uWrap: null,\r\n    vWrap: null,\r\n    rendererObject: null,\r\n    width: 0,\r\n    height: 0\r\n};\r\nmodule.exports = spine.AtlasPage;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/AtlasPage.js\n ** module id = 22\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.AtlasRegion = function ()\r\n{};\r\nspine.AtlasRegion.prototype = {\r\n    page: null,\r\n    name: null,\r\n    x: 0, y: 0,\r\n    width: 0, height: 0,\r\n    u: 0, v: 0, u2: 0, v2: 0,\r\n    offsetX: 0, offsetY: 0,\r\n    originalWidth: 0, originalHeight: 0,\r\n    index: 0,\r\n    rotate: false,\r\n    splits: null,\r\n    pads: null\r\n};\r\nmodule.exports = spine.AtlasRegion;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/AtlasRegion.js\n ** module id = 23\n ** module chunks = 0\n **/","var spine = require('../SpineRuntime');\r\n\r\nmodule.exports = function (baseUrl, crossOrigin) {\r\n    if (baseUrl && baseUrl.lastIndexOf('/') !== (baseUrl.length-1))\r\n    {\r\n        baseUrl += '/';\r\n    }\r\n    return function(line, callback) {\r\n        callback(PIXI.BaseTexture.fromImage(line, crossOrigin));\r\n    }\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/loaders/syncImageLoaderAdapter.js\n ** module id = 24\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.Curves = require('./Curves');\r\nspine.Animation = require('./Animation');\r\nspine.AttachmentTimeline = function (frameCount)\r\n{\r\n    this.curves = new spine.Curves(frameCount);\r\n    this.frames = []; // time, ...\r\n    this.frames.length = frameCount;\r\n    this.attachmentNames = [];\r\n    this.attachmentNames.length = frameCount;\r\n};\r\nspine.AttachmentTimeline.prototype = {\r\n    slotIndex: 0,\r\n    getFrameCount: function ()\r\n    {\r\n        return this.frames.length;\r\n    },\r\n    setFrame: function (frameIndex, time, attachmentName)\r\n    {\r\n        this.frames[frameIndex] = time;\r\n        this.attachmentNames[frameIndex] = attachmentName;\r\n    },\r\n    apply: function (skeleton, lastTime, time, firedEvents, alpha)\r\n    {\r\n        var frames = this.frames;\r\n        if (time < frames[0])\r\n        {\r\n            if (lastTime > time) this.apply(skeleton, lastTime, Number.MAX_VALUE, null, 0);\r\n            return;\r\n        } else if (lastTime > time) //\r\n            lastTime = -1;\r\n\r\n        var frameIndex = time >= frames[frames.length - 1] ? frames.length - 1 : spine.Animation.binarySearch1(frames, time) - 1;\r\n        if (frames[frameIndex] < lastTime) return;\r\n\r\n        var attachmentName = this.attachmentNames[frameIndex];\r\n        skeleton.slots[this.slotIndex].setAttachment(\r\n            !attachmentName ? null : skeleton.getAttachmentBySlotIndex(this.slotIndex, attachmentName));\r\n    }\r\n};\r\nmodule.exports = spine.AttachmentTimeline;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/AttachmentTimeline.js\n ** module id = 25\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.Curves = function (frameCount)\r\n{\r\n    this.curves = []; // type, x, y, ...\r\n    //this.curves.length = (frameCount - 1) * 19/*BEZIER_SIZE*/;\r\n};\r\nspine.Curves.prototype = {\r\n    setLinear: function (frameIndex)\r\n    {\r\n        this.curves[frameIndex * 19/*BEZIER_SIZE*/] = 0/*LINEAR*/;\r\n    },\r\n    setStepped: function (frameIndex)\r\n    {\r\n        this.curves[frameIndex * 19/*BEZIER_SIZE*/] = 1/*STEPPED*/;\r\n    },\r\n    /** Sets the control handle positions for an interpolation bezier curve used to transition from this keyframe to the next.\r\n     * cx1 and cx2 are from 0 to 1, representing the percent of time between the two keyframes. cy1 and cy2 are the percent of\r\n     * the difference between the keyframe's values. */\r\n    setCurve: function (frameIndex, cx1, cy1, cx2, cy2)\r\n    {\r\n        var subdiv1 = 1 / 10/*BEZIER_SEGMENTS*/, subdiv2 = subdiv1 * subdiv1, subdiv3 = subdiv2 * subdiv1;\r\n        var pre1 = 3 * subdiv1, pre2 = 3 * subdiv2, pre4 = 6 * subdiv2, pre5 = 6 * subdiv3;\r\n        var tmp1x = -cx1 * 2 + cx2, tmp1y = -cy1 * 2 + cy2, tmp2x = (cx1 - cx2) * 3 + 1, tmp2y = (cy1 - cy2) * 3 + 1;\r\n        var dfx = cx1 * pre1 + tmp1x * pre2 + tmp2x * subdiv3, dfy = cy1 * pre1 + tmp1y * pre2 + tmp2y * subdiv3;\r\n        var ddfx = tmp1x * pre4 + tmp2x * pre5, ddfy = tmp1y * pre4 + tmp2y * pre5;\r\n        var dddfx = tmp2x * pre5, dddfy = tmp2y * pre5;\r\n\r\n        var i = frameIndex * 19/*BEZIER_SIZE*/;\r\n        var curves = this.curves;\r\n        curves[i++] = 2/*BEZIER*/;\r\n\r\n        var x = dfx, y = dfy;\r\n        for (var n = i + 19/*BEZIER_SIZE*/ - 1; i < n; i += 2)\r\n        {\r\n            curves[i] = x;\r\n            curves[i + 1] = y;\r\n            dfx += ddfx;\r\n            dfy += ddfy;\r\n            ddfx += dddfx;\r\n            ddfy += dddfy;\r\n            x += dfx;\r\n            y += dfy;\r\n        }\r\n    },\r\n    getCurvePercent: function (frameIndex, percent)\r\n    {\r\n        percent = percent < 0 ? 0 : (percent > 1 ? 1 : percent);\r\n        var curves = this.curves;\r\n        var i = frameIndex * 19/*BEZIER_SIZE*/;\r\n        var type = curves[i];\r\n        if (type === 0/*LINEAR*/) return percent;\r\n        if (type == 1/*STEPPED*/) return 0;\r\n        i++;\r\n        var x = 0;\r\n        for (var start = i, n = i + 19/*BEZIER_SIZE*/ - 1; i < n; i += 2)\r\n        {\r\n            x = curves[i];\r\n            if (x >= percent)\r\n            {\r\n                var prevX, prevY;\r\n                if (i == start)\r\n                {\r\n                    prevX = 0;\r\n                    prevY = 0;\r\n                } else {\r\n                    prevX = curves[i - 2];\r\n                    prevY = curves[i - 1];\r\n                }\r\n                return prevY + (curves[i + 1] - prevY) * (percent - prevX) / (x - prevX);\r\n            }\r\n        }\r\n        var y = curves[i - 1];\r\n        return y + (1 - y) * (percent - x) / (1 - x); // Last point is 1,1.\r\n    }\r\n};\r\nmodule.exports = spine.Curves;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/Curves.js\n ** module id = 26\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.BoneData = function (name, parent)\r\n{\r\n    this.name = name;\r\n    this.parent = parent;\r\n};\r\nspine.BoneData.prototype = {\r\n    length: 0,\r\n    x: 0, y: 0,\r\n    rotation: 0,\r\n    scaleX: 1, scaleY: 1,\r\n    inheritScale: true,\r\n    inheritRotation: true,\r\n    flipX: false, flipY: false\r\n};\r\nmodule.exports = spine.BoneData;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/BoneData.js\n ** module id = 27\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.Bone = function (boneData, skeleton, parent)\r\n{\r\n    this.data = boneData;\r\n    this.skeleton = skeleton;\r\n    this.parent = parent;\r\n    this.setToSetupPose();\r\n};\r\nspine.Bone.yDown = false;\r\nspine.Bone.prototype = {\r\n    x: 0, y: 0,\r\n    rotation: 0, rotationIK: 0,\r\n    scaleX: 1, scaleY: 1,\r\n    flipX: false, flipY: false,\r\n    m00: 0, m01: 0, worldX: 0, // a b x\r\n    m10: 0, m11: 0, worldY: 0, // c d y\r\n    worldRotation: 0,\r\n    worldScaleX: 1, worldScaleY: 1,\r\n    worldFlipX: false, worldFlipY: false,\r\n    updateWorldTransform: function ()\r\n    {\r\n        var parent = this.parent;\r\n        if (parent)\r\n        {\r\n            this.worldX = this.x * parent.m00 + this.y * parent.m01 + parent.worldX;\r\n            this.worldY = this.x * parent.m10 + this.y * parent.m11 + parent.worldY;\r\n            if (this.data.inheritScale)\r\n            {\r\n                this.worldScaleX = parent.worldScaleX * this.scaleX;\r\n                this.worldScaleY = parent.worldScaleY * this.scaleY;\r\n            } else {\r\n                this.worldScaleX = this.scaleX;\r\n                this.worldScaleY = this.scaleY;\r\n            }\r\n            this.worldRotation = this.data.inheritRotation ? (parent.worldRotation + this.rotationIK) : this.rotationIK;\r\n            this.worldFlipX = parent.worldFlipX != this.flipX;\r\n            this.worldFlipY = parent.worldFlipY != this.flipY;\r\n        } else {\r\n            var skeletonFlipX = this.skeleton.flipX, skeletonFlipY = this.skeleton.flipY;\r\n            this.worldX = skeletonFlipX ? -this.x : this.x;\r\n            this.worldY = (skeletonFlipY != spine.Bone.yDown) ? -this.y : this.y;\r\n            this.worldScaleX = this.scaleX;\r\n            this.worldScaleY = this.scaleY;\r\n            this.worldRotation = this.rotationIK;\r\n            this.worldFlipX = skeletonFlipX != this.flipX;\r\n            this.worldFlipY = skeletonFlipY != this.flipY;\r\n        }\r\n        var radians = this.worldRotation * spine.degRad;\r\n        var cos = Math.cos(radians);\r\n        var sin = Math.sin(radians);\r\n        if (this.worldFlipX)\r\n        {\r\n            this.m00 = -cos * this.worldScaleX;\r\n            this.m01 = sin * this.worldScaleY;\r\n        } else {\r\n            this.m00 = cos * this.worldScaleX;\r\n            this.m01 = -sin * this.worldScaleY;\r\n        }\r\n        if (this.worldFlipY != spine.Bone.yDown)\r\n        {\r\n            this.m10 = -sin * this.worldScaleX;\r\n            this.m11 = -cos * this.worldScaleY;\r\n        } else {\r\n            this.m10 = sin * this.worldScaleX;\r\n            this.m11 = cos * this.worldScaleY;\r\n        }\r\n    },\r\n    setToSetupPose: function ()\r\n    {\r\n        var data = this.data;\r\n        this.x = data.x;\r\n        this.y = data.y;\r\n        this.rotation = data.rotation;\r\n        this.rotationIK = this.rotation;\r\n        this.scaleX = data.scaleX;\r\n        this.scaleY = data.scaleY;\r\n        this.flipX = data.flipX;\r\n        this.flipY = data.flipY;\r\n    },\r\n    worldToLocal: function (world)\r\n    {\r\n        var dx = world[0] - this.worldX, dy = world[1] - this.worldY;\r\n        var m00 = this.m00, m10 = this.m10, m01 = this.m01, m11 = this.m11;\r\n        if (this.worldFlipX != (this.worldFlipY != spine.Bone.yDown))\r\n        {\r\n            m00 = -m00;\r\n            m11 = -m11;\r\n        }\r\n        var invDet = 1 / (m00 * m11 - m01 * m10);\r\n        world[0] = dx * m00 * invDet - dy * m01 * invDet;\r\n        world[1] = dy * m11 * invDet - dx * m10 * invDet;\r\n    },\r\n    localToWorld: function (local)\r\n    {\r\n        var localX = local[0], localY = local[1];\r\n        local[0] = localX * this.m00 + localY * this.m01 + this.worldX;\r\n        local[1] = localX * this.m10 + localY * this.m11 + this.worldY;\r\n    }\r\n};\r\nmodule.exports = spine.Bone;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/Bone.js\n ** module id = 28\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.Animation = require('./Animation');\r\nspine.Curves = require('./Curves');\r\nspine.ColorTimeline = function (frameCount)\r\n{\r\n    this.curves = new spine.Curves(frameCount);\r\n    this.frames = []; // time, r, g, b, a, ...\r\n    this.frames.length = frameCount * 5;\r\n};\r\nspine.ColorTimeline.prototype = {\r\n    slotIndex: 0,\r\n    getFrameCount: function ()\r\n    {\r\n        return this.frames.length / 5;\r\n    },\r\n    setFrame: function (frameIndex, time, r, g, b, a)\r\n    {\r\n        frameIndex *= 5;\r\n        this.frames[frameIndex] = time;\r\n        this.frames[frameIndex + 1] = r;\r\n        this.frames[frameIndex + 2] = g;\r\n        this.frames[frameIndex + 3] = b;\r\n        this.frames[frameIndex + 4] = a;\r\n    },\r\n    apply: function (skeleton, lastTime, time, firedEvents, alpha)\r\n    {\r\n        var frames = this.frames;\r\n        if (time < frames[0]) return; // Time is before first frame.\r\n\r\n        var r, g, b, a;\r\n        if (time >= frames[frames.length - 5])\r\n        {\r\n            // Time is after last frame.\r\n            var i = frames.length - 1;\r\n            r = frames[i - 3];\r\n            g = frames[i - 2];\r\n            b = frames[i - 1];\r\n            a = frames[i];\r\n        } else {\r\n            // Interpolate between the previous frame and the current frame.\r\n            var frameIndex = spine.Animation.binarySearch(frames, time, 5);\r\n            var prevFrameR = frames[frameIndex - 4];\r\n            var prevFrameG = frames[frameIndex - 3];\r\n            var prevFrameB = frames[frameIndex - 2];\r\n            var prevFrameA = frames[frameIndex - 1];\r\n            var frameTime = frames[frameIndex];\r\n            var percent = 1 - (time - frameTime) / (frames[frameIndex - 5/*PREV_FRAME_TIME*/] - frameTime);\r\n            percent = this.curves.getCurvePercent(frameIndex / 5 - 1, percent);\r\n\r\n            r = prevFrameR + (frames[frameIndex + 1/*FRAME_R*/] - prevFrameR) * percent;\r\n            g = prevFrameG + (frames[frameIndex + 2/*FRAME_G*/] - prevFrameG) * percent;\r\n            b = prevFrameB + (frames[frameIndex + 3/*FRAME_B*/] - prevFrameB) * percent;\r\n            a = prevFrameA + (frames[frameIndex + 4/*FRAME_A*/] - prevFrameA) * percent;\r\n        }\r\n        var slot = skeleton.slots[this.slotIndex];\r\n        if (alpha < 1)\r\n        {\r\n            slot.r += (r - slot.r) * alpha;\r\n            slot.g += (g - slot.g) * alpha;\r\n            slot.b += (b - slot.b) * alpha;\r\n            slot.a += (a - slot.a) * alpha;\r\n        } else {\r\n            slot.r = r;\r\n            slot.g = g;\r\n            slot.b = b;\r\n            slot.a = a;\r\n        }\r\n    }\r\n};\r\nmodule.exports = spine.ColorTimeline;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/ColorTimeline.js\n ** module id = 29\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.Animation = require('./Animation');\r\nspine.DrawOrderTimeline = function (frameCount)\r\n{\r\n    this.frames = []; // time, ...\r\n    this.frames.length = frameCount;\r\n    this.drawOrders = [];\r\n    this.drawOrders.length = frameCount;\r\n};\r\nspine.DrawOrderTimeline.prototype = {\r\n    getFrameCount: function ()\r\n    {\r\n        return this.frames.length;\r\n    },\r\n    setFrame: function (frameIndex, time, drawOrder)\r\n    {\r\n        this.frames[frameIndex] = time;\r\n        this.drawOrders[frameIndex] = drawOrder;\r\n    },\r\n    apply: function (skeleton, lastTime, time, firedEvents, alpha)\r\n    {\r\n        var frames = this.frames;\r\n        if (time < frames[0]) return; // Time is before first frame.\r\n\r\n        var frameIndex;\r\n        if (time >= frames[frames.length - 1]) // Time is after last frame.\r\n            frameIndex = frames.length - 1;\r\n        else\r\n            frameIndex = spine.Animation.binarySearch1(frames, time) - 1;\r\n\r\n        var drawOrder = skeleton.drawOrder;\r\n        var slots = skeleton.slots;\r\n        var drawOrderToSetupIndex = this.drawOrders[frameIndex];\r\n        if (drawOrderToSetupIndex)\r\n        {\r\n            for (var i = 0, n = drawOrderToSetupIndex.length; i < n; i++)\r\n            {\r\n                drawOrder[i] = drawOrderToSetupIndex[i];\r\n            }\r\n        }\r\n\r\n    }\r\n};\r\nmodule.exports = spine.DrawOrderTimeline;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/DrawOrderTimeline.js\n ** module id = 30\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.EventData = function (name)\r\n{\r\n    this.name = name;\r\n};\r\nspine.EventData.prototype = {\r\n    intValue: 0,\r\n    floatValue: 0,\r\n    stringValue: null\r\n};\r\nmodule.exports = spine.EventData;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/EventData.js\n ** module id = 31\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.Event = function (data)\r\n{\r\n    this.data = data;\r\n};\r\nspine.Event.prototype = {\r\n    intValue: 0,\r\n    floatValue: 0,\r\n    stringValue: null\r\n};\r\nmodule.exports = spine.Event;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/Event.js\n ** module id = 32\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.Animation = require('./Animation');\r\nspine.EventTimeline = function (frameCount)\r\n{\r\n    this.frames = []; // time, ...\r\n    this.frames.length = frameCount;\r\n    this.events = [];\r\n    this.events.length = frameCount;\r\n};\r\nspine.EventTimeline.prototype = {\r\n    getFrameCount: function ()\r\n    {\r\n        return this.frames.length;\r\n    },\r\n    setFrame: function (frameIndex, time, event)\r\n    {\r\n        this.frames[frameIndex] = time;\r\n        this.events[frameIndex] = event;\r\n    },\r\n    /** Fires events for frames > lastTime and <= time. */\r\n    apply: function (skeleton, lastTime, time, firedEvents, alpha)\r\n    {\r\n        if (!firedEvents) return;\r\n\r\n        var frames = this.frames;\r\n        var frameCount = frames.length;\r\n\r\n        if (lastTime > time)\r\n        { // Fire events after last time for looped animations.\r\n            this.apply(skeleton, lastTime, Number.MAX_VALUE, firedEvents, alpha);\r\n            lastTime = -1;\r\n        } else if (lastTime >= frames[frameCount - 1]) // Last time is after last frame.\r\n            return;\r\n        if (time < frames[0]) return; // Time is before first frame.\r\n\r\n        var frameIndex;\r\n        if (lastTime < frames[0])\r\n            frameIndex = 0;\r\n        else\r\n        {\r\n            frameIndex = spine.Animation.binarySearch1(frames, lastTime);\r\n            var frame = frames[frameIndex];\r\n            while (frameIndex > 0)\r\n            { // Fire multiple events with the same frame.\r\n                if (frames[frameIndex - 1] != frame) break;\r\n                frameIndex--;\r\n            }\r\n        }\r\n        var events = this.events;\r\n        for (; frameIndex < frameCount && time >= frames[frameIndex]; frameIndex++)\r\n            firedEvents.push(events[frameIndex]);\r\n    }\r\n};\r\nmodule.exports = spine.EventTimeline;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/EventTimeline.js\n ** module id = 33\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\nspine.Animation = require('./Animation');\nspine.Curves = require('./Curves');\nspine.FfdTimeline = function (frameCount)\n{\n    this.curves = new spine.Curves(frameCount);\n    this.frames = [];\n    this.frames.length = frameCount;\n    this.frameVertices = [];\n    this.frameVertices.length = frameCount;\n};\nspine.FfdTimeline.prototype = {\n    slotIndex: 0,\n    attachment: 0,\n    getFrameCount: function ()\n    {\n        return this.frames.length;\n    },\n    setFrame: function (frameIndex, time, vertices)\n    {\n        this.frames[frameIndex] = time;\n        this.frameVertices[frameIndex] = vertices;\n    },\n    apply: function (skeleton, lastTime, time, firedEvents, alpha)\n    {\n        var slot = skeleton.slots[this.slotIndex];\n        if (slot.attachment != this.attachment) return;\n\n        var frames = this.frames;\n        if (time < frames[0]) return; // Time is before first frame.\n\n        var frameVertices = this.frameVertices;\n        var vertexCount = frameVertices[0].length;\n\n        var vertices = slot.attachmentVertices;\n        if (vertices.length != vertexCount) {\n            vertices = slot.attachmentVertices = [];\n            for (var k = 0; k < vertexCount; k++) vertices.push(0);\n            // Don't mix from uninitialized slot vertices.\n            alpha = 1;\n        }\n\n        if (time >= frames[frames.length - 1])\n        { // Time is after last frame.\n            var lastVertices = frameVertices[frames.length - 1];\n            if (alpha < 1)\n            {\n                for (var i = 0; i < vertexCount; i++)\n                    vertices[i] += (lastVertices[i] - vertices[i]) * alpha;\n            } else {\n                for (var i = 0; i < vertexCount; i++)\n                    vertices[i] = lastVertices[i];\n            }\n            return;\n        }\n\n        // Interpolate between the previous frame and the current frame.\n        var frameIndex = spine.Animation.binarySearch1(frames, time);\n        var frameTime = frames[frameIndex];\n        var percent = 1 - (time - frameTime) / (frames[frameIndex - 1] - frameTime);\n        percent = this.curves.getCurvePercent(frameIndex - 1, percent < 0 ? 0 : (percent > 1 ? 1 : percent));\n\n        var prevVertices = frameVertices[frameIndex - 1];\n        var nextVertices = frameVertices[frameIndex];\n\n        if (alpha < 1)\n        {\n            for (var i = 0; i < vertexCount; i++)\n            {\n                var prev = prevVertices[i];\n                vertices[i] += (prev + (nextVertices[i] - prev) * percent - vertices[i]) * alpha;\n            }\n        } else {\n            for (var i = 0; i < vertexCount; i++)\n            {\n                var prev = prevVertices[i];\n                vertices[i] = prev + (nextVertices[i] - prev) * percent;\n            }\n        }\n    }\n};\nmodule.exports = spine.FfdTimeline;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/FfdTimeline.js\n ** module id = 34\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.Animation = require('./Animation');\r\nspine.Curves = require('./Curves');\r\nspine.FlipXTimeline = function (frameCount)\r\n{\r\n    this.curves = new spine.Curves(frameCount);\r\n    this.frames = []; // time, flip, ...\r\n    this.frames.length = frameCount * 2;\r\n};\r\nspine.FlipXTimeline.prototype = {\r\n    boneIndex: 0,\r\n    getFrameCount: function ()\r\n    {\r\n        return this.frames.length / 2;\r\n    },\r\n    setFrame: function (frameIndex, time, flip)\r\n    {\r\n        frameIndex *= 2;\r\n        this.frames[frameIndex] = time;\r\n        this.frames[frameIndex + 1] = flip ? 1 : 0;\r\n    },\r\n    apply: function (skeleton, lastTime, time, firedEvents, alpha)\r\n    {\r\n        var frames = this.frames;\r\n        if (time < frames[0])\r\n        {\r\n            if (lastTime > time) this.apply(skeleton, lastTime, Number.MAX_VALUE, null, 0);\r\n            return;\r\n        } else if (lastTime > time) //\r\n            lastTime = -1;\r\n        var frameIndex = (time >= frames[frames.length - 2] ? frames.length : spine.Animation.binarySearch(frames, time, 2)) - 2;\r\n        if (frames[frameIndex] < lastTime) return;\r\n        skeleton.bones[this.boneIndex].flipX = frames[frameIndex + 1] != 0;\r\n    }\r\n};\r\nmodule.exports = spine.FlipXTimeline;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/FlipXTimeline.js\n ** module id = 35\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.Animation = require('./Animation');\r\nspine.Curves = require('./Curves');\r\nspine.FlipYTimeline = function (frameCount)\r\n{\r\n    this.curves = new spine.Curves(frameCount);\r\n    this.frames = []; // time, flip, ...\r\n    this.frames.length = frameCount * 2;\r\n};\r\nspine.FlipYTimeline.prototype = {\r\n    boneIndex: 0,\r\n    getFrameCount: function ()\r\n    {\r\n        return this.frames.length / 2;\r\n    },\r\n    setFrame: function (frameIndex, time, flip)\r\n    {\r\n        frameIndex *= 2;\r\n        this.frames[frameIndex] = time;\r\n        this.frames[frameIndex + 1] = flip ? 1 : 0;\r\n    },\r\n    apply: function (skeleton, lastTime, time, firedEvents, alpha)\r\n    {\r\n        var frames = this.frames;\r\n        if (time < frames[0])\r\n        {\r\n            if (lastTime > time) this.apply(skeleton, lastTime, Number.MAX_VALUE, null, 0);\r\n            return;\r\n        } else if (lastTime > time) //\r\n            lastTime = -1;\r\n        var frameIndex = (time >= frames[frames.length - 2] ? frames.length : spine.Animation.binarySearch(frames, time, 2)) - 2;\r\n        if (frames[frameIndex] < lastTime) return;\r\n        skeleton.bones[this.boneIndex].flipY = frames[frameIndex + 1] != 0;\r\n    }\r\n};\r\nmodule.exports = spine.FlipYTimeline;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/FlipYTimeline.js\n ** module id = 36\n ** module chunks = 0\n **/","var spine = require('../SpineUtil') || {};\r\nspine.IkConstraintData = function (name)\r\n{\r\n    this.name = name;\r\n    this.bones = [];\r\n};\r\nspine.IkConstraintData.prototype = {\r\n    target: null,\r\n    bendDirection: 1,\r\n    mix: 1\r\n};\r\nmodule.exports = spine.IkConstraintData;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/IkConstraintData.js\n ** module id = 37\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\nspine.IkConstraint = function (data, skeleton)\n{\n    this.data = data;\n    this.mix = data.mix;\n    this.bendDirection = data.bendDirection;\n\n    this.bones = [];\n    for (var i = 0, n = data.bones.length; i < n; i++)\n        this.bones.push(skeleton.findBone(data.bones[i].name));\n    this.target = skeleton.findBone(data.target.name);\n};\nspine.IkConstraint.prototype = {\n    apply: function ()\n    {\n        var target = this.target;\n        var bones = this.bones;\n        switch (bones.length)\n        {\n        case 1:\n            spine.IkConstraint.apply1(bones[0], target.worldX, target.worldY, this.mix);\n            break;\n        case 2:\n            spine.IkConstraint.apply2(bones[0], bones[1], target.worldX, target.worldY, this.bendDirection, this.mix);\n            break;\n        }\n    }\n};\n/** Adjusts the bone rotation so the tip is as close to the target position as possible. The target is specified in the world\n * coordinate system. */\nspine.IkConstraint.apply1 = function (bone, targetX, targetY, alpha)\n{\n    var parentRotation = (!bone.data.inheritRotation || !bone.parent) ? 0 : bone.parent.worldRotation;\n    var rotation = bone.rotation;\n    // worldY and targetY sign depends on global constant spine.Bone.yDown\n    var rotationIK = (spine.Bone.yDown?-spine.radDeg:spine.radDeg)* Math.atan2(targetY - bone.worldY, targetX - bone.worldX) - parentRotation;\n    bone.rotationIK = rotation + (rotationIK - rotation) * alpha;\n};\n/** Adjusts the parent and child bone rotations so the tip of the child is as close to the target position as possible. The\n * target is specified in the world coordinate system.\n * @param child Any descendant bone of the parent. */\nspine.IkConstraint.apply2 = function (parent, child, targetX, targetY, bendDirection, alpha)\n{\n    var childRotation = child.rotation, parentRotation = parent.rotation;\n    if (!alpha)\n    {\n        child.rotationIK = childRotation;\n        parent.rotationIK = parentRotation;\n        return;\n    }\n    var positionX, positionY, tempPosition = spine.temp;\n    var parentParent = parent.parent;\n    if (parentParent)\n    {\n        tempPosition[0] = targetX;\n        tempPosition[1] = targetY;\n        parentParent.worldToLocal(tempPosition);\n        targetX = (tempPosition[0] - parent.x) * parentParent.worldScaleX;\n        targetY = (tempPosition[1] - parent.y) * parentParent.worldScaleY;\n    } else {\n        targetX -= parent.x;\n        targetY -= parent.y;\n    }\n    if (child.parent == parent)\n    {\n        positionX = child.x;\n        positionY = child.y;\n    } else {\n        tempPosition[0] = child.x;\n        tempPosition[1] = child.y;\n        child.parent.localToWorld(tempPosition);\n        parent.worldToLocal(tempPosition);\n        positionX = tempPosition[0];\n        positionY = tempPosition[1];\n    }\n    var childX = positionX * parent.worldScaleX, childY = positionY * parent.worldScaleY;\n    var offset = Math.atan2(childY, childX);\n    var len1 = Math.sqrt(childX * childX + childY * childY), len2 = child.data.length * child.worldScaleX;\n    // Based on code by Ryan Juckett with permission: Copyright (c) 2008-2009 Ryan Juckett, http://www.ryanjuckett.com/\n    var cosDenom = 2 * len1 * len2;\n    if (cosDenom < 0.0001)\n    {\n        child.rotationIK = childRotation + (Math.atan2(targetY, targetX) * spine.radDeg - parentRotation - childRotation) * alpha;\n        return;\n    }\n    var cos = (targetX * targetX + targetY * targetY - len1 * len1 - len2 * len2) / cosDenom;\n    if (cos < -1)\n        cos = -1;\n    else if (cos > 1)\n        cos = 1;\n    var childAngle = Math.acos(cos) * bendDirection;\n    var adjacent = len1 + len2 * cos, opposite = len2 * Math.sin(childAngle);\n    var parentAngle = Math.atan2(targetY * adjacent - targetX * opposite, targetX * adjacent + targetY * opposite);\n    var rotation = (parentAngle - offset) * spine.radDeg - parentRotation;\n    if (rotation > 180)\n        rotation -= 360;\n    else if (rotation < -180) //\n        rotation += 360;\n    parent.rotationIK = parentRotation + rotation * alpha;\n    rotation = (childAngle + offset) * spine.radDeg - childRotation;\n    if (rotation > 180)\n        rotation -= 360;\n    else if (rotation < -180) //\n        rotation += 360;\n    child.rotationIK = childRotation + (rotation + parent.worldRotation - child.parent.worldRotation) * alpha;\n};\nmodule.exports = spine.IkConstraint;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/IkConstraint.js\n ** module id = 38\n ** module chunks = 0\n **/","var spine = require('../SpineUtil') || {};\r\nspine.Animation = require('./Animation');\r\nspine.Curves = require('./Curves');\r\nspine.IkConstraintTimeline = function (frameCount)\r\n{\r\n    this.curves = new spine.Curves(frameCount);\r\n    this.frames = []; // time, mix, bendDirection, ...\r\n    this.frames.length = frameCount * 3;\r\n};\r\nspine.IkConstraintTimeline.prototype = {\r\n    ikConstraintIndex: 0,\r\n    getFrameCount: function ()\r\n    {\r\n        return this.frames.length / 3;\r\n    },\r\n    setFrame: function (frameIndex, time, mix, bendDirection)\r\n    {\r\n        frameIndex *= 3;\r\n        this.frames[frameIndex] = time;\r\n        this.frames[frameIndex + 1] = mix;\r\n        this.frames[frameIndex + 2] = bendDirection;\r\n    },\r\n    apply: function (skeleton, lastTime, time, firedEvents, alpha)\r\n    {\r\n        var frames = this.frames;\r\n        if (time < frames[0]) return; // Time is before first frame.\r\n\r\n        var ikConstraint = skeleton.ikConstraints[this.ikConstraintIndex];\r\n\r\n        if (time >= frames[frames.length - 3])\r\n        { // Time is after last frame.\r\n            ikConstraint.mix += (frames[frames.length - 2] - ikConstraint.mix) * alpha;\r\n            ikConstraint.bendDirection = frames[frames.length - 1];\r\n            return;\r\n        }\r\n\r\n        // Interpolate between the previous frame and the current frame.\r\n        var frameIndex = spine.Animation.binarySearch(frames, time, 3);\r\n        var prevFrameMix = frames[frameIndex + -2/*PREV_FRAME_MIX*/];\r\n        var frameTime = frames[frameIndex];\r\n        var percent = 1 - (time - frameTime) / (frames[frameIndex + -3/*PREV_FRAME_TIME*/] - frameTime);\r\n        percent = this.curves.getCurvePercent(frameIndex / 3 - 1, percent);\r\n\r\n        var mix = prevFrameMix + (frames[frameIndex + 1/*FRAME_MIX*/] - prevFrameMix) * percent;\r\n        ikConstraint.mix += (mix - ikConstraint.mix) * alpha;\r\n        ikConstraint.bendDirection = frames[frameIndex + -1/*PREV_FRAME_BEND_DIRECTION*/];\r\n    }\r\n};\r\nmodule.exports = spine.IkConstraintTimeline;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/IkConstraintTimeline.js\n ** module id = 39\n ** module chunks = 0\n **/","var spine = require('../SpineUtil') || {};\r\nspine.Animation = require('./Animation');\r\nspine.Curves = require('./Curves');\r\nspine.RotateTimeline = function (frameCount)\r\n{\r\n    this.curves = new spine.Curves(frameCount);\r\n    this.frames = []; // time, angle, ...\r\n    this.frames.length = frameCount * 2;\r\n};\r\nspine.RotateTimeline.prototype = {\r\n    boneIndex: 0,\r\n    getFrameCount: function ()\r\n    {\r\n        return this.frames.length / 2;\r\n    },\r\n    setFrame: function (frameIndex, time, angle)\r\n    {\r\n        frameIndex *= 2;\r\n        this.frames[frameIndex] = time;\r\n        this.frames[frameIndex + 1] = angle;\r\n    },\r\n    apply: function (skeleton, lastTime, time, firedEvents, alpha)\r\n    {\r\n        var frames = this.frames;\r\n        if (time < frames[0]) return; // Time is before first frame.\r\n\r\n        var bone = skeleton.bones[this.boneIndex];\r\n\r\n        if (time >= frames[frames.length - 2])\r\n        { // Time is after last frame.\r\n            var amount = bone.data.rotation + frames[frames.length - 1] - bone.rotation;\r\n            while (amount > 180)\r\n                amount -= 360;\r\n            while (amount < -180)\r\n                amount += 360;\r\n            bone.rotation += amount * alpha;\r\n            return;\r\n        }\r\n\r\n        // Interpolate between the previous frame and the current frame.\r\n        var frameIndex = spine.Animation.binarySearch(frames, time, 2);\r\n        var prevFrameValue = frames[frameIndex - 1];\r\n        var frameTime = frames[frameIndex];\r\n        var percent = 1 - (time - frameTime) / (frames[frameIndex - 2/*PREV_FRAME_TIME*/] - frameTime);\r\n        percent = this.curves.getCurvePercent(frameIndex / 2 - 1, percent);\r\n\r\n        var amount = frames[frameIndex + 1/*FRAME_VALUE*/] - prevFrameValue;\r\n        while (amount > 180)\r\n            amount -= 360;\r\n        while (amount < -180)\r\n            amount += 360;\r\n        amount = bone.data.rotation + (prevFrameValue + amount * percent) - bone.rotation;\r\n        while (amount > 180)\r\n            amount -= 360;\r\n        while (amount < -180)\r\n            amount += 360;\r\n        bone.rotation += amount * alpha;\r\n    }\r\n};\r\nmodule.exports = spine.RotateTimeline;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/RotateTimeline.js\n ** module id = 40\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.Animation = require('./Animation');\r\nspine.Curves = require('./Curves');\r\nspine.ScaleTimeline = function (frameCount)\r\n{\r\n    this.curves = new spine.Curves(frameCount);\r\n    this.frames = []; // time, x, y, ...\r\n    this.frames.length = frameCount * 3;\r\n};\r\nspine.ScaleTimeline.prototype = {\r\n    boneIndex: 0,\r\n    getFrameCount: function ()\r\n    {\r\n        return this.frames.length / 3;\r\n    },\r\n    setFrame: function (frameIndex, time, x, y)\r\n    {\r\n        frameIndex *= 3;\r\n        this.frames[frameIndex] = time;\r\n        this.frames[frameIndex + 1] = x;\r\n        this.frames[frameIndex + 2] = y;\r\n    },\r\n    apply: function (skeleton, lastTime, time, firedEvents, alpha)\r\n    {\r\n        var frames = this.frames;\r\n        if (time < frames[0]) return; // Time is before first frame.\r\n\r\n        var bone = skeleton.bones[this.boneIndex];\r\n\r\n        if (time >= frames[frames.length - 3])\r\n        { // Time is after last frame.\r\n            bone.scaleX += (bone.data.scaleX * frames[frames.length - 2] - bone.scaleX) * alpha;\r\n            bone.scaleY += (bone.data.scaleY * frames[frames.length - 1] - bone.scaleY) * alpha;\r\n            return;\r\n        }\r\n\r\n        // Interpolate between the previous frame and the current frame.\r\n        var frameIndex = spine.Animation.binarySearch(frames, time, 3);\r\n        var prevFrameX = frames[frameIndex - 2];\r\n        var prevFrameY = frames[frameIndex - 1];\r\n        var frameTime = frames[frameIndex];\r\n        var percent = 1 - (time - frameTime) / (frames[frameIndex + -3/*PREV_FRAME_TIME*/] - frameTime);\r\n        percent = this.curves.getCurvePercent(frameIndex / 3 - 1, percent);\r\n\r\n        bone.scaleX += (bone.data.scaleX * (prevFrameX + (frames[frameIndex + 1/*FRAME_X*/] - prevFrameX) * percent) - bone.scaleX) * alpha;\r\n        bone.scaleY += (bone.data.scaleY * (prevFrameY + (frames[frameIndex + 2/*FRAME_Y*/] - prevFrameY) * percent) - bone.scaleY) * alpha;\r\n    }\r\n};\r\nmodule.exports = spine.ScaleTimeline;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/ScaleTimeline.js\n ** module id = 41\n ** module chunks = 0\n **/","var spine = require('../SpineRuntime') || {};\r\nspine.AttachmentType = require('./AttachmentType');\r\nspine.SkeletonBounds = function ()\r\n{\r\n    this.polygonPool = [];\r\n    this.polygons = [];\r\n    this.boundingBoxes = [];\r\n};\r\nspine.SkeletonBounds.prototype = {\r\n    minX: 0, minY: 0, maxX: 0, maxY: 0,\r\n    update: function (skeleton, updateAabb)\r\n    {\r\n        var slots = skeleton.slots;\r\n        var slotCount = slots.length;\r\n        var x = skeleton.x, y = skeleton.y;\r\n        var boundingBoxes = this.boundingBoxes;\r\n        var polygonPool = this.polygonPool;\r\n        var polygons = this.polygons;\r\n\r\n        boundingBoxes.length = 0;\r\n        for (var i = 0, n = polygons.length; i < n; i++)\r\n            polygonPool.push(polygons[i]);\r\n        polygons.length = 0;\r\n\r\n        for (var i = 0; i < slotCount; i++)\r\n        {\r\n            var slot = slots[i];\r\n            var boundingBox = slot.attachment;\r\n            if (boundingBox.type != spine.AttachmentType.boundingbox) continue;\r\n            boundingBoxes.push(boundingBox);\r\n\r\n            var poolCount = polygonPool.length, polygon;\r\n            if (poolCount > 0)\r\n            {\r\n                polygon = polygonPool[poolCount - 1];\r\n                polygonPool.splice(poolCount - 1, 1);\r\n            } else\r\n                polygon = [];\r\n            polygons.push(polygon);\r\n\r\n            polygon.length = boundingBox.vertices.length;\r\n            boundingBox.computeWorldVertices(x, y, slot.bone, polygon);\r\n        }\r\n\r\n        if (updateAabb) this.aabbCompute();\r\n    },\r\n    aabbCompute: function ()\r\n    {\r\n        var polygons = this.polygons;\r\n        var minX = Number.MAX_VALUE, minY = Number.MAX_VALUE, maxX = Number.MIN_VALUE, maxY = Number.MIN_VALUE;\r\n        for (var i = 0, n = polygons.length; i < n; i++)\r\n        {\r\n            var vertices = polygons[i];\r\n            for (var ii = 0, nn = vertices.length; ii < nn; ii += 2)\r\n            {\r\n                var x = vertices[ii];\r\n                var y = vertices[ii + 1];\r\n                minX = Math.min(minX, x);\r\n                minY = Math.min(minY, y);\r\n                maxX = Math.max(maxX, x);\r\n                maxY = Math.max(maxY, y);\r\n            }\r\n        }\r\n        this.minX = minX;\r\n        this.minY = minY;\r\n        this.maxX = maxX;\r\n        this.maxY = maxY;\r\n    },\r\n    /** Returns true if the axis aligned bounding box contains the point. */\r\n    aabbContainsPoint: function (x, y)\r\n    {\r\n        return x >= this.minX && x <= this.maxX && y >= this.minY && y <= this.maxY;\r\n    },\r\n    /** Returns true if the axis aligned bounding box intersects the line segment. */\r\n    aabbIntersectsSegment: function (x1, y1, x2, y2)\r\n    {\r\n        var minX = this.minX, minY = this.minY, maxX = this.maxX, maxY = this.maxY;\r\n        if ((x1 <= minX && x2 <= minX) || (y1 <= minY && y2 <= minY) || (x1 >= maxX && x2 >= maxX) || (y1 >= maxY && y2 >= maxY))\r\n            return false;\r\n        var m = (y2 - y1) / (x2 - x1);\r\n        var y = m * (minX - x1) + y1;\r\n        if (y > minY && y < maxY) return true;\r\n        y = m * (maxX - x1) + y1;\r\n        if (y > minY && y < maxY) return true;\r\n        var x = (minY - y1) / m + x1;\r\n        if (x > minX && x < maxX) return true;\r\n        x = (maxY - y1) / m + x1;\r\n        if (x > minX && x < maxX) return true;\r\n        return false;\r\n    },\r\n    /** Returns true if the axis aligned bounding box intersects the axis aligned bounding box of the specified bounds. */\r\n    aabbIntersectsSkeleton: function (bounds)\r\n    {\r\n        return this.minX < bounds.maxX && this.maxX > bounds.minX && this.minY < bounds.maxY && this.maxY > bounds.minY;\r\n    },\r\n    /** Returns the first bounding box attachment that contains the point, or null. When doing many checks, it is usually more\r\n     * efficient to only call this method if {@link #aabbContainsPoint(float, float)} returns true. */\r\n    containsPoint: function (x, y)\r\n    {\r\n        var polygons = this.polygons;\r\n        for (var i = 0, n = polygons.length; i < n; i++)\r\n            if (this.polygonContainsPoint(polygons[i], x, y)) return this.boundingBoxes[i];\r\n        return null;\r\n    },\r\n    /** Returns the first bounding box attachment that contains the line segment, or null. When doing many checks, it is usually\r\n     * more efficient to only call this method if {@link #aabbIntersectsSegment(float, float, float, float)} returns true. */\r\n    intersectsSegment: function (x1, y1, x2, y2)\r\n    {\r\n        var polygons = this.polygons;\r\n        for (var i = 0, n = polygons.length; i < n; i++)\r\n            if (polygons[i].intersectsSegment(x1, y1, x2, y2)) return this.boundingBoxes[i];\r\n        return null;\r\n    },\r\n    /** Returns true if the polygon contains the point. */\r\n    polygonContainsPoint: function (polygon, x, y)\r\n    {\r\n        var nn = polygon.length;\r\n        var prevIndex = nn - 2;\r\n        var inside = false;\r\n        for (var ii = 0; ii < nn; ii += 2)\r\n        {\r\n            var vertexY = polygon[ii + 1];\r\n            var prevY = polygon[prevIndex + 1];\r\n            if ((vertexY < y && prevY >= y) || (prevY < y && vertexY >= y))\r\n            {\r\n                var vertexX = polygon[ii];\r\n                if (vertexX + (y - vertexY) / (prevY - vertexY) * (polygon[prevIndex] - vertexX) < x) inside = !inside;\r\n            }\r\n            prevIndex = ii;\r\n        }\r\n        return inside;\r\n    },\r\n    /** Returns true if the polygon contains the line segment. */\r\n    polygonIntersectsSegment: function (polygon, x1, y1, x2, y2)\r\n    {\r\n        var nn = polygon.length;\r\n        var width12 = x1 - x2, height12 = y1 - y2;\r\n        var det1 = x1 * y2 - y1 * x2;\r\n        var x3 = polygon[nn - 2], y3 = polygon[nn - 1];\r\n        for (var ii = 0; ii < nn; ii += 2)\r\n        {\r\n            var x4 = polygon[ii], y4 = polygon[ii + 1];\r\n            var det2 = x3 * y4 - y3 * x4;\r\n            var width34 = x3 - x4, height34 = y3 - y4;\r\n            var det3 = width12 * height34 - height12 * width34;\r\n            var x = (det1 * width34 - width12 * det2) / det3;\r\n            if (((x >= x3 && x <= x4) || (x >= x4 && x <= x3)) && ((x >= x1 && x <= x2) || (x >= x2 && x <= x1)))\r\n            {\r\n                var y = (det1 * height34 - height12 * det2) / det3;\r\n                if (((y >= y3 && y <= y4) || (y >= y4 && y <= y3)) && ((y >= y1 && y <= y2) || (y >= y2 && y <= y1))) return true;\r\n            }\r\n            x3 = x4;\r\n            y3 = y4;\r\n        }\r\n        return false;\r\n    },\r\n    getPolygon: function (attachment)\r\n    {\r\n        var index = this.boundingBoxes.indexOf(attachment);\r\n        return index == -1 ? null : this.polygons[index];\r\n    },\r\n    getWidth: function ()\r\n    {\r\n        return this.maxX - this.minX;\r\n    },\r\n    getHeight: function ()\r\n    {\r\n        return this.maxY - this.minY;\r\n    }\r\n};\r\nmodule.exports = spine.SkeletonBounds;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/SkeletonBounds.js\n ** module id = 42\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\nspine.SkeletonData = function ()\n{\n    this.bones = [];\n    this.slots = [];\n    this.skins = [];\n    this.events = [];\n    this.animations = [];\n    this.ikConstraints = [];\n};\nspine.SkeletonData.prototype = {\n    name: null,\n    defaultSkin: null,\n    width: 0, height: 0,\n    version: null, hash: null,\n    /** @return May be null. */\n    findBone: function (boneName)\n    {\n        var bones = this.bones;\n        for (var i = 0, n = bones.length; i < n; i++)\n            if (bones[i].name == boneName) return bones[i];\n        return null;\n    },\n    /** @return -1 if the bone was not found. */\n    findBoneIndex: function (boneName)\n    {\n        var bones = this.bones;\n        for (var i = 0, n = bones.length; i < n; i++)\n            if (bones[i].name == boneName) return i;\n        return -1;\n    },\n    /** @return May be null. */\n    findSlot: function (slotName)\n    {\n        var slots = this.slots;\n        for (var i = 0, n = slots.length; i < n; i++)\n        {\n            if (slots[i].name == slotName) return this.slots[i];\n        }\n        return null;\n    },\n    /** @return -1 if the bone was not found. */\n    findSlotIndex: function (slotName)\n    {\n        var slots = this.slots;\n        for (var i = 0, n = slots.length; i < n; i++)\n            if (slots[i].name == slotName) return i;\n        return -1;\n    },\n    /** @return May be null. */\n    findSkin: function (skinName)\n    {\n        var skins = this.skins;\n        for (var i = 0, n = skins.length; i < n; i++)\n            if (skins[i].name == skinName) return skins[i];\n        return null;\n    },\n    /** @return May be null. */\n    findEvent: function (eventName)\n    {\n        var events = this.events;\n        for (var i = 0, n = events.length; i < n; i++)\n            if (events[i].name == eventName) return events[i];\n        return null;\n    },\n    /** @return May be null. */\n    findAnimation: function (animationName)\n    {\n        var animations = this.animations;\n        for (var i = 0, n = animations.length; i < n; i++)\n            if (animations[i].name == animationName) return animations[i];\n        return null;\n    },\n    /** @return May be null. */\n    findIkConstraint: function (ikConstraintName)\n    {\n        var ikConstraints = this.ikConstraints;\n        for (var i = 0, n = ikConstraints.length; i < n; i++)\n            if (ikConstraints[i].name == ikConstraintName) return ikConstraints[i];\n        return null;\n    }\n};\nmodule.exports = spine.SkeletonData;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/SkeletonData.js\n ** module id = 43\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.Bone = require('./Bone');\r\nspine.Slot = require('./Slot');\r\nspine.IkConstraint = require('./IkConstraint');\r\nspine.Skeleton = function (skeletonData)\r\n{\r\n    this.data = skeletonData;\r\n\r\n    this.bones = [];\r\n    for (var i = 0, n = skeletonData.bones.length; i < n; i++)\r\n    {\r\n        var boneData = skeletonData.bones[i];\r\n        var parent = !boneData.parent ? null : this.bones[skeletonData.bones.indexOf(boneData.parent)];\r\n        this.bones.push(new spine.Bone(boneData, this, parent));\r\n    }\r\n\r\n    this.slots = [];\r\n    this.drawOrder = [];\r\n    for (var i = 0, n = skeletonData.slots.length; i < n; i++)\r\n    {\r\n        var slotData = skeletonData.slots[i];\r\n        var bone = this.bones[skeletonData.bones.indexOf(slotData.boneData)];\r\n        var slot = new spine.Slot(slotData, bone);\r\n        this.slots.push(slot);\r\n        this.drawOrder.push(i);\r\n    }\r\n\r\n    this.ikConstraints = [];\r\n    for (var i = 0, n = skeletonData.ikConstraints.length; i < n; i++)\r\n        this.ikConstraints.push(new spine.IkConstraint(skeletonData.ikConstraints[i], this));\r\n\r\n    this.boneCache = [];\r\n    this.updateCache();\r\n};\r\nspine.Skeleton.prototype = {\r\n    x: 0, y: 0,\r\n    skin: null,\r\n    r: 1, g: 1, b: 1, a: 1,\r\n    time: 0,\r\n    flipX: false, flipY: false,\r\n    /** Caches information about bones and IK constraints. Must be called if bones or IK constraints are added or removed. */\r\n    updateCache: function ()\r\n    {\r\n        var ikConstraints = this.ikConstraints;\r\n        var ikConstraintsCount = ikConstraints.length;\r\n\r\n        var arrayCount = ikConstraintsCount + 1;\r\n        var boneCache = this.boneCache;\r\n        if (boneCache.length > arrayCount) boneCache.length = arrayCount;\r\n        for (var i = 0, n = boneCache.length; i < n; i++)\r\n            boneCache[i].length = 0;\r\n        while (boneCache.length < arrayCount)\r\n            boneCache[boneCache.length] = [];\r\n\r\n        var nonIkBones = boneCache[0];\r\n        var bones = this.bones;\r\n\r\n        outer:\r\n        for (var i = 0, n = bones.length; i < n; i++)\r\n        {\r\n            var bone = bones[i];\r\n            var current = bone;\r\n            do {\r\n                for (var ii = 0; ii < ikConstraintsCount; ii++)\r\n                {\r\n                    var ikConstraint = ikConstraints[ii];\r\n                    var parent = ikConstraint.bones[0];\r\n                    var child= ikConstraint.bones[ikConstraint.bones.length - 1];\r\n                    while (true)\r\n                    {\r\n                        if (current == child)\r\n                        {\r\n                            boneCache[ii].push(bone);\r\n                            boneCache[ii + 1].push(bone);\r\n                            continue outer;\r\n                        }\r\n                        if (child == parent) break;\r\n                        child = child.parent;\r\n                    }\r\n                }\r\n                current = current.parent;\r\n            } while (current);\r\n            nonIkBones[nonIkBones.length] = bone;\r\n        }\r\n    },\r\n    /** Updates the world transform for each bone. */\r\n    updateWorldTransform: function ()\r\n    {\r\n        var bones = this.bones;\r\n        for (var i = 0, n = bones.length; i < n; i++)\r\n        {\r\n            var bone = bones[i];\r\n            bone.rotationIK = bone.rotation;\r\n        }\r\n        var i = 0, last = this.boneCache.length - 1;\r\n        while (true)\r\n        {\r\n            var cacheBones = this.boneCache[i];\r\n            for (var ii = 0, nn = cacheBones.length; ii < nn; ii++)\r\n                cacheBones[ii].updateWorldTransform();\r\n            if (i == last) break;\r\n            this.ikConstraints[i].apply();\r\n            i++;\r\n        }\r\n    },\r\n    /** Sets the bones and slots to their setup pose values. */\r\n    setToSetupPose: function ()\r\n    {\r\n        this.setBonesToSetupPose();\r\n        this.setSlotsToSetupPose();\r\n    },\r\n    setBonesToSetupPose: function ()\r\n    {\r\n        var bones = this.bones;\r\n        for (var i = 0, n = bones.length; i < n; i++)\r\n            bones[i].setToSetupPose();\r\n\r\n        var ikConstraints = this.ikConstraints;\r\n        for (var i = 0, n = ikConstraints.length; i < n; i++)\r\n        {\r\n            var ikConstraint = ikConstraints[i];\r\n            ikConstraint.bendDirection = ikConstraint.data.bendDirection;\r\n            ikConstraint.mix = ikConstraint.data.mix;\r\n        }\r\n    },\r\n    setSlotsToSetupPose: function ()\r\n    {\r\n        var slots = this.slots;\r\n        for (var i = 0, n = slots.length; i < n; i++)\r\n        {\r\n            slots[i].setToSetupPose(i);\r\n        }\r\n\r\n        this.resetDrawOrder();\r\n    },\r\n    /** @return May return null. */\r\n    getRootBone: function ()\r\n    {\r\n        return this.bones.length ? this.bones[0] : null;\r\n    },\r\n    /** @return May be null. */\r\n    findBone: function (boneName)\r\n    {\r\n        var bones = this.bones;\r\n        for (var i = 0, n = bones.length; i < n; i++)\r\n            if (bones[i].data.name == boneName) return bones[i];\r\n        return null;\r\n    },\r\n    /** @return -1 if the bone was not found. */\r\n    findBoneIndex: function (boneName)\r\n    {\r\n        var bones = this.bones;\r\n        for (var i = 0, n = bones.length; i < n; i++)\r\n            if (bones[i].data.name == boneName) return i;\r\n        return -1;\r\n    },\r\n    /** @return May be null. */\r\n    findSlot: function (slotName)\r\n    {\r\n        var slots = this.slots;\r\n        for (var i = 0, n = slots.length; i < n; i++)\r\n            if (slots[i].data.name == slotName) return slots[i];\r\n        return null;\r\n    },\r\n    /** @return -1 if the bone was not found. */\r\n    findSlotIndex: function (slotName)\r\n    {\r\n        var slots = this.slots;\r\n        for (var i = 0, n = slots.length; i < n; i++)\r\n            if (slots[i].data.name == slotName) return i;\r\n        return -1;\r\n    },\r\n    setSkinByName: function (skinName)\r\n    {\r\n        var skin = this.data.findSkin(skinName);\r\n        if (!skin) throw \"Skin not found: \" + skinName;\r\n        this.setSkin(skin);\r\n    },\r\n    /** Sets the skin used to look up attachments before looking in the {@link SkeletonData#getDefaultSkin() default skin}.\r\n     * Attachments from the new skin are attached if the corresponding attachment from the old skin was attached. If there was\r\n     * no old skin, each slot's setup mode attachment is attached from the new skin.\r\n     * @param newSkin May be null. */\r\n    setSkin: function (newSkin)\r\n    {\r\n        if (newSkin)\r\n        {\r\n            if (this.skin)\r\n                newSkin._attachAll(this, this.skin);\r\n            else\r\n            {\r\n                var slots = this.slots;\r\n                for (var i = 0, n = slots.length; i < n; i++)\r\n                {\r\n                    var slot = slots[i];\r\n                    var name = slot.data.attachmentName;\r\n                    if (name)\r\n                    {\r\n                        var attachment = newSkin.getAttachment(i, name);\r\n                        if (attachment) slot.setAttachment(attachment);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.skin = newSkin;\r\n    },\r\n    /** @return May be null. */\r\n    getAttachmentBySlotName: function (slotName, attachmentName)\r\n    {\r\n        return this.getAttachmentBySlotIndex(this.data.findSlotIndex(slotName), attachmentName);\r\n    },\r\n    /** @return May be null. */\r\n    getAttachmentBySlotIndex: function (slotIndex, attachmentName)\r\n    {\r\n        if (this.skin)\r\n        {\r\n            var attachment = this.skin.getAttachment(slotIndex, attachmentName);\r\n            if (attachment) return attachment;\r\n        }\r\n        if (this.data.defaultSkin) return this.data.defaultSkin.getAttachment(slotIndex, attachmentName);\r\n        return null;\r\n    },\r\n    /** @param attachmentName May be null. */\r\n    setAttachment: function (slotName, attachmentName)\r\n    {\r\n        var slots = this.slots;\r\n        for (var i = 0, n = slots.length; i < n; i++)\r\n        {\r\n            var slot = slots[i];\r\n            if (slot.data.name == slotName)\r\n            {\r\n                var attachment = null;\r\n                if (attachmentName)\r\n                {\r\n                    attachment = this.getAttachmentBySlotIndex(i, attachmentName);\r\n                    if (!attachment) throw \"Attachment not found: \" + attachmentName + \", for slot: \" + slotName;\r\n                }\r\n                slot.setAttachment(attachment);\r\n                return;\r\n            }\r\n        }\r\n        throw \"Slot not found: \" + slotName;\r\n    },\r\n    /** @return May be null. */\r\n    findIkConstraint: function (ikConstraintName)\r\n    {\r\n        var ikConstraints = this.ikConstraints;\r\n        for (var i = 0, n = ikConstraints.length; i < n; i++)\r\n            if (ikConstraints[i].data.name == ikConstraintName) return ikConstraints[i];\r\n        return null;\r\n    },\r\n    update: function (delta)\r\n    {\r\n        this.time += delta;\r\n    },\r\n    resetDrawOrder: function () {\r\n        for (var i = 0, n = this.drawOrder.length; i < n; i++)\r\n        {\r\n            this.drawOrder[i] = i;\r\n        }\r\n    }\r\n};\r\nmodule.exports = spine.Skeleton;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/Skeleton.js\n ** module id = 44\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.Slot = function (slotData, bone)\r\n{\r\n    this.data = slotData;\r\n    this.bone = bone;\r\n    this.setToSetupPose();\r\n};\r\nspine.Slot.prototype = {\r\n    r: 1, g: 1, b: 1, a: 1,\r\n    _attachmentTime: 0,\r\n    attachment: null,\r\n    attachmentVertices: [],\r\n    setAttachment: function (attachment)\r\n    {\r\n        this.attachment = attachment;\r\n        this._attachmentTime = this.bone.skeleton.time;\r\n        this.attachmentVertices.length = 0;\r\n    },\r\n    setAttachmentTime: function (time)\r\n    {\r\n        this._attachmentTime = this.bone.skeleton.time - time;\r\n    },\r\n    getAttachmentTime: function ()\r\n    {\r\n        return this.bone.skeleton.time - this._attachmentTime;\r\n    },\r\n    setToSetupPose: function ()\r\n    {\r\n        var data = this.data;\r\n        this.r = data.r;\r\n        this.g = data.g;\r\n        this.b = data.b;\r\n        this.a = data.a;\r\n        this.blendMode = data.blendMode;\r\n\r\n        var slotDatas = this.bone.skeleton.data.slots;\r\n        for (var i = 0, n = slotDatas.length; i < n; i++)\r\n        {\r\n            if (slotDatas[i] == data)\r\n            {\r\n                this.setAttachment(!data.attachmentName ? null : this.bone.skeleton.getAttachmentBySlotIndex(i, data.attachmentName));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n};\r\nmodule.exports = spine.Slot;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/Slot.js\n ** module id = 45\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.SkeletonData = require('./SkeletonData');\r\nspine.BoneData = require('./BoneData');\r\nspine.IkConstraintData = require('./IkConstraintData');\r\nspine.SlotData = require('./SlotData');\r\nspine.Skin = require('./Skin');\r\nspine.EventData = require('./EventData');\r\nspine.AttachmentType = require('./AttachmentType');\r\nspine.ColorTimeline = require('./ColorTimeline');\r\nspine.AttachmentTimeline = require('./AttachmentTimeline');\r\nspine.RotateTimeline = require('./RotateTimeline');\r\nspine.ScaleTimeline = require('./ScaleTimeline');\r\nspine.TranslateTimeline = require('./TranslateTimeline');\r\nspine.FlipXTimeline = require('./FlipXTimeline');\r\nspine.FlipYTimeline = require('./FlipYTimeline');\r\nspine.IkConstraintTimeline = require('./IkConstraintTimeline');\r\nspine.FfdTimeline = require('./FfdTimeline');\r\nspine.DrawOrderTimeline = require('./DrawOrderTimeline');\r\nspine.EventTimeline = require('./EventTimeline');\r\nspine.Event = require('./Event');\r\nspine.Animation = require('./Animation');\r\nspine.SkeletonJsonParser = function (attachmentLoader)\r\n{\r\n    this.attachmentLoader = attachmentLoader;\r\n};\r\nspine.SkeletonJsonParser.prototype = {\r\n    scale: 1,\r\n    readSkeletonData: function (root, name)\r\n    {\r\n        var skeletonData = new spine.SkeletonData();\r\n        skeletonData.name = name;\r\n\r\n        // Skeleton.\r\n        var skeletonMap = root[\"skeleton\"];\r\n        if (skeletonMap)\r\n        {\r\n            skeletonData.hash = skeletonMap[\"hash\"];\r\n            skeletonData.version = skeletonMap[\"spine\"];\r\n            skeletonData.width = skeletonMap[\"width\"] || 0;\r\n            skeletonData.height = skeletonMap[\"height\"] || 0;\r\n        }\r\n\r\n        // Bones.\r\n        var bones = root[\"bones\"];\r\n        for (var i = 0, n = bones.length; i < n; i++)\r\n        {\r\n            var boneMap = bones[i];\r\n            var parent = null;\r\n            if (boneMap[\"parent\"])\r\n            {\r\n                parent = skeletonData.findBone(boneMap[\"parent\"]);\r\n                if (!parent) throw \"Parent bone not found: \" + boneMap[\"parent\"];\r\n            }\r\n            var boneData = new spine.BoneData(boneMap[\"name\"], parent);\r\n            boneData.length = (boneMap[\"length\"] || 0) * this.scale;\r\n            boneData.x = (boneMap[\"x\"] || 0) * this.scale;\r\n            boneData.y = (boneMap[\"y\"] || 0) * this.scale;\r\n            boneData.rotation = (boneMap[\"rotation\"] || 0);\r\n            boneData.scaleX = boneMap.hasOwnProperty(\"scaleX\") ? boneMap[\"scaleX\"] : 1;\r\n            boneData.scaleY = boneMap.hasOwnProperty(\"scaleY\") ? boneMap[\"scaleY\"] : 1;\r\n            boneData.flipX = boneMap.hasOwnProperty(\"flipX\") ? boneMap[\"flipX\"] : false;\r\n            boneData.flipY = boneMap.hasOwnProperty(\"flipY\") ? boneMap[\"flipY\"] : false;\r\n            boneData.inheritScale = boneMap.hasOwnProperty(\"inheritScale\") ? boneMap[\"inheritScale\"] : true;\r\n            boneData.inheritRotation = boneMap.hasOwnProperty(\"inheritRotation\") ? boneMap[\"inheritRotation\"] : true;\r\n            skeletonData.bones.push(boneData);\r\n        }\r\n\r\n        // IK constraints.\r\n        var ik = root[\"ik\"];\r\n        if (ik)\r\n        {\r\n            for (var i = 0, n = ik.length; i < n; i++)\r\n            {\r\n                var ikMap = ik[i];\r\n                var ikConstraintData = new spine.IkConstraintData(ikMap[\"name\"]);\r\n\r\n                var bones = ikMap[\"bones\"];\r\n                for (var ii = 0, nn = bones.length; ii < nn; ii++)\r\n                {\r\n                    var bone = skeletonData.findBone(bones[ii]);\r\n                    if (!bone) throw \"IK bone not found: \" + bones[ii];\r\n                    ikConstraintData.bones.push(bone);\r\n                }\r\n\r\n                ikConstraintData.target = skeletonData.findBone(ikMap[\"target\"]);\r\n                if (!ikConstraintData.target) throw \"Target bone not found: \" + ikMap[\"target\"];\r\n\r\n                ikConstraintData.bendDirection = (!ikMap.hasOwnProperty(\"bendPositive\") || ikMap[\"bendPositive\"]) ? 1 : -1;\r\n                ikConstraintData.mix = ikMap.hasOwnProperty(\"mix\") ? ikMap[\"mix\"] : 1;\r\n\r\n                skeletonData.ikConstraints.push(ikConstraintData);\r\n            }\r\n        }\r\n\r\n        // Slots.\r\n        var slots = root[\"slots\"];\r\n        for (var i = 0, n = slots.length; i < n; i++)\r\n        {\r\n            var slotMap = slots[i];\r\n            var boneData = skeletonData.findBone(slotMap[\"bone\"]);\r\n            if (!boneData) throw \"Slot bone not found: \" + slotMap[\"bone\"];\r\n            var slotData = new spine.SlotData(slotMap[\"name\"], boneData);\r\n\r\n            var color = slotMap[\"color\"];\r\n            if (color)\r\n            {\r\n                slotData.r = this.toColor(color, 0);\r\n                slotData.g = this.toColor(color, 1);\r\n                slotData.b = this.toColor(color, 2);\r\n                slotData.a = this.toColor(color, 3);\r\n            }\r\n\r\n            slotData.attachmentName = slotMap[\"attachment\"];\r\n\r\n\r\n            slotData.blendMode = slotMap[\"blend\"] && spine.SlotData.PIXI_BLEND_MODE_MAP[slotMap[\"blend\"]] || spine.SlotData.PIXI_BLEND_MODE_MAP['normal'];\r\n\r\n            skeletonData.slots.push(slotData);\r\n        }\r\n\r\n        // Skins.\r\n        var skins = root[\"skins\"];\r\n        for (var skinName in skins)\r\n        {\r\n            if (!skins.hasOwnProperty(skinName)) continue;\r\n            var skinMap = skins[skinName];\r\n            var skin = new spine.Skin(skinName);\r\n            for (var slotName in skinMap)\r\n            {\r\n                if (!skinMap.hasOwnProperty(slotName)) continue;\r\n                var slotIndex = skeletonData.findSlotIndex(slotName);\r\n                var slotEntry = skinMap[slotName];\r\n                for (var attachmentName in slotEntry)\r\n                {\r\n                    if (!slotEntry.hasOwnProperty(attachmentName)) continue;\r\n                    var attachment = this.readAttachment(skin, attachmentName, slotEntry[attachmentName]);\r\n                    if (attachment) skin.addAttachment(slotIndex, attachmentName, attachment);\r\n                }\r\n            }\r\n            skeletonData.skins.push(skin);\r\n            if (skin.name == \"default\") skeletonData.defaultSkin = skin;\r\n        }\r\n\r\n        // Events.\r\n        var events = root[\"events\"];\r\n        for (var eventName in events)\r\n        {\r\n            if (!events.hasOwnProperty(eventName)) continue;\r\n            var eventMap = events[eventName];\r\n            var eventData = new spine.EventData(eventName);\r\n            eventData.intValue = eventMap[\"int\"] || 0;\r\n            eventData.floatValue = eventMap[\"float\"] || 0;\r\n            eventData.stringValue = eventMap[\"string\"] || null;\r\n            skeletonData.events.push(eventData);\r\n        }\r\n\r\n        // Animations.\r\n        var animations = root[\"animations\"];\r\n        for (var animationName in animations)\r\n        {\r\n            if (!animations.hasOwnProperty(animationName)) continue;\r\n            this.readAnimation(animationName, animations[animationName], skeletonData);\r\n        }\r\n\r\n        return skeletonData;\r\n    },\r\n    readAttachment: function (skin, name, map)\r\n    {\r\n        name = map[\"name\"] || name;\r\n\r\n        var type = spine.AttachmentType[map[\"type\"] || \"region\"];\r\n        var path = map[\"path\"] || name;\r\n\r\n        var scale = this.scale;\r\n        if (type == spine.AttachmentType.region)\r\n        {\r\n            var region = this.attachmentLoader.newRegionAttachment(skin, name, path);\r\n            if (!region) return null;\r\n            region.path = path;\r\n            region.x = (map[\"x\"] || 0) * scale;\r\n            region.y = (map[\"y\"] || 0) * scale;\r\n            region.scaleX = map.hasOwnProperty(\"scaleX\") ? map[\"scaleX\"] : 1;\r\n            region.scaleY = map.hasOwnProperty(\"scaleY\") ? map[\"scaleY\"] : 1;\r\n            region.rotation = map[\"rotation\"] || 0;\r\n            region.width = (map[\"width\"] || 0) * scale;\r\n            region.height = (map[\"height\"] || 0) * scale;\r\n\r\n            var color = map[\"color\"];\r\n            if (color)\r\n            {\r\n                region.r = this.toColor(color, 0);\r\n                region.g = this.toColor(color, 1);\r\n                region.b = this.toColor(color, 2);\r\n                region.a = this.toColor(color, 3);\r\n            }\r\n\r\n            region.updateOffset();\r\n            return region;\r\n        } else if (type == spine.AttachmentType.mesh)\r\n        {\r\n            var mesh = this.attachmentLoader.newMeshAttachment(skin, name, path);\r\n            if (!mesh) return null;\r\n            mesh.path = path;\r\n            mesh.vertices = this.getFloatArray(map, \"vertices\", scale);\r\n            mesh.triangles = this.getIntArray(map, \"triangles\");\r\n            mesh.regionUVs = this.getFloatArray(map, \"uvs\", 1);\r\n            mesh.updateUVs();\r\n\r\n            color = map[\"color\"];\r\n            if (color)\r\n            {\r\n                mesh.r = this.toColor(color, 0);\r\n                mesh.g = this.toColor(color, 1);\r\n                mesh.b = this.toColor(color, 2);\r\n                mesh.a = this.toColor(color, 3);\r\n            }\r\n\r\n            mesh.hullLength = (map[\"hull\"] || 0) * 2;\r\n            if (map[\"edges\"]) mesh.edges = this.getIntArray(map, \"edges\");\r\n            mesh.width = (map[\"width\"] || 0) * scale;\r\n            mesh.height = (map[\"height\"] || 0) * scale;\r\n            return mesh;\r\n        } else if (type == spine.AttachmentType.skinnedmesh || type == spine.AttachmentType.weightedmesh)\r\n        {\r\n            var mesh = this.attachmentLoader.newSkinnedMeshAttachment(skin, name, path);\r\n            if (!mesh) return null;\r\n            mesh.path = path;\r\n\r\n            var uvs = this.getFloatArray(map, \"uvs\", 1);\r\n            var vertices = this.getFloatArray(map, \"vertices\", 1);\r\n            var weights = [];\r\n            var bones = [];\r\n            for (var i = 0, n = vertices.length; i < n; )\r\n            {\r\n                var boneCount = vertices[i++] | 0;\r\n                bones[bones.length] = boneCount;\r\n                for (var nn = i + boneCount * 4; i < nn; )\r\n                {\r\n                    bones[bones.length] = vertices[i];\r\n                    weights[weights.length] = vertices[i + 1] * scale;\r\n                    weights[weights.length] = vertices[i + 2] * scale;\r\n                    weights[weights.length] = vertices[i + 3];\r\n                    i += 4;\r\n                }\r\n            }\r\n            mesh.bones = bones;\r\n            mesh.weights = weights;\r\n            mesh.triangles = this.getIntArray(map, \"triangles\");\r\n            mesh.regionUVs = uvs;\r\n            mesh.updateUVs();\r\n\r\n            color = map[\"color\"];\r\n            if (color)\r\n            {\r\n                mesh.r = this.toColor(color, 0);\r\n                mesh.g = this.toColor(color, 1);\r\n                mesh.b = this.toColor(color, 2);\r\n                mesh.a = this.toColor(color, 3);\r\n            }\r\n\r\n            mesh.hullLength = (map[\"hull\"] || 0) * 2;\r\n            if (map[\"edges\"]) mesh.edges = this.getIntArray(map, \"edges\");\r\n            mesh.width = (map[\"width\"] || 0) * scale;\r\n            mesh.height = (map[\"height\"] || 0) * scale;\r\n            return mesh;\r\n        } else if (type == spine.AttachmentType.boundingbox)\r\n        {\r\n            var attachment = this.attachmentLoader.newBoundingBoxAttachment(skin, name);\r\n            var vertices = map[\"vertices\"];\r\n            for (var i = 0, n = vertices.length; i < n; i++)\r\n                attachment.vertices.push(vertices[i] * scale);\r\n            return attachment;\r\n        }\r\n        throw \"Unknown attachment type: \" + type;\r\n    },\r\n    readAnimation: function (name, map, skeletonData)\r\n    {\r\n        var timelines = [];\r\n        var duration = 0;\r\n\r\n        var slots = map[\"slots\"];\r\n        for (var slotName in slots)\r\n        {\r\n            if (!slots.hasOwnProperty(slotName)) continue;\r\n            var slotMap = slots[slotName];\r\n            var slotIndex = skeletonData.findSlotIndex(slotName);\r\n\r\n            for (var timelineName in slotMap)\r\n            {\r\n                if (!slotMap.hasOwnProperty(timelineName)) continue;\r\n                var values = slotMap[timelineName];\r\n                if (timelineName == \"color\")\r\n                {\r\n                    var timeline = new spine.ColorTimeline(values.length);\r\n                    timeline.slotIndex = slotIndex;\r\n\r\n                    var frameIndex = 0;\r\n                    for (var i = 0, n = values.length; i < n; i++)\r\n                    {\r\n                        var valueMap = values[i];\r\n                        var color = valueMap[\"color\"];\r\n                        var r = this.toColor(color, 0);\r\n                        var g = this.toColor(color, 1);\r\n                        var b = this.toColor(color, 2);\r\n                        var a = this.toColor(color, 3);\r\n                        timeline.setFrame(frameIndex, valueMap[\"time\"], r, g, b, a);\r\n                        this.readCurve(timeline, frameIndex, valueMap);\r\n                        frameIndex++;\r\n                    }\r\n                    timelines.push(timeline);\r\n                    duration = Math.max(duration, timeline.frames[timeline.getFrameCount() * 5 - 5]);\r\n\r\n                } else if (timelineName == \"attachment\")\r\n                {\r\n                    var timeline = new spine.AttachmentTimeline(values.length);\r\n                    timeline.slotIndex = slotIndex;\r\n\r\n                    var frameIndex = 0;\r\n                    for (var i = 0, n = values.length; i < n; i++)\r\n                    {\r\n                        var valueMap = values[i];\r\n                        timeline.setFrame(frameIndex++, valueMap[\"time\"], valueMap[\"name\"]);\r\n                    }\r\n                    timelines.push(timeline);\r\n                    duration = Math.max(duration, timeline.frames[timeline.getFrameCount() - 1]);\r\n\r\n                } else\r\n                    throw \"Invalid timeline type for a slot: \" + timelineName + \" (\" + slotName + \")\";\r\n            }\r\n        }\r\n\r\n        var bones = map[\"bones\"];\r\n        for (var boneName in bones)\r\n        {\r\n            if (!bones.hasOwnProperty(boneName)) continue;\r\n            var boneIndex = skeletonData.findBoneIndex(boneName);\r\n            if (boneIndex == -1) throw \"Bone not found: \" + boneName;\r\n            var boneMap = bones[boneName];\r\n\r\n            for (var timelineName in boneMap)\r\n            {\r\n                if (!boneMap.hasOwnProperty(timelineName)) continue;\r\n                var values = boneMap[timelineName];\r\n                if (timelineName == \"rotate\")\r\n                {\r\n                    var timeline = new spine.RotateTimeline(values.length);\r\n                    timeline.boneIndex = boneIndex;\r\n\r\n                    var frameIndex = 0;\r\n                    for (var i = 0, n = values.length; i < n; i++)\r\n                    {\r\n                        var valueMap = values[i];\r\n                        timeline.setFrame(frameIndex, valueMap[\"time\"], valueMap[\"angle\"]);\r\n                        this.readCurve(timeline, frameIndex, valueMap);\r\n                        frameIndex++;\r\n                    }\r\n                    timelines.push(timeline);\r\n                    duration = Math.max(duration, timeline.frames[timeline.getFrameCount() * 2 - 2]);\r\n\r\n                } else if (timelineName == \"translate\" || timelineName == \"scale\")\r\n                {\r\n                    var timeline;\r\n                    var timelineScale = 1;\r\n                    if (timelineName == \"scale\")\r\n                        timeline = new spine.ScaleTimeline(values.length);\r\n                    else\r\n                    {\r\n                        timeline = new spine.TranslateTimeline(values.length);\r\n                        timelineScale = this.scale;\r\n                    }\r\n                    timeline.boneIndex = boneIndex;\r\n\r\n                    var frameIndex = 0;\r\n                    for (var i = 0, n = values.length; i < n; i++)\r\n                    {\r\n                        var valueMap = values[i];\r\n                        var x = (valueMap[\"x\"] || 0) * timelineScale;\r\n                        var y = (valueMap[\"y\"] || 0) * timelineScale;\r\n                        timeline.setFrame(frameIndex, valueMap[\"time\"], x, y);\r\n                        this.readCurve(timeline, frameIndex, valueMap);\r\n                        frameIndex++;\r\n                    }\r\n                    timelines.push(timeline);\r\n                    duration = Math.max(duration, timeline.frames[timeline.getFrameCount() * 3 - 3]);\r\n\r\n                } else if (timelineName == \"flipX\" || timelineName == \"flipY\")\r\n                {\r\n                    var x = timelineName == \"flipX\";\r\n                    var timeline = x ? new spine.FlipXTimeline(values.length) : new spine.FlipYTimeline(values.length);\r\n                    timeline.boneIndex = boneIndex;\r\n\r\n                    var field = x ? \"x\" : \"y\";\r\n                    var frameIndex = 0;\r\n                    for (var i = 0, n = values.length; i < n; i++)\r\n                    {\r\n                        var valueMap = values[i];\r\n                        timeline.setFrame(frameIndex, valueMap[\"time\"], valueMap[field] || false);\r\n                        frameIndex++;\r\n                    }\r\n                    timelines.push(timeline);\r\n                    duration = Math.max(duration, timeline.frames[timeline.getFrameCount() * 2 - 2]);\r\n                } else\r\n                    throw \"Invalid timeline type for a bone: \" + timelineName + \" (\" + boneName + \")\";\r\n            }\r\n        }\r\n\r\n        var ikMap = map[\"ik\"];\r\n        for (var ikConstraintName in ikMap)\r\n        {\r\n            if (!ikMap.hasOwnProperty(ikConstraintName)) continue;\r\n            var ikConstraint = skeletonData.findIkConstraint(ikConstraintName);\r\n            var values = ikMap[ikConstraintName];\r\n            var timeline = new spine.IkConstraintTimeline(values.length);\r\n            timeline.ikConstraintIndex = skeletonData.ikConstraints.indexOf(ikConstraint);\r\n            var frameIndex = 0;\r\n            for (var i = 0, n = values.length; i < n; i++)\r\n            {\r\n                var valueMap = values[i];\r\n                var mix = valueMap.hasOwnProperty(\"mix\") ? valueMap[\"mix\"] : 1;\r\n                var bendDirection = (!valueMap.hasOwnProperty(\"bendPositive\") || valueMap[\"bendPositive\"]) ? 1 : -1;\r\n                timeline.setFrame(frameIndex, valueMap[\"time\"], mix, bendDirection);\r\n                this.readCurve(timeline, frameIndex, valueMap);\r\n                frameIndex++;\r\n            }\r\n            timelines.push(timeline);\r\n            duration = Math.max(duration, timeline.frames[timeline.getFrameCount() * 3 - 3]);\r\n        }\r\n\r\n        var ffd = map[\"ffd\"];\r\n        for (var skinName in ffd)\r\n        {\r\n            var skin = skeletonData.findSkin(skinName);\r\n            var slotMap = ffd[skinName];\r\n            for (slotName in slotMap)\r\n            {\r\n                var slotIndex = skeletonData.findSlotIndex(slotName);\r\n                var meshMap = slotMap[slotName];\r\n                for (var meshName in meshMap)\r\n                {\r\n                    var values = meshMap[meshName];\r\n                    var timeline = new spine.FfdTimeline(values.length);\r\n                    var attachment = skin.getAttachment(slotIndex, meshName);\r\n                    if (!attachment) throw \"FFD attachment not found: \" + meshName;\r\n                    timeline.slotIndex = slotIndex;\r\n                    timeline.attachment = attachment;\r\n\r\n                    var isMesh = attachment.type == spine.AttachmentType.mesh;\r\n                    var vertexCount;\r\n                    if (isMesh)\r\n                        vertexCount = attachment.vertices.length;\r\n                    else\r\n                        vertexCount = attachment.weights.length / 3 * 2;\r\n\r\n                    var frameIndex = 0;\r\n                    for (var i = 0, n = values.length; i < n; i++)\r\n                    {\r\n                        var valueMap = values[i];\r\n                        var vertices;\r\n                        if (!valueMap[\"vertices\"])\r\n                        {\r\n                            if (isMesh)\r\n                                vertices = attachment.vertices;\r\n                            else\r\n                            {\r\n                                vertices = [];\r\n                                for (var j = 0; j < vertexCount; ++j) vertices.push(0); //initialize to 0\r\n                            }\r\n                        } else {\r\n                            var verticesValue = valueMap[\"vertices\"];\r\n                            vertices = [];\r\n                            for (var j = 0; j < vertexCount; ++j) vertices.push(0); //initialize to 0\r\n                            var start = valueMap[\"offset\"] || 0;\r\n                            var nn = verticesValue.length;\r\n                            if (this.scale == 1)\r\n                            {\r\n                                for (var ii = 0; ii < nn; ii++)\r\n                                    vertices[ii + start] = verticesValue[ii];\r\n                            } else {\r\n                                for (var ii = 0; ii < nn; ii++)\r\n                                    vertices[ii + start] = verticesValue[ii] * this.scale;\r\n                            }\r\n                            if (isMesh)\r\n                            {\r\n                                var meshVertices = attachment.vertices;\r\n                                for (var ii = 0, nn = vertices.length; ii < nn; ii++)\r\n                                    vertices[ii] += meshVertices[ii];\r\n                            }\r\n                        }\r\n\r\n                        timeline.setFrame(frameIndex, valueMap[\"time\"], vertices);\r\n                        this.readCurve(timeline, frameIndex, valueMap);\r\n                        frameIndex++;\r\n                    }\r\n                    timelines[timelines.length] = timeline;\r\n                    duration = Math.max(duration, timeline.frames[timeline.getFrameCount() - 1]);\r\n                }\r\n            }\r\n        }\r\n\r\n        var drawOrderValues = map[\"drawOrder\"];\r\n        if (!drawOrderValues) drawOrderValues = map[\"draworder\"];\r\n        if (drawOrderValues)\r\n        {\r\n            var timeline = new spine.DrawOrderTimeline(drawOrderValues.length);\r\n            var slotCount = skeletonData.slots.length;\r\n            var frameIndex = 0;\r\n            for (var i = 0, n = drawOrderValues.length; i < n; i++)\r\n            {\r\n                var drawOrderMap = drawOrderValues[i];\r\n                var drawOrder = null;\r\n                if (drawOrderMap[\"offsets\"])\r\n                {\r\n                    drawOrder = [];\r\n                    drawOrder.length = slotCount;\r\n                    for (var ii = slotCount - 1; ii >= 0; ii--)\r\n                        drawOrder[ii] = -1;\r\n                    var offsets = drawOrderMap[\"offsets\"];\r\n                    var unchanged = [];\r\n                    unchanged.length = slotCount - offsets.length;\r\n                    var originalIndex = 0, unchangedIndex = 0;\r\n                    for (var ii = 0, nn = offsets.length; ii < nn; ii++)\r\n                    {\r\n                        var offsetMap = offsets[ii];\r\n                        var slotIndex = skeletonData.findSlotIndex(offsetMap[\"slot\"]);\r\n                        if (slotIndex == -1) throw \"Slot not found: \" + offsetMap[\"slot\"];\r\n                        // Collect unchanged items.\r\n                        while (originalIndex != slotIndex)\r\n                            unchanged[unchangedIndex++] = originalIndex++;\r\n                        // Set changed items.\r\n                        drawOrder[originalIndex + offsetMap[\"offset\"]] = originalIndex++;\r\n                    }\r\n                    // Collect remaining unchanged items.\r\n                    while (originalIndex < slotCount)\r\n                        unchanged[unchangedIndex++] = originalIndex++;\r\n                    // Fill in unchanged items.\r\n                    for (var ii = slotCount - 1; ii >= 0; ii--)\r\n                        if (drawOrder[ii] == -1) drawOrder[ii] = unchanged[--unchangedIndex];\r\n                }\r\n                timeline.setFrame(frameIndex++, drawOrderMap[\"time\"], drawOrder);\r\n            }\r\n            timelines.push(timeline);\r\n            duration = Math.max(duration, timeline.frames[timeline.getFrameCount() - 1]);\r\n        }\r\n\r\n        var events = map[\"events\"];\r\n        if (events)\r\n        {\r\n            var timeline = new spine.EventTimeline(events.length);\r\n            var frameIndex = 0;\r\n            for (var i = 0, n = events.length; i < n; i++)\r\n            {\r\n                var eventMap = events[i];\r\n                var eventData = skeletonData.findEvent(eventMap[\"name\"]);\r\n                if (!eventData) throw \"Event not found: \" + eventMap[\"name\"];\r\n                var event = new spine.Event(eventData);\r\n                event.intValue = eventMap.hasOwnProperty(\"int\") ? eventMap[\"int\"] : eventData.intValue;\r\n                event.floatValue = eventMap.hasOwnProperty(\"float\") ? eventMap[\"float\"] : eventData.floatValue;\r\n                event.stringValue = eventMap.hasOwnProperty(\"string\") ? eventMap[\"string\"] : eventData.stringValue;\r\n                timeline.setFrame(frameIndex++, eventMap[\"time\"], event);\r\n            }\r\n            timelines.push(timeline);\r\n            duration = Math.max(duration, timeline.frames[timeline.getFrameCount() - 1]);\r\n        }\r\n\r\n        skeletonData.animations.push(new spine.Animation(name, timelines, duration));\r\n    },\r\n    readCurve: function (timeline, frameIndex, valueMap)\r\n    {\r\n        var curve = valueMap[\"curve\"];\r\n        if (!curve)\r\n            timeline.curves.setLinear(frameIndex);\r\n        else if (curve == \"stepped\")\r\n            timeline.curves.setStepped(frameIndex);\r\n        else if (curve instanceof Array)\r\n            timeline.curves.setCurve(frameIndex, curve[0], curve[1], curve[2], curve[3]);\r\n    },\r\n    toColor: function (hexString, colorIndex)\r\n    {\r\n        if (hexString.length != 8) throw \"Color hexidecimal length must be 8, recieved: \" + hexString;\r\n        return parseInt(hexString.substring(colorIndex * 2, (colorIndex * 2) + 2), 16) / 255;\r\n    },\r\n    getFloatArray: function (map, name, scale)\r\n    {\r\n        var list = map[name];\r\n        var values = new spine.Float32Array(list.length);\r\n        var i = 0, n = list.length;\r\n        if (scale == 1)\r\n        {\r\n            for (; i < n; i++)\r\n                values[i] = list[i];\r\n        } else {\r\n            for (; i < n; i++)\r\n                values[i] = list[i] * scale;\r\n        }\r\n        return values;\r\n    },\r\n    getIntArray: function (map, name)\r\n    {\r\n        var list = map[name];\r\n        var values = new spine.Uint16Array(list.length);\r\n        for (var i = 0, n = list.length; i < n; i++)\r\n            values[i] = list[i] | 0;\r\n        return values;\r\n    }\r\n};\r\nmodule.exports = spine.SkeletonJsonParser;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/SkeletonJsonParser.js\n ** module id = 46\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.SlotData = function (name, boneData)\r\n{\r\n    this.name = name;\r\n    this.boneData = boneData;\r\n};\r\n\r\nspine.SlotData.PIXI_BLEND_MODE_MAP = {\r\n    'multiply': PIXI.BLEND_MODES.MULTIPLY,\r\n    'screen': PIXI.BLEND_MODES.SCREEN,\r\n    'additive': PIXI.BLEND_MODES.ADD,\r\n    'normal': PIXI.BLEND_MODES.NORMAL\r\n};\r\n\r\nspine.SlotData.prototype = {\r\n    r: 1, g: 1, b: 1, a: 1,\r\n    attachmentName: null,\r\n    blendMode: PIXI.BLEND_MODES.NORMAL\r\n\r\n\r\n};\r\n\r\n\r\nmodule.exports = spine.SlotData;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/SlotData.js\n ** module id = 47\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.Skin = function (name)\r\n{\r\n    this.name = name;\r\n    this.attachments = {};\r\n};\r\nspine.Skin.prototype = {\r\n    addAttachment: function (slotIndex, name, attachment)\r\n    {\r\n        this.attachments[slotIndex + \":\" + name] = attachment;\r\n    },\r\n    getAttachment: function (slotIndex, name)\r\n    {\r\n        return this.attachments[slotIndex + \":\" + name];\r\n    },\r\n    _attachAll: function (skeleton, oldSkin)\r\n    {\r\n        for (var key in oldSkin.attachments)\r\n        {\r\n            var colon = key.indexOf(\":\");\r\n            var slotIndex = parseInt(key.substring(0, colon));\r\n            var name = key.substring(colon + 1);\r\n            var slot = skeleton.slots[slotIndex];\r\n            if (slot.attachment && slot.attachment.name == name)\r\n            {\r\n                var attachment = this.getAttachment(slotIndex, name);\r\n                if (attachment) slot.setAttachment(attachment);\r\n            }\r\n        }\r\n    }\r\n};\r\nmodule.exports = spine.Skin;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/Skin.js\n ** module id = 48\n ** module chunks = 0\n **/","var spine = require('../SpineUtil');\r\nspine.Animation = require('./Animation');\r\nspine.Curves = require('./Curves');\r\nspine.TranslateTimeline = function (frameCount)\r\n{\r\n    this.curves = new spine.Curves(frameCount);\r\n    this.frames = []; // time, x, y, ...\r\n    this.frames.length = frameCount * 3;\r\n};\r\nspine.TranslateTimeline.prototype = {\r\n    boneIndex: 0,\r\n    getFrameCount: function ()\r\n    {\r\n        return this.frames.length / 3;\r\n    },\r\n    setFrame: function (frameIndex, time, x, y)\r\n    {\r\n        frameIndex *= 3;\r\n        this.frames[frameIndex] = time;\r\n        this.frames[frameIndex + 1] = x;\r\n        this.frames[frameIndex + 2] = y;\r\n    },\r\n    apply: function (skeleton, lastTime, time, firedEvents, alpha)\r\n    {\r\n        var frames = this.frames;\r\n        if (time < frames[0]) return; // Time is before first frame.\r\n\r\n        var bone = skeleton.bones[this.boneIndex];\r\n\r\n        if (time >= frames[frames.length - 3])\r\n        { // Time is after last frame.\r\n            bone.x += (bone.data.x + frames[frames.length - 2] - bone.x) * alpha;\r\n            bone.y += (bone.data.y + frames[frames.length - 1] - bone.y) * alpha;\r\n            return;\r\n        }\r\n\r\n        // Interpolate between the previous frame and the current frame.\r\n        var frameIndex = spine.Animation.binarySearch(frames, time, 3);\r\n        var prevFrameX = frames[frameIndex - 2];\r\n        var prevFrameY = frames[frameIndex - 1];\r\n        var frameTime = frames[frameIndex];\r\n        var percent = 1 - (time - frameTime) / (frames[frameIndex + -3/*PREV_FRAME_TIME*/] - frameTime);\r\n        percent = this.curves.getCurvePercent(frameIndex / 3 - 1, percent);\r\n\r\n        bone.x += (bone.data.x + prevFrameX + (frames[frameIndex + 1/*FRAME_X*/] - prevFrameX) * percent - bone.x) * alpha;\r\n        bone.y += (bone.data.y + prevFrameY + (frames[frameIndex + 2/*FRAME_Y*/] - prevFrameY) * percent - bone.y) * alpha;\r\n    }\r\n};\r\nmodule.exports = spine.TranslateTimeline;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/SpineRuntime/TranslateTimeline.js\n ** module id = 49\n ** module chunks = 0\n **/","var Resource = PIXI.loaders.Resource,\r\n    spine = require('../SpineRuntime'),\r\n    imageLoaderAdapter = require('./imageLoaderAdapter');\r\n\r\nvar atlasParser = module.exports = function () {\r\n    return function (resource, next) {\r\n        // skip if no data, its not json, or it isn't atlas data\r\n        if (!resource.data || !resource.isJson || !resource.data.bones) {\r\n            return next();\r\n        }\r\n\r\n        /**\r\n         * use a bit of hackery to load the atlas file, here we assume that the .json, .atlas and .png files\r\n         * that correspond to the spine file are in the same base URL and that the .json and .atlas files\r\n         * have the same name\r\n         */\r\n        var atlasPath = resource.url.substr(0, resource.url.lastIndexOf('.')) + '.atlas';\r\n        var atlasOptions = {\r\n            crossOrigin: resource.crossOrigin,\r\n            xhrType: Resource.XHR_RESPONSE_TYPE.TEXT,\r\n            metadata: resource.metadata.spineMetadata\r\n        };\r\n        var imageOptions = {\r\n            crossOrigin: resource.crossOrigin,\r\n            metadata: resource.metadata.imageMetadata\r\n        };\r\n        var baseUrl = resource.url.substr(0, resource.url.lastIndexOf('/') + 1);\r\n\r\n        var adapter = imageLoaderAdapter(this, resource.name + '_atlas_page_', baseUrl, imageOptions);\r\n        this.add(resource.name + '_atlas', atlasPath, atlasOptions, function (res) {\r\n            new spine.Atlas(this.xhr.responseText, adapter, function(spineAtlas) {\r\n                var spineJsonParser = new spine.SkeletonJsonParser(new spine.AtlasAttachmentParser(spineAtlas));\r\n                var skeletonData = spineJsonParser.readSkeletonData(resource.data);\r\n\r\n                resource.spineData = skeletonData;\r\n                resource.spineAtlas = spineAtlas;\r\n                if (atlasParser.enableCaching)\r\n                    atlasParser.AnimCache[resource.name] = resource.spineData;\r\n\r\n                next();\r\n            });\r\n        });\r\n    };\r\n};\r\n\r\natlasParser.AnimCache = {};\r\natlasParser.enableCaching = true;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/loaders/atlasParser.js\n ** module id = 50\n ** module chunks = 0\n **/","var spine = require('../SpineRuntime');\r\n\r\nmodule.exports = function (loader, namePrefix, baseUrl, imageOptions) {\r\n    if (baseUrl && baseUrl.lastIndexOf('/') !== (baseUrl.length-1))\r\n    {\r\n        baseUrl += '/';\r\n    }\r\n    return function(line, callback) {\r\n        var name = namePrefix + line;\r\n        var url = baseUrl + line;\r\n        loader.add(name, url, imageOptions, function(resource) {\r\n            callback(resource.texture.baseTexture);\r\n        });\r\n    }\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/loaders/imageLoaderAdapter.js\n ** module id = 51\n ** module chunks = 0\n **/","module.exports = {\r\n    atlasParser: require('./atlasParser'),\r\n    Loader: require('./Loader'),\r\n    syncImageLoaderAdapter: require('./syncImageLoaderAdapter'),\r\n    imageLoaderAdapter: require('./imageLoaderAdapter')\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/loaders/index.js\n ** module id = 52\n ** module chunks = 0\n **/","/**\r\n * @file        Spine resource loader\r\n * @author      Ivan Popelyshev <ivan.popelyshev@gmail.com>\r\n * @copyright   2013-2015 GoodBoyDigital\r\n * @license     {@link https://github.com/GoodBoyDigital/pixi.js/blob/master/LICENSE|MIT License}\r\n */\r\n\r\n/**\r\n * @namespace PIXI.loaders\r\n */\r\n\r\nvar atlasParser = require('./atlasParser');\r\n\r\nPIXI.loaders.Loader.addPixiMiddleware(atlasParser);\r\nPIXI.loader.use(atlasParser());\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-spine/src/loaders/Loader.js\n ** module id = 53\n ** module chunks = 0\n **/","/**\n * Created by wizard on 16/3/30.\n */\n\nimport {ResourceManager}from './imports';\nvar helper = helper || {};\n\nhelper.scaleToWindow = function (renderer, stage) {\n  var scaleX = window.innerWidth / 480;\n  var scaleY = window.innerHeight / 754;\n  var scale = Math.min(scaleX, scaleY);\n\n  var width = 480 * scale;\n  var height = 754 * scale;\n\n  var canvas = renderer.view;\n  canvas.style.padding = 0;\n  canvas.style.margin = 0;\n\n  var margin = (window.innerWidth - width) / 2;\n  canvas.style.marginLeft = margin + \"px\";\n  canvas.style.marginRight = margin + \"px\";\n\n  //canvas.style.transformOrigin = \"0 0\";\n  //canvas.style.transform = \"scale(\" + scale + \")\";\n\n  //renderer.autoResize = true;\n  renderer.resize(width, height);\n  stage.scale.x = scale;\n  stage.scale.y = scale;\n};\n\nhelper.reorderNode = function (node) {\n  var depthCompare = function (a, b) {\n    var az = a.zorder;\n    var bz = b.zorder;\n    if (az == undefined) {\n      az = 0;\n    }\n    if (bz == undefined) {\n      bz = 0;\n    }\n    if (az < bz)\n      return -1;\n    if (az > bz)\n      return 1;\n    return 0;\n  }\n\n  node.children.sort(depthCompare);\n};\n\n//only for layout\nhelper.copyObject = function (obj, id) {\n  let that = {};\n  for (let i in obj) {\n    that[i] = obj[i];\n  }\n  that.id = id;\n  return that;\n};\n\nhelper.createSprite = function (res) {\n  let sprite = new PIXI.Sprite(ResourceManager.resource[res].texture);\n  return sprite;\n};\n\nhelper.wordWrapText = function (textObj, string) {\n  let textString = string ? string : textObj.text;\n  let wordWrap = textObj._style.wordWrap;\n  let wordWrapWidth = textObj._style.wordWrapWidth;\n  let textWidth = textObj.width;//***保留此行 计算宽度\n  if (!wordWrap) {\n    return;\n};\n  let newStr = \"\";\n  let wordWrapLeftWidth = wordWrapWidth;\n  for (let i = 0; i < textString.length; i++) {\n    let width = textObj.context.measureText(textString[i]).width;\n    if (wordWrapLeftWidth < width) {\n      wordWrapLeftWidth = wordWrapWidth;\n      newStr = newStr +  \"\\n\" ;\n    }\n    newStr += textString[i];\n    wordWrapLeftWidth -= width;\n  }\n  textObj.text = newStr;\n};\n\n\nexport default helper;\n\n\n/** WEBPACK FOOTER **\n ** ./src/utility/helper.js\n **/","/**\n * Created by hewenlong on 16-3-18.\n */\n\nconst ResourceManager = ResourceManager || (()=> {\n    let that = {};\n\n    let _loadingMap = {};\n    that.resource = {};\n\n    let _loadingUIMap = {};\n    that.uiLoaded = {};\n\n    let resourcePath = '';\n    that.setResPath = function (path) {\n      resourcePath = path;\n    };\n\n    that.loadUI = function (name, cb) {\n      if (that.uiLoaded[name]) {\n        console.log(\" res has load, call back\", name);\n        cb();\n        return;\n      }\n\n      var cbList = _loadingUIMap[name];\n      if (!cbList) {\n        //var path = _cfg[name];\n        //console.log('res cfg :' + JSON.stringify(path));\n        //if (!path) {\n        //    console.log('error no path for res: ' + name);\n        //    return;\n        //}\n\n        cbList = [];\n        _loadingUIMap[name] = cbList;\n        cbList.push(cb);\n        EZGUI.Theme.load([resourcePath+name], function () {\n          that.uiLoaded[name] = true;\n          for (var i = 0; i < cbList.length; ++i) {\n            console.log(\"res load: \" + name);\n            cbList[i].call(this)\n          }\n          delete _loadingUIMap[name];\n        });\n      }\n      else {\n        cbList.push(cb);\n      }\n    }\n\n\n    that.load = function (name, cb) {\n      if (that.resource[name]) {\n        console.log(\" res has load, call back\", name);\n        cb(that.resource[name]);\n        return;\n      }\n\n      var cbList = _loadingMap[name];\n      if (!cbList) {\n        //var path = _cfg[name];\n        //if (!path) {\n        //    console.log('error no path for res: ' + name);\n        //    return;\n        //}\n\n        cbList = [];\n        _loadingMap[name] = cbList;\n        cbList.push(cb);\n        console.log('loadMap',resourcePath+name);\n        PIXI.loader.add(name, resourcePath+name).load(function (loader, res) {\n          that.resource[name] = res[name];\n          for (var i = 0; i < cbList.length; ++i) {\n            console.log(\"res load: \" + name);\n            cbList[i].call(this, that.resource[name], name)\n          }\n          delete _loadingMap[name];\n        });\n      }\n      else {\n        cbList.push(cb);\n      }\n    }\n\n    that.loadList = function (resList, cb) {\n      var loadedCnt = 0;\n      var checkEndFunc = function () {\n        loadedCnt++;\n        if (loadedCnt == resList.length) {\n          if (cb) {\n            cb.call(this);\n          }\n        }\n      }\n\n      for (var i = 0; i < resList.length; ++i) {\n        that.load(resList[i], checkEndFunc);\n      }\n\n    }\n\n    return that;\n  })();\n\nexport  default ResourceManager;\n\n\n/** WEBPACK FOOTER **\n ** ./src/utility/resource-manager.js\n **/","/**\n * Created by wizard on 16/3/30.\n */\n\nconst fpsLimits = 1000 / 60;\n\nconst Director = function (width, height) {\n    let that = {};\n\n    that.runningWorld = null;\n\n    that.renderer = PIXI.autoDetectRenderer(width, height);\n    document.body.appendChild(that.renderer.view);\n\n    that.startWorld = function (newWorld) {\n        if (that.runningWorld) {\n            newWorld.node.scale.x = that.runningWorld.node.scale.x;\n            newWorld.node.scale.y = that.runningWorld.node.scale.y;\n            delete that.runningWorld;\n            that.runningWorld = newWorld;\n            return;\n        }\n\n        var stepOnce = function (timestamp) {\n            requestAnimationFrame(stepOnce);\n\n            var dt = timestamp - _lastTime;\n            if (dt < fpsLimits) {\n                return;\n            }\n\n            _lastTime = timestamp;\n            if (that.runningWorld) {\n                that.runningWorld.update(dt);\n                that.renderer.render(that.runningWorld.node);\n            }\n        };\n\n        var _lastTime = performance.now();\n        that.runningWorld = newWorld;\n        stepOnce(_lastTime);\n    }\n\n    return that;\n}\n\n\nlet SharedDirector = SharedDirector || (()=> {\n        let that = {};\n        let sharedDirector = null;\n        that.create = function (width, height) {\n            sharedDirector = Director(width, height);\n            return sharedDirector;\n        };\n\n        that.sharedDirector = function () {\n            return sharedDirector;\n        };\n\n        return that;\n\n    })();\n\nexport  default SharedDirector;\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utility/render/director.js\n **/","/**\n * Created by wizard on 16/4/1.\n */\n\nconst timeoutLimit = 30 * 1000;\n\nconst SRequest = SRequest || (()=> {\n    let that = {};\n\n    that.get = function (baseURL, handlerURL, params, cb) {\n        var xhr = new XMLHttpRequest();\n\n        var paramStr = \"\";\n        if (params) {\n            let isStart = true;\n            for (var index in params) {\n                if (isStart) {\n                    isStart = false;\n                    paramStr += \"?\";\n                }\n                else {\n                    paramStr += \"&\";\n                }\n                paramStr += index + \"=\" + params[index];\n            }\n        }\n        console.log(\"get string: \" + baseURL + handlerURL + paramStr);\n\n        xhr.open(\"GET\", baseURL + handlerURL + paramStr, true);\n        xhr.timeout = timeoutLimit;\n        xhr.onload = function () {\n            let data = JSON.parse(xhr.responseText);\n            if (cb) {\n                cb.call(this, data);\n            }\n        }\n        xhr.ontimeout = function () {\n            if (cb) {\n                cb.call(this, {timeout: true});\n            }\n        }\n        xhr.send();\n    }\n\n    that.post = function (baseURL, handlerURL, params, cb) {\n\n        var xhr = new XMLHttpRequest();   // new HttpRequest instance\n        xhr.open(\"POST\", baseURL + handlerURL, true);\n        xhr.timeout = timeoutLimit;\n        xhr.onload = function () {\n            let data = JSON.parse(xhr.responseText);\n            if (cb) {\n                cb.call(this, data);\n            }\n        }\n        xhr.ontimeout = function () {\n            if (cb) {\n                cb.call(this, {timeout: true});\n            }\n        }\n        xhr.send(JSON.stringify(params));\n    }\n\n    return that;\n})();\n\nexport default SRequest;\n\n\n/** WEBPACK FOOTER **\n ** ./src/utility/simple-request.js\n **/","/**\n * Created by wizard on 16/3/30.\n */\n\nimport Helper from \"../helper.js\"\n\nconst BaseWorld = function () {\n  let that = {};\n\n  that.node = null;\n\n  that.init = function () {\n    that.node = new PIXI.Container();\n    return true;\n  }\n\n  that.update = function (dt) {\n    //console.log(\"update now:\" + dt );\n  }\n\n  that.lock2Layer = function (layer) {\n    Helper.reorderNode(that.node);\n\n    for(let i=0; i<that.node.children.length; ++i) {\n      if(that.node.children[i] == layer.node) {\n        break;\n      }\n      that.node.children[i].interactiveChildren = false;\n    }\n  }\n\n  that.unlock2Layer = function (layer) {\n\n    //that.node.interactiveChildren = true;\n    for(let i=0; i<that.node.children.length; ++i) {\n      if(that.node.children[i] == layer.node) {\n        break;\n      }\n      that.node.children[i].interactiveChildren = true;\n    }\n\n    that.node.removeChild(layer.node);\n  }\n\n  return that;\n}\nexport default BaseWorld;\n\n\n/** WEBPACK FOOTER **\n ** ./src/utility/render/base-world.js\n **/","/**\n * Created by wizard on 16/3/30.\n */\n\nconst BaseLayer =  function (layout, theme) {\n  let that = {};\n\n  that.node = EZGUI.create(layout, theme);\n  that.node.zorder = 0;\n\n  that.owner = null;\n\n  that.init = function () {\n\n    return true;\n  };\n\n  that.add2World = function (world) {\n    world.node.addChild(that.node);\n    that.owner = world;\n  }\n\n  that.removeFromWorld = function () {\n    that.owner.node.removeChild(that.node);\n    that.owner = null;\n  }\n\n\n  return that;\n}\nexport default BaseLayer;\n\n\n/** WEBPACK FOOTER **\n ** ./src/utility/render/base-layer.js\n **/","/**\n * Created by wizard on 16/3/31.\n */\n\nimport Inherited from \"../inherited.js\"\nimport BaseLayer from \"./base-layer.js\"\n\nconst ModelLayer = function (layout, theme) {\n    let that = Inherited(BaseLayer(layout, theme));\n\n    that.inheritOn('add2World', function (world) {\n        world.lock2Layer(that);\n        return true;\n    });\n\n    that.removeFromWorld = function () {\n        that.owner.unlock2Layer(that);\n        that.owner.node.removeChild(that.node);\n        that.owner = null;\n    };\n\n    return that;\n}\nexport default ModelLayer\n\n\n/** WEBPACK FOOTER **\n ** ./src/utility/render/model-layer.js\n **/","/**\n * Created by wizard on 15/3/3.\n */\nconst Inherited = function (obj) {\n    let registry = {};\n\n    obj.inheritOn = function (name, handler) {\n\n        if (!obj.hasOwnProperty(name)) {\n            obj[name] = handler;\n            return;\n        }\n\n        if (registry.hasOwnProperty(name)) {\n            registry[name].push(handler);\n        }\n        else {\n            let parentHandler = obj[name];\n            registry[name] = [parentHandler, handler];\n\n            obj[name] = function () {\n                let result;\n                let handlerList = registry[name];\n                for (let index in handlerList) {\n                    result = handlerList[index].apply(this, arguments);\n                    if (result != undefined && !result) {\n                        return result;\n                    }\n                }\n\n                return result;\n            }\n        }\n    };\n\n    return obj;\n};\n\nexport  default Inherited;\n\n\n/** WEBPACK FOOTER **\n ** ./src/utility/inherited.js\n **/","const Eventuality = function (obj) {\n    let registry = {};\n\n    obj.fire = function (event) {\n\n        let handler = null;\n\n        if (registry.hasOwnProperty(event)) {\n            let event_list = registry[event];\n            for (let i = 0; i < event_list.length; ++i) {\n                handler = event_list[i];\n                let args = [];\n\n                //not including event\n                for (let n = 1; n < arguments.length; ++n) {\n                    args.push(arguments[n]);\n                }\n                handler.apply(this, args);\n            }\n        }\n\n        return this;\n    }\n\n    obj.on = function (type, method) {\n        if (registry.hasOwnProperty(type)) {\n            registry[type].push(method);\n        }\n        else {\n            registry[type] = [method];\n        }\n\n        return this;\n    }\n\n    obj.removeListener = function (type, method) {\n        if (!registry.hasOwnProperty(type)) {\n            return false;\n        }\n        let index = registry[type].indexOf(method);\n        if (index >= 0) {\n            registry[type].splice(index, 1);\n        }\n    }\n\n    obj.removeAllListeners = function () {\n        registry = {};\n    }\n    return obj;\n};\nexport  default Eventuality;\n\n\n/** WEBPACK FOOTER **\n ** ./src/utility/eventuality.js\n **/","/**\n * Created by wizard on 16/3/30.\n */\n\nimport {Inherited, BaseWorld, ResourceManager, Director, Helper} from \"../utility/imports.js\"\nimport PetActor from \"../actor/pet-actor.js\"\nimport defines from \"../game-defines.js\"\nimport MenuLayer from \"./menu-layer.js\"\nimport Test2World from \"./test2-world.js\"\nimport resource from '../resources'\nimport SkillLayer from \"./skill-list-layer.js\";\nconst TestWorld =  function TestWorld() {\n  let that = Inherited(BaseWorld() );\n\n  that.inheritOn('init', function () {\n\n    ResourceManager.load(resource.json_cat_5, function (res, name) {\n      var options = {\n        type: \"spine\",\n        spineData: res.spineData\n      }\n\n      var petActor = PetActor(options);\n      petActor.init(that.node);\n      petActor.node.position.x = 120;\n      petActor.node.position.y = 750;\n      petActor.node.zorder = 4;\n\n      Helper.reorderNode(that.node);\n    });\n\n    ResourceManager.loadList([resource.json_pet1,resource.json_pet2,resource.json_pet3],\n      function () {\n        var options = {\n          type: \"frame\",\n          animates: {\n            idle: {\n              pre: \"stand\",\n              start: 1,\n              end: 15,\n              speed: 0.5\n            },\n            upgrade: {\n              pre: \"weishi\",\n              start: 1,\n              end: 8\n            }\n          }\n        }\n\n        var petActor = PetActor(options);\n        petActor.init(that.node);\n        petActor.node.position.x = 360;\n        petActor.node.position.y = 750;\n        petActor.node.zorder = 4;\n        Helper.reorderNode(that.node);\n      }\n    );\n\n    var menu = MenuLayer();\n    menu.init();\n    menu.add2World(that);\n\n    let graphics = new PIXI.Graphics();\n    graphics.beginFill(0xff0000);\n    graphics.lineStyle(10, 0xffd900, 1);\n    graphics.drawCircle(200,200,100);\n    graphics.endFill();\n    that.node.addChild(graphics);\n    //ResourceManager.load(resource.skill_ui, function (res, name) {\n    //  var list = [\n    //    {id: 0},\n    //    {id: 1},\n    //    {id: 2},\n    //    {id: 3},\n    //    {id: 4}\n    //  ];\n    //  let skillLayer = SkillLayer(list);\n    //  skillLayer.init();\n    //  skillLayer.add2World(that);\n    //});\n\n    Helper.reorderNode(that.node);\n\n    return true;\n  });\n\n  that.inheritOn('update', function (dt) {\n\n  });\n\n  return that;\n}\n\nexport default TestWorld;\n\n\n/** WEBPACK FOOTER **\n ** ./src/game/test-world.js\n **/","/**\n * Created by wizard on 16/3/15.\n */\n//var PIXI = require(\"pixi.js\");\n//PIXI.spine = require(\"pixi-spine\");\n\nimport defines from \"./../game-defines.js\"\nimport {AnimationFactor, Director} from \"../utility/imports.js\"\n\nconst PetActor = function (options) {\n  var that = {};\n\n  that.init = function (container) {\n\n    var ani = AnimationFactor.createAnimation(options);\n\n    ani.playLoop('idle');\n\n    container.addChild(ani.node);\n\n    ani.node.interactive = true;\n\n    ani.node.on('click', function() {\n      ani.playOnce('upgrade', function () {\n        ani.playLoop(\"idle\");\n      });\n    });\n\n    that.node = ani.node;\n  }\n  \n  that.update = function (dt) {\n    \n  }\n\n  return that;\n}\n\nexport default PetActor;\n\n\n/** WEBPACK FOOTER **\n ** ./src/actor/pet-actor.js\n **/","/**\n * Created by wizard on 16/3/14.\n */\n\nvar defines = {};\n\nif(__DEV__) {\n  defines.rootPath = \"./\";\n  defines.resPath = \"./assets/\";\n}\nelse {\n  defines.rootPath = \"games/test_ui/\";\n  defines.resPath = \"games/test_ui/assets/\";\n}\n\nconst Width = 480, Height = 754;\ndefines.Canvas = {\n  width: Width,\n  height: Height,\n  posX_center: Width * 0.5,\n  posY_center: Height * 0.5\n\n};\ndefines.gameTheme = 'kenney';\n\ndefines.gameURL = \"http://120.131.69.135:18888/\";\n\nexport default defines;\n\n\n/** WEBPACK FOOTER **\n ** ./src/game-defines.js\n **/","/**\n * Created by wizard on 16/3/31.\n */\nimport {BaseLayer, Inherited,Director} from \"../utility/imports.js\"\nimport mainUI from \"../ui/main-ui.js\"\nimport gameGlobal from \"../game-global.js\"\nimport InfoLayer from \"./info-layer.js\"\nimport Test2World from \"./test2-world.js\"\nconst MenuLayer = function () {\n    let that = Inherited(BaseLayer(mainUI, 'kenney'));\n    let director = Director.sharedDirector();\n    that.inheritOn('init', function () {\n\n        EZGUI.components.btn1.on('click', function (event) {\n            //gameGlobal.events.fire(\"startWorld2\");\n\n            var infoLayer = InfoLayer();\n            infoLayer.init();\n            infoLayer.add2World(that.owner);\n        });\n\n        EZGUI.components.btn2.on('click', function (event) {\n            //gameGlobal.events.fire(\"startWorld2\");\n            const test2World = Test2World();\n            test2World.init();\n            director.startWorld(test2World);\n        });\n\n        return true;\n    });\n\n    return that;\n};\nexport default MenuLayer;\n//module.exports = MenuLayer;\n\n\n/** WEBPACK FOOTER **\n ** ./src/game/menu-layer.js\n **/","/**\n * Created by wizard on 16/3/7.\n */\n\nexport default {\n  id: 'main',\n  component: 'Window',\n  header: { id: 'ttl', skin: 'blueheader', position: { x: 0, y: 0 }, height: 40, text: 'Title' },\n  draggable: true,\n  padding: 4,\n  position: { x: 0, y: 0 },\n  width: 600,\n  height: 550,\n  layout: [1, 3],\n  children: [\n    {\n      component: 'Layout',\n      position: { x: 0, y: 0 },\n      width: 500,\n      height: 150,\n      layout: [2, 2],\n      children: [\n        {\n          id: 'btn1',\n          text: 'btn',\n          font: {\n            size: '42px',\n            family: 'Skranji',\n            color: 'red'\n          },\n          component: 'Button',\n          skin: 'bluebutton',\n          position: 'center',\n          width: 190,\n          height: 80\n        },\n        {\n          id: 'btn2',\n          text: 'btn',\n          font: {\n            size: '42px',\n            family: 'Skranji',\n            color: 'red'\n          },\n          component: 'Button',\n          skin: 'bluebutton',\n          position: 'center',\n          width: 190,\n          height: 80\n        },\n        {\n          id: 'input',\n          text: '测试',\n          font: {\n            size: '42px',\n            //family: 'Skranji',\n            color: 'red'\n          },\n          component: 'Label',\n          skin: 'bluebutton',\n          position: 'center',\n          width: 190,\n          height: 80\n        }\n      ]\n    }\n  ]\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ui/main-ui.js\n **/","/**\n * Created by wizard on 16/3/31.\n */\nimport {Eventuality,ResourceManager,Helper,Director,SRequest} from \"./utility/imports.js\"\n\nconst gameGlobal = {\n    events: Eventuality({}),\n    director: Director.sharedDirector()\n}\n\nexport default gameGlobal;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/game-global.js\n **/","/**\n * Created by wizard on 16/3/31.\n */\n\nimport {ModelLayer, Inherited} from \"../utility/imports.js\"\nimport infoUI from \"../ui/info-dialog-ui.js\"\n\nconst InfoLayer = function () {\n  let that = Inherited(ModelLayer(infoUI, 'kenney'));\n\n  that.inheritOn('init', function () {\n\n    that.node.zorder = 5;\n\n    EZGUI.components.info_btn.on('click', function (event) {\n      that.removeFromWorld();\n    });\n\n\n    return true;\n  });\n\n  return that;\n};\n\nexport default InfoLayer;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/game/info-layer.js\n **/","/**\n * Created by wizard on 16/3/31.\n */\n\nexport default {\n  id: 'info_layer',\n  component: 'Window',\n  header: { id: 'ttl', skin: 'blueheader', position: { x: 0, y: 0 }, height: 40, text: 'Title' },\n  draggable: true,\n  padding: 4,\n  position: { x: 0, y: 0 },\n  width: 600,\n  height: 550,\n  layout: [1, 3],\n  children: [\n    {\n      component: 'Layout',\n      position: { x: 0, y: 0 },\n      width: 500,\n      height: 150,\n      layout: [2, 1],\n      children: [\n        {\n          id: 'info_btn',\n          text: 'btn',\n          font: {\n            size: '42px',\n            family: 'Skranji',\n            color: 'red'\n          },\n          component: 'Button',\n          skin: 'bluebutton',\n          position: 'center',\n          width: 190,\n          height: 80\n        }\n      ]\n    }\n  ]\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ui/info-dialog-ui.js\n **/","/**\n * Created by wizard on 16/3/30.\n */\nimport {Inherited, BaseWorld, resourceManager, Director} from \"../utility/imports.js\"\nimport PetActor from \"../actor/pet-actor.js\"\nimport defines from \"../game-defines.js\"\nimport gameGlobal from \"../game-global.js\"\nimport TestWorld from \"./test-world.js\"\n\nconst Test2World = function () {\n    let that = Inherited(BaseWorld());\n    let director = Director.sharedDirector();\n    var _petActor = null;\n    that.inheritOn('init', function () {\n        var options = {\n            type: \"frame\",\n            animates: {\n                idle: {\n                    pre: \"stand\",\n                    start: 1,\n                    end: 15,\n                    speed: 0.5\n                },\n                upgrade: {\n                    pre: \"weishi\",\n                    start: 1,\n                    end: 8\n                }\n            }\n        }\n\n        _petActor = PetActor(options);\n        _petActor.init(that.node);\n        _petActor.node.position.x = 240;\n        _petActor.node.position.y = 400;\n\n        _petActor.node\n            .on('touchend', function () {\n            const testWorld = TestWorld();\n            testWorld.init();\n            director.startWorld(testWorld);\n        })\n            .on('click', function () {\n                const testWorld = TestWorld();\n                testWorld.init();\n                director.startWorld(testWorld);\n            })\n    });\n\n    that.inheritOn('update', function (dt) {\n        if (_petActor) {\n            _petActor.update(dt);\n        }\n    });\n\n    return that;\n}\nexport default Test2World;\n\n\n/** WEBPACK FOOTER **\n ** ./src/game/test2-world.js\n **/","const res = {\n  \"json_kenney_atlas\": \"ui/kenney-theme/kenney-atlas.json\",\n  \"png_cat_5\": \"cat_5.png\",\n  \"png_down_grey_slide\": \"ui/kenney-theme/images/down-grey-slide.png\",\n  \"json_cat_5\": \"cat_5.json\",\n  \"png_sld_grey_line\": \"ui/kenney-theme/images/sld-grey-line.png\",\n  \"png_bomb1_selected\": \"ui/img/bomb1-selected.png\",\n  \"jpg_crusade_bg\": \"crusade-res/crusade_bg.jpg\",\n  \"json_new_skill_ui\": \"new_skill_ui.json\",\n  \"png_chongpeibutton\": \"ui/img/chongpeibutton.png\",\n  \"png_sld_grey_bg\": \"ui/kenney-theme/images/sld-grey-bg.png\",\n  \"fnt_Skranji_Bold_40\": \"ui/fonts/Skranji-Bold-40.fnt\",\n  \"png_btn_blue_line_t_down\": \"ui/kenney-theme/images/btn-blue-line-t-down.png\",\n  \"png_line\": \"ui/metalworks-theme/images/line.png\",\n  \"png_kenney_theme\": \"ui/kenney-theme/kenney-theme.png\",\n  \"png_chk_blue_checkmark\": \"ui/kenney-theme/images/chk-blue-checkmark.png\",\n  \"png_bomb2_selected\": \"ui/img/bomb2-selected.png\",\n  \"png_btn_blue_corner_bl_down\": \"ui/kenney-theme/images/btn-blue-corner-bl-down.png\",\n  \"json_metalworks_theme\": \"ui/metalworks-theme/metalworks-theme.json\",\n  \"png_icon_purifySkill_gary\": \"pet-home-res/icon_purifySkill_gary.png\",\n  \"png_btn_grey_bg_down\": \"ui/kenney-theme/images/btn-grey-bg-down.png\",\n  \"png_btn_grey_corner_br\": \"ui/kenney-theme/images/btn-grey-corner-br.png\",\n  \"png_icon_fastPrompt_normal\": \"pet-home-res/icon_fastPrompt_normal.png\",\n  \"json_kenney_theme\": \"ui/kenney-theme/kenney-theme.json\",\n  \"png_gamelogo\": \"ui/img/gamelogo.png\",\n  \"png_btn_grey_corner_bl\": \"ui/kenney-theme/images/btn-grey-corner-bl.png\",\n  \"png_darkcnt_line\": \"ui/metalworks-theme/images/darkcnt-line.png\",\n  \"png_bomb1\": \"ui/img/bomb1.png\",\n  \"png_level_box\": \"ui/img/level-box.png\",\n  \"png_bomb3\": \"ui/img/bomb3.png\",\n  \"png_bomb2\": \"ui/img/bomb2.png\",\n  \"png_btn_blue_corner_bl\": \"ui/kenney-theme/images/btn-blue-corner-bl.png\",\n  \"png_btn_grey_line_b_down\": \"ui/kenney-theme/images/btn-grey-line-b-down.png\",\n  \"png_kaishiyouxi_button\": \"ui/img/kaishiyouxi_button.png\",\n  \"png_icon_fastPrompt_gary\": \"pet-home-res/icon_fastPrompt_gary.png\",\n  \"png_bg\": \"ui/metalworks-theme/images/bg.png\",\n  \"png_chk_grey_checkmark\": \"ui/kenney-theme/images/chk-grey-checkmark.png\",\n  \"png_btn_blue_corner_br\": \"ui/kenney-theme/images/btn-blue-corner-br.png\",\n  \"png_btn_blue_line_b\": \"ui/kenney-theme/images/btn-blue-line-b.png\",\n  \"png_btn_bg\": \"ui/metalworks-theme/images/btn-bg.png\",\n  \"png_icon_firmLife_select\": \"pet-home-res/icon_firmLife_select.png\",\n  \"png_corner\": \"ui/metalworks-theme/images/corner.png\",\n  \"png_radio_checkmark\": \"ui/metalworks-theme/images/radio-checkmark.png\",\n  \"png_btn_blue_line_l\": \"ui/kenney-theme/images/btn-blue-line-l.png\",\n  \"png_btn_blue_line_r\": \"ui/kenney-theme/images/btn-blue-line-r.png\",\n  \"png_btn_grey_line_l_down\": \"ui/kenney-theme/images/btn-grey-line-l-down.png\",\n  \"png_bg_down\": \"ui/metalworks-theme/images/bg-down.png\",\n  \"png_btn_blue_line_t\": \"ui/kenney-theme/images/btn-blue-line-t.png\",\n  \"png_btn_grey_corner_bl_down\": \"ui/kenney-theme/images/btn-grey-corner-bl-down.png\",\n  \"png_radio_blue_check\": \"ui/kenney-theme/images/radio-blue-check.png\",\n  \"png_btn_blue_line_b_down\": \"ui/kenney-theme/images/btn-blue-line-b-down.png\",\n  \"png_btn_grey_line_t_down\": \"ui/kenney-theme/images/btn-grey-line-t-down.png\",\n  \"png_icon_firmLife_gary\": \"pet-home-res/icon_firmLife_gary.png\",\n  \"png_jineng_bg\": \"ui/img/jineng_bg.png\",\n  \"png_btn_blue_corner_tr\": \"ui/kenney-theme/images/btn-blue-corner-tr.png\",\n  \"png_btn_blue_line_l_down\": \"ui/kenney-theme/images/btn-blue-line-l-down.png\",\n  \"png_icon_purifySkill_select\": \"pet-home-res/icon_purifySkill_select.png\",\n  \"png_btn_blue_bg\": \"ui/kenney-theme/images/btn-blue-bg.png\",\n  \"png_btn_grey_corner_tl_down\": \"ui/kenney-theme/images/btn-grey-corner-tl-down.png\",\n  \"png_icon_injurePlus_normal\": \"pet-home-res/icon_injurePlus_normal.png\",\n  \"png_new_skill_ui\": \"new_skill_ui.png\",\n  \"png_sld_grey_corner\": \"ui/kenney-theme/images/sld-grey-corner.png\",\n  \"png_panel_650x400\": \"ui/img/panel-650x400.png\",\n  \"png_pet1\": \"pet1.png\",\n  \"png_pet3\": \"pet3.png\",\n  \"png_pet2\": \"pet2.png\",\n  \"png_icon_injurePlus_select\": \"pet-home-res/icon_injurePlus_select.png\",\n  \"png_btn_grey_line_r_down\": \"ui/kenney-theme/images/btn-grey-line-r-down.png\",\n  \"png_icon_fastEnergy_normal\": \"pet-home-res/icon_fastEnergy_normal.png\",\n  \"png_wnd_grey_bg\": \"ui/kenney-theme/images/wnd-grey-bg.png\",\n  \"fnt_desyrel\": \"ui/fonts/desyrel.fnt\",\n  \"png_star2\": \"ui/img/star2.png\",\n  \"png_icon_firmLife_normal\": \"pet-home-res/icon_firmLife_normal.png\",\n  \"png_icon_fastEnergy_select\": \"pet-home-res/icon_fastEnergy_select.png\",\n  \"png_btn_grey_line_r\": \"ui/kenney-theme/images/btn-grey-line-r.png\",\n  \"png_btn_grey_line_t\": \"ui/kenney-theme/images/btn-grey-line-t.png\",\n  \"png_btn_blue_corner_tl_down\": \"ui/kenney-theme/images/btn-blue-corner-tl-down.png\",\n  \"png_chk_checkmark\": \"ui/metalworks-theme/images/chk-checkmark.png\",\n  \"png_btn_grey_line_b\": \"ui/kenney-theme/images/btn-grey-line-b.png\",\n  \"json_pet1\": \"pet1.json\",\n  \"json_pet3\": \"pet3.json\",\n  \"json_pet2\": \"pet2.json\",\n  \"png_icon_fastPrompt_select\": \"pet-home-res/icon_fastPrompt_select.png\",\n  \"png_btn_grey_line_l\": \"ui/kenney-theme/images/btn-grey-line-l.png\",\n  \"png_wnd_grey_line\": \"ui/kenney-theme/images/wnd-grey-line.png\",\n  \"png_btn_corner\": \"ui/metalworks-theme/images/btn-corner.png\",\n  \"png_darkcnt_corner\": \"ui/metalworks-theme/images/darkcnt-corner.png\",\n  \"png_btn_line\": \"ui/metalworks-theme/images/btn-line.png\",\n  \"png_btn_grey_corner_tr_down\": \"ui/kenney-theme/images/btn-grey-corner-tr-down.png\",\n  \"png_chk_grey_corner\": \"ui/kenney-theme/images/chk-grey-corner.png\",\n  \"png_btn_bg_down\": \"ui/metalworks-theme/images/btn-bg-down.png\",\n  \"png_btn_blue_corner_br_down\": \"ui/kenney-theme/images/btn-blue-corner-br-down.png\",\n  \"png_bomb3_selected\": \"ui/img/bomb3-selected.png\",\n  \"png_btn_grey_corner_br_down\": \"ui/kenney-theme/images/btn-grey-corner-br-down.png\",\n  \"png_btn_blue_line_r_down\": \"ui/kenney-theme/images/btn-blue-line-r-down.png\",\n  \"png_btn_blue_corner_tr_down\": \"ui/kenney-theme/images/btn-blue-corner-tr-down.png\",\n  \"png_icon_purifySkill_normal\": \"pet-home-res/icon_purifySkill_normal.png\",\n  \"png_wnd_grey_corner\": \"ui/kenney-theme/images/wnd-grey-corner.png\",\n  \"png_btn_grey_corner_tl\": \"ui/kenney-theme/images/btn-grey-corner-tl.png\",\n  \"png_Skranji_Bold_40\": \"ui/fonts/Skranji-Bold-40.png\",\n  \"png_btn_grey_bg\": \"ui/kenney-theme/images/btn-grey-bg.png\",\n  \"png_btn_blue_corner_tl\": \"ui/kenney-theme/images/btn-blue-corner-tl.png\",\n  \"png_down_grey_slide_down\": \"ui/kenney-theme/images/down-grey-slide-down.png\",\n  \"png_lvlcomplete\": \"ui/img/lvlcomplete.png\",\n  \"png_orange_btn\": \"ui/img/orange-btn.png\",\n  \"png_icon_injurePlus_gary\": \"pet-home-res/icon_injurePlus_gary.png\",\n  \"png_btn_grey_corner_tr\": \"ui/kenney-theme/images/btn-grey-corner-tr.png\",\n  \"png_feathers_metal_works_desktop_theme\": \"ui/metalworks-theme/feathers-metal-works-desktop-theme.png\",\n  \"png_icon_fastEnergy_gary\": \"pet-home-res/icon_fastEnergy_gary.png\",\n  \"png_desyrel\": \"ui/fonts/desyrel.png\",\n  \"png_jineng_0\": \"ui/img/jineng_0.png\",\n  \"png_jineng_1\": \"ui/img/jineng_1.png\",\n  \"png_jineng_2\": \"ui/img/jineng_2.png\",\n  \"png_jineng_3\": \"ui/img/jineng_3.png\",\n  \"png_jineng_4\": \"ui/img/jineng_4.png\",\n  \"png_header_bg\": \"ui/metalworks-theme/images/header-bg.png\",\n  \"png_radio_grey_check\": \"ui/kenney-theme/images/radio-grey-check.png\",\n  \"png_btn_blue_bg_down\": \"ui/kenney-theme/images/btn-blue-bg-down.png\"\n}\nexport default res\n\n\n/** WEBPACK FOOTER **\n ** ./src/resources.js\n **/","/**\n * Created by hewenlong on 16-4-1.\n */\n\nimport {BaseLayer, Inherited,Director, Helper} from \"../utility/imports.js\"\nimport {SkillUI, SkillLabel} from \"../ui/skill-list-ui.js\"\nimport SkillUpgradeLayer from \"./skill-upgrade-layer.js\"\n\nconst SkillLayer = function (spec) {\n  let that = Inherited(BaseLayer(SkillUI, 'kenney'));\n\n  that.inheritOn('init', function () {\n    for (let i = 0; i < spec.length; i++) {\n      let info = spec[i];\n      info.skillName = \"宠物技能\"+ (i + 1);\n      info.description = \"宠物技能\" + (i+1) +\"，造成伤害xxx\";\n      var skillLabel = EZGUI.create(SkillLabel(info), 'kenney');\n      let desText = EZGUI.components.description;\n      Helper.wordWrapText(desText.textObj);\n      EZGUI.components.btn.on(\"click\", that.btnClick);\n      EZGUI.components.skillList.addChild(skillLabel);\n    }\n\n    return true;\n  });\n\n  that.inheritOn(\"add2World\", function (world) {\n    that.btnClick({target: {userData: 0}});\n  });\n\n  that.btnClick = function (event) {\n    let targetId = event.target.userData;\n    let skillUpgradeLayer = SkillUpgradeLayer({id: targetId});\n    skillUpgradeLayer.init();\n    skillUpgradeLayer.add2World(that.owner);\n  };\n  return that;\n};\nexport default SkillLayer;\n\n\n/** WEBPACK FOOTER **\n ** ./src/game/skill-list-layer.js\n **/","/**\n * Created by hewenlong on 16-4-1.\n */\n\nvar SkillLabel = function(cfg) {\n  var that = {\n    id: \"skillLabel\",\n    component: 'Layout',\n    image: 'icon_activity_0.png',\n    userData: 0,\n    position: 'center',\n    width: 450,\n    height: 120,\n    layout: [3, 1],\n    children: [\n      {\n        id: 'skillIcon',\n        position: {x: 0, y: 0},\n        image: \"\",\n        width: 120,\n        height: 120\n      },\n      {\n        component: \"Layout\",\n        width: 200,\n        height: 100,\n        position: 'center',\n        layout: [1, 2],\n        children: [\n          {\n            id: \"skillName\",\n            text: \"skill\",\n            font: {\n              size: '30px'\n            },\n            component: 'Label',\n            position: {x: 0, y: 0},\n            anchor: {x: 0, y: 0},\n            width: 100,\n            height: 30\n          },\n          {\n            id: \"description\",\n            text: \"技能介绍\",\n            font: {\n              size: '22px',\n              family: 'Arial',\n              color: 'orange',\n              align: 'left',\n              wordWrap: true,\n              wordWrapWidth: 200\n            },\n            component: 'Label',\n            anchor: {x: 0, y: 0.5},\n            position: {x: 0, y: 10},\n            width: 200,\n            height: 80\n          }\n        ]\n      },\n      {\n        id: 'btn',\n        text: '升级',\n        font: {\n          size: '22px',\n          color: 'green'\n        },\n        userData: 0,\n        component: 'Button',\n        skin: 'bluebutton',\n        position: {x: 30, y: 30},\n        width: 100,\n        height: 60\n      }\n    ]\n  };\n\n  (()=> {\n    console.log(\"skill info\", JSON.stringify(cfg));\n    let id = cfg.id;\n    that.userData = id;\n    that.children[0].image = \"skill_\" + (id + 1) + \".png\";\n    that.children[2].userData = id;\n    let skillInfo = that.children[1];\n    skillInfo.children[0].text = cfg.skillName;\n    skillInfo.children[1].text = cfg.description;\n  })();\n\n  return that;\n};\n\nvar SkillUI = {\n  component: 'Window',\n  draggable: false,\n  padding: 0,\n  position: {x: 0, y: 0},\n  width: 480,\n  height: 754,\n  layout: [1, 2],\n  children: [\n    {\n      id: \"skillTitle\",\n      text: '技能列表',\n      component: 'Label',\n      font: {\n        size: '40px',\n        color: 'blue',\n        align: \"center\"\n      },\n      width: 0,\n      height: 0,\n      position: {x: 240, y: 50}\n    },\n    {\n      id: \"skillList\",\n      component: 'List',\n      width: 460,\n      height: 650,\n      position: {x: 10, y: -290},\n      layout: [1, 5],\n      children: []\n    }\n  ]\n};\n\nexport {\n  SkillUI,\n  SkillLabel\n  }\n\n\n/** WEBPACK FOOTER **\n ** ./src/ui/skill-list-ui.js\n **/","/**\n * Created by hewenlong on 16-4-6.\n */\n\nimport {BaseLayer, Inherited, Helper} from \"../utility/imports.js\"\nimport SkillUpgradeUi from \"../ui/skill-upgrade-ui.js\"\n\nconst SkillUpgradeLayer = function (spec) {\n  let that = Inherited(BaseLayer(SkillUpgradeUi(), \"kenney\"));\n\n  that.inheritOn(\"init\", function () {\n    Helper.wordWrapText(EZGUI.components.skillDescription.textObj);\n\n\n    console.log(\"image width\",EZGUI.components.upImage.rootSprite.width);\n    var width = 200 * 0.8;\n    EZGUI.components.upImage.rootSprite.width *= 0.7;\n\n    EZGUI.components.backBtn.on(\"click\", function (event, target) {\n      that.removeFromWorld();\n    });\n    return true;\n  });\n\n  return that;\n};\n\nexport default SkillUpgradeLayer\n\n\n/** WEBPACK FOOTER **\n ** ./src/game/skill-upgrade-layer.js\n **/","/**\n * Created by hewenlong on 16-4-6.\n */\n\nvar SkillUpgradeUI = function (cfg) {\n  let that = {\n    component: 'Window',\n    draggable: false,\n    padding: 0,\n    position: {x: 0, y: 0},\n    width: 480,\n    height: 754,\n    layout: [1, 5],\n    children: [\n      {\n        id : \"skillTitle\",\n        component:\"Layout\",\n        text: '技能升级',\n        font: {\n          size: \"36px\",\n          color : \"purple\"\n        },\n        position: {x: 0, y : 0},\n        width: 480,\n        height: 80,\n        layout: [1, 1],\n        children: [\n          {\n            id : \"backBtn\",\n            component:\"Button\",\n            text: '返回',\n            font: {\n              size: \"22px\",\n              color : \"blue\"\n            },\n            position: {x: 10, y : 10},\n            width: 80,\n            height: 50\n          }\n        ]\n      },\n      {\n        id: \"skillInfo\",\n        component: \"Layout\",\n        width: 490,\n        height: 250,\n        image:  'icon_bloodDown.png',\n        position: {x: 0, y: -70},\n        layout: [7,1],\n        children: [\n          {id: \"skillIcon\", image: 'skill_1.png', position: {x: 0, y: 50}, width: 150, height: 150},\n          {id: \"skillName\", component: 'Label', text: '宠物技能', font: {size: \"26px\"}, position: {x: 200, y: 0}, width: 50, height: 50},\n          {id: 'skillDescription', component: 'Label', text: '宠物技能描述宠物技能描述宠物技能描述',font: {size: '24px', wordWrap: true, wordWrapWidth: 320}, anchor: {x: 0, y: 0.5}, position: {x: 10, y: 90}, width: 50, height: 50},\n          {\n            component: \"Layout\",\n            width: 240,\n            height: 50,\n            position: {x: -65, y: 130},\n            layout: [8,1],\n            children: [\n              {id: \"icon1\", image: 'icon_lifePet_big.png', position: {x: 0, y: 0}, width: 30, height: 30},\n              {id: \"icon1\", image: 'icon_lifePet_big.png', position: {x: 0, y: 0}, width: 30, height: 30},\n              {id: \"icon1\", image: 'icon_lifePet_big.png', position: {x: 0, y: 0}, width: 30, height: 30},\n              {id: \"icon1\", image: 'icon_lifePet_big.png', position: {x: 0, y: 0}, width: 30, height: 30},\n              {id: \"icon1\", image: 'icon_lifePet_big.png', position: {x: 0, y: 0}, width: 30, height: 30},\n              {id: \"level\", component: 'Label', text: '1段5级', font: {size: \"22px\"}, position: {x: 20, y: 0}, width: 30, height: 30}\n            ]\n          },\n          {\n            component: \"Layout\",\n            width: 240,\n            height: 100,\n            position: {x: -135, y: 180},\n            layout: [3,1],\n            children: [\n              {id: \"level\", component: 'Label', text: '祝福值', font: {size: \"22px\"}, position: {x: 20, y: 0}, width: 30, height: 30},\n              {id: \"downImage\", image: 'icon_bloodDown.png', position: {x: 0, y: 0}, width: 200, height: 30, anchor: {x: 0, y: 0.5}},\n              {id: \"upImage\", image: 'icon_bloodRed.png', position: {x: -80, y: 0}, width: 200, height: 30, anchor: {x: 0, y: 0.5}}\n            ]\n          }\n        ]\n      }\n    ]\n  };\n\n  return that;\n};\n\nexport default SkillUpgradeUI\n\n\n/** WEBPACK FOOTER **\n ** ./src/ui/skill-upgrade-ui.js\n **/","/**\n * Created by John on 16/4/1.\n */\nimport {Inherited, BaseWorld, ResourceManager, Director, SRequest, Helper} from \"../utility/imports.js\"\nimport PetActor from \"../actor/pet-actor.js\"\nimport defines from \"../game-defines.js\"\nimport gameGlobal from \"../game-global.js\"\nimport DefenseLogLayer from \"./defenseLog-layer.js\"\nimport DefenseLogUI from \"../ui/defenseLog-ui.js\"\nimport res from '../resources.js'\n\nexport default function CrusadeWorld() {\n    let that = Inherited(BaseWorld() );\n    let director = Director.sharedDirector();\n    that.inheritOn('init', function () {\n        ResourceManager.load(res.jpg_crusade_bg, function () {\n            let bg = Helper.createSprite(res.jpg_crusade_bg);\n            bg.zorder = 0;\n            that.node.addChild(bg);\n            Helper.reorderNode(that.node);\n        });\n\n        //ResourceManager.load(res.json_cat_5, function (res, name) {\n        //    var options = {\n        //        type: \"spine\",\n        //        spineData: res.spineData\n        //    }\n        //\n        //    var petActor = PetActor(options);\n        //    petActor.init(that.node);\n        //    petActor.node.position.x = 120;\n        //    petActor.node.position.y = 750;\n        //    petActor.node.zorder = 4;\n        //\n        //    Helper.reorderNode(that.node);\n        //});\n\n        SRequest.get(defines.gameURL, \"s/Info/GetDefendRecords\", {\"pet_id\": 10000}, function (data) {\n            console.log('log-' + JSON.stringify(data));\n\n            var ui = DefenseLogUI();\n            ui.createUI(data);\n            var defenseLog = DefenseLogLayer(ui.layout);\n\n            defenseLog.init();\n            defenseLog.node.zorder = 5;\n            defenseLog.add2World(that);\n\n            Helper.reorderNode(that.node);\n        });\n\n        return true;\n    });\n\n    that.inheritOn('update', function (dt) {\n    });\n\n    return that;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/game/crusade-world.js\n **/","/**\n * Created by John on 16/4/1.\n */\nimport {BaseLayer, Inherited, Director} from \"../utility/imports.js\"\n//import defenseLogUI from \"../ui/defenseLog-ui.js\"\nimport gameGlobal from \"../game-global.js\"\nimport defines from \"../game-defines.js\"\n\n//const getItem = function (data) {\n//    let that = {\n//        id: 'id'+data.enemy_id,\n//        text: data.tm+'attacked by'+data.enemy_nickname+'with his pet.lost'+data.loss_gold+'gold',\n//        font: {size: '26px', color: 'black', align: \"left\",\n//            wordWrap: true,\n//            wordWrapWidth: 480\n//        },\n//        component: 'Label',\n//        position:'left',\n//        width: 480,\n//        height: 100\n//    };\n//\n//    return that;\n//};\n//\n//that.createUI = function(data){\n//    let that = {};\n//    let children = [];\n//    let row = data.res.length;\n//\n//    for (var i = 0; i < data.res.length; i++){\n//        console.log('getItem-'+i+JSON.stringify(data.res[i]));\n//        let child = getItem(data.res[i]);\n//        children.push(child);\n//    }\n//    that.layout = {\n//        id: 'defenseLog',\n//        component: 'Window',\n//        header: { id: 'ttl', skin: 'blueheader', position: { x: 0, y: 0 }, height: 40, text: 'defense log' },\n//        padding: 4,\n//        position: {x: 0, y: 0},\n//        width: defines.Canvas.width,\n//        height: defines.Canvas.height,\n//        layout: [1, 1],\n//        children: [\n//            {\n//                id: 'logList',\n//                component: 'List',\n//                position: {x: 0, y: 0},\n//                width: defines.Canvas.width,\n//                height: 100*row,\n//                layout: [1, row],\n//                children: children\n//            }\n//        ]\n//    };\n//\n//    return that;\n//}\n\n//const requestLogData = function(){\n//    let logData = {}\n//    SRequest().get(defines.gameURL, \"s/Info/GetDefendRecords\", {\"pet_id\": 10000}, function (data) {\n//        console.log('log-' + JSON.stringify(data));\n//        logData = data;\n//    });\n//    return logData;\n//}\n\nexport default function DefenseLogLayer(ui) {\n\n    //let data = {\"res\":[{\"enemy_id\":100001,\"enemy_nickname\":\"金城武\",\"loss_gold\":10,\"result\":1,\"tm\":\"2016-03-28 16:58\"},{\"enemy_id\":100001,\"enemy_nickname\":\"金城武\",\"loss_gold\":10,\"result\":1,\"tm\":\"2016-03-28 16:58\"},{\"enemy_id\":100001,\"enemy_nickname\":\"金城武\",\"loss_gold\":10,\"result\":1,\"tm\":\"2016-03-28 16:58\"}],\"status\":\"ok\",\"tm\":1459503584}\n    //let that = Inherited(BaseLayer(defenseLogUI, 'kenney') );\n    let that = Inherited(BaseLayer(ui, 'kenney') );\n    //SRequest().get(defines.gameURL, \"s/Info/GetDefendRecords\", {\"pet_id\": 10000}, function (data) {\n    //    console.log('log-'+JSON.stringify(data));\n    //    let ui = createUI(data);\n        //let that = Inherited(BaseLayer(ui.layout, 'kenney') );\n        //for(var i = 0; i < data.res.length; i++){\n        //    console.log('log-'+i+JSON.stringify(data.res[i]));\n        //}\n    //});\n    //let director = Director.sharedDirector();\n    that.inheritOn('init', function () {\n        return true;\n    });\n\n    return that;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/game/defenseLog-layer.js\n **/","/**\n * Created by John on 16/3/29.\n */\n//import {BaseLayer, Inherited, Director, SRequest} from \"../utility/imports.js\"\n//import defenseLogUI from \"../ui/defenseLog-ui.js\"\nimport gameGlobal from \"../game-global.js\"\nimport defines from \"../game-defines.js\"\n\nconst getItem = function (data) {\n    let that = {\n        id: 'id'+data.enemy_id,\n        text: data.tm+'attacked by'+data.enemy_nickname+'with his pet.lost'+data.loss_gold+'gold',\n        font: {size: '26px', color: 'black', align: \"left\",\n            wordWrap: true,\n            wordWrapWidth: 480\n        },\n        component: 'Label',\n        position:'left',\n        width: 480,\n        height: 100\n    };\n\n    return that;\n};\nexport default function DefenseLogUI() {\n    var that = {};\n    that.layout = null;\n    that.createUI = function(data) {\n        let children = [];\n        let row = data.res.length;\n\n        for (var i = 0; i < data.res.length; i++) {\n            console.log('getItem-' + i + JSON.stringify(data.res[i]));\n            let child = getItem(data.res[i]);\n            children.push(child);\n        }\n        that.layout = {\n            id: 'defenseLog',\n            component: 'Window',\n            header: {id: 'ttl', skin: 'blueheader', position: {x: 0, y: 0}, height: 40, text: 'defense log'},\n            padding: 4,\n            position: {x: 0, y: 0},\n            width: defines.Canvas.width,\n            height: defines.Canvas.height/2,\n            layout: [1, 1],\n            children: [\n                {\n                    id: 'logList',\n                    component: 'List',\n                    position: {x: 0, y: 0},\n                    width: defines.Canvas.width,\n                    height: 100 * row,\n                    layout: [1, row],\n                    children: children\n                }\n            ]\n        };\n    }\n    return that;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ui/defenseLog-ui.js\n **/","/**\n * Created by guolei on 16/4/1.\n */\nimport {Inherited, BaseWorld, ResourceManager, Director,Helper} from \"../../utility/imports.js\"\nimport res from '../../resources.js'\nimport PetActor from \"../../actor/pet-actor.js\"\nimport  GameDefine from '../../game-defines'\nimport PetHomeUI from '../../ui/pet-home-ui'\nconst PetHome = function () {\n  let that = Inherited(BaseWorld());\n\n  that.inheritOn('init', function () {\n    ResourceManager.load(res.png_bj, function () {\n      let bac = Helper.createSprite(res.png_bj);\n      that.node.addChild(bac);\n    });\n    ResourceManager.load(res.json_cat_5,function(res){\n      let  options = {\n        type: \"spine\",\n        spineData: res.spineData\n      }\n      let cat =PetActor(options);\n      cat.init(that.node);\n      cat.node.position.x = GameDefine.Canvas.posX_center;\n      cat.node.position.y =  550;\n      cat.node.zorder = 4;\n      Helper.reorderNode(that.node);\n    });\n\n\n    return true;\n  });\n\n  that.inheritOn('update', function () {\n\n  });\n\n\n  return that;\n};\nexport default PetHome;\n\n\n/** WEBPACK FOOTER **\n ** ./src/game/pet-home/pet-home-world.js\n **/","/**\n * Created by guolei on 16/4/7.\n */\nimport  GameDefine from '../game-defines';\nimport resource from '../resources'\nconst PetHomeUI = function () {\n  let that = {};\n  that.node = {\n    id: \"skillLabel\",\n    component: 'Layout',\n    position: {x: 0, y: 0},\n    width: GameDefine.Canvas.width,\n    height: GameDefine.Canvas.height,\n    layout: [1, 2],\n    children: [\n      {\n        id: 'btn2',\n        text: 'btn',\n        font: {\n          size: '42px',\n          family: 'Skranji',\n          color: 'red'\n        },\n        component: 'Button',\n        skin: 'bluebutton',\n        position: 'center',\n        width: 190,\n        height: 80\n      },\n      {\n        id: 'btn2',\n        text: 'btn',\n        font: {\n          size: '42px',\n          family: 'Skranji',\n          color: 'red'\n        },\n        component: 'Button',\n        skin: 'bluebutton',\n        position: 'center',\n        width: 190,\n        height: 80\n      }\n    ]\n  };\n\n  return that;\n};\nexport default PetHomeUI;\n\n\n/** WEBPACK FOOTER **\n ** ./src/ui/pet-home-ui.js\n **/"],"sourceRoot":""}